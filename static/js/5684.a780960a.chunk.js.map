{"version":3,"file":"static/js/5684.a780960a.chunk.js","mappings":"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","sources":["modules/components/pages/Form2.tsx"],"sourcesContent":["import {\r\n  Form,\r\n  useForm,\r\n  resetFormValues,\r\n  FormValuesWatcher,\r\n  DatePicker,\r\n  FormControl,\r\n  Toggle,\r\n  TextField,\r\n  DateRangePicker,\r\n  useFormDateRangeProps,\r\n} from \"@faharmony/form\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { Button, Divider, InfoBox } from \"@faharmony/components\";\r\nimport { ContentView, PageView } from \"@faharmony/views\";\r\nimport React from \"react\";\r\n\r\ntype FormInputs = {\r\n  testDate: Date;\r\n  realDate: Date;\r\n  toggle: boolean;\r\n  number: number;\r\n  startDate: Date;\r\n  endDate: Date;\r\n};\r\n\r\nconst defaultValues: Partial<FormInputs> = {\r\n  testDate: new Date(),\r\n  realDate: new Date(\"2020-12-12\"),\r\n  toggle: true,\r\n  number: 1343400.234,\r\n  startDate: undefined,\r\n  endDate: undefined,\r\n};\r\n\r\nconst enabledDates = [\r\n  new Date(),\r\n  new Date(\"2021-03-12\"),\r\n  new Date(\"2021-03-29\"),\r\n];\r\n\r\nconst FormNode = () => {\r\n  const formMethods = useForm<FormInputs>({\r\n    defaultValues,\r\n    criteriaMode: \"all\",\r\n  });\r\n  const { control, handleSubmit, register, setValue } = formMethods;\r\n\r\n  const onSubmit = handleSubmit(console.log);\r\n  return (\r\n    <ContentView\r\n      headerTitle=\"Form\"\r\n      onClose={() => {\r\n        console.log(\"close\");\r\n      }}\r\n      headerActions={\r\n        <Button onClick={() => {}} disabled>\r\n          Disabled Action\r\n        </Button>\r\n      }\r\n      headerAdditionalContentToggleButtonEnabled\r\n      headerAdditionalContent={\r\n        <Box direction=\"column\">\r\n          <Box spacing=\"xl\" wrap=\"wrap\">\r\n            <Box width={\"auto\"} direction=\"column\">\r\n              <InfoBox field=\"Info\">Hello World!</InfoBox>\r\n            </Box>\r\n            <Box width={\"auto\"} direction=\"column\">\r\n              <InfoBox field=\"Info\">Hello World!</InfoBox>\r\n            </Box>\r\n            <Box width={\"auto\"} direction=\"column\">\r\n              <InfoBox field=\"Info\">Hello World!</InfoBox>\r\n            </Box>\r\n            <Box width={\"auto\"} direction=\"column\">\r\n              <InfoBox field=\"Info\">Hello World!</InfoBox>\r\n            </Box>\r\n            <Box width={\"auto\"} direction=\"column\">\r\n              <InfoBox field=\"Info\">Hello World!</InfoBox>\r\n            </Box>\r\n            <Box width={\"auto\"} direction=\"column\">\r\n              <InfoBox field=\"Info\">Hello World!</InfoBox>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      }\r\n    >\r\n      <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\r\n        <Box direction=\"column\" width={\"350px\"} alignItems=\"start\">\r\n          <FormControl label=\"Date\">\r\n            <DatePicker name=\"testDate\" includeDates={enabledDates} />\r\n          </FormControl>\r\n          <FormControl label=\"Date (disabled)\">\r\n            <DatePicker\r\n              name=\"realDate\"\r\n              onChange={console.log}\r\n              includeDates={[new Date()]}\r\n              disabled\r\n            />\r\n          </FormControl>\r\n          <Box>\r\n            <FormControl label=\"Toggle (enabled)\">\r\n              <Toggle\r\n                name=\"toggle\"\r\n                registerRef={register(\"realDate\")}\r\n                label=\"Hello world\"\r\n              />\r\n            </FormControl>\r\n            <FormControl label=\"Toggle (disabled)\">\r\n              <Box>\r\n                <Toggle disabled />\r\n                <Toggle disabled checked={true} />\r\n              </Box>\r\n            </FormControl>\r\n          </Box>\r\n          <FormControl label=\"NumberField\">\r\n            <TextField\r\n              name=\"number\"\r\n              registerRef={register(\"number\")}\r\n              prefixText=\"EUR\"\r\n              isClearable\r\n              onInputClear={() => setValue(\"number\", \"\" as any)}\r\n            />\r\n          </FormControl>\r\n          <Divider />\r\n\r\n          <UserFormDateRangeField />\r\n          <Box justifyContent=\"space-between\">\r\n            <Box width=\"auto\">\r\n              <Button\r\n                value=\"Reset\"\r\n                variant=\"secondary\"\r\n                loading\r\n                onClick={() => resetFormValues(control)}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                onClick={onSubmit}\r\n                variant=\"primary\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <div>\r\n          <FormValuesWatcher />\r\n        </div>\r\n      </Form>\r\n    </ContentView>\r\n  );\r\n};\r\n\r\nconst Page = () => (\r\n  <PageView heading=\"Form\" overflow=\"scroll\">\r\n    <FormNode />\r\n    <Box style={{ width: \"300px\" }}>\r\n      <FormControl label=\"Date (readonly)\">\r\n        <DatePicker\r\n          name=\"realDate\"\r\n          onChange={console.log}\r\n          selected={new Date()}\r\n          readOnly\r\n        />\r\n      </FormControl>\r\n\r\n      <InfoBox field=\"Date \">\r\n        <DatePicker\r\n          name=\"realDate\"\r\n          onDateChange={console.log}\r\n          selected={new Date()}\r\n        />\r\n      </InfoBox>\r\n    </Box>\r\n\r\n    <UserFormDateRangeField2 />\r\n  </PageView>\r\n);\r\n\r\nexport default Page;\r\n\r\nconst UserFormDateRangeField: React.FC = () => {\r\n  const props = useFormDateRangeProps(\r\n    \"startDate\",\r\n    \"endDate\",\r\n    new Date(\"2021/05/04 22:21\"),\r\n    new Date(\"2021/06/04 15:30\")\r\n  );\r\n\r\n  return (\r\n    <FormControl label=\"Date Range in a Form\" required>\r\n      <DateRangePicker\r\n        {...props}\r\n        onStartCalenderClose={() => {\r\n          console.log(\"start calender closed \");\r\n        }}\r\n        onEndCalenderClose={() => {\r\n          console.log(\"end calender closed \");\r\n        }}\r\n        showCustomTimeSelector\r\n        hideTodayButton\r\n      ></DateRangePicker>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst UserFormDateRangeField2: React.FC = () => {\r\n  const [startDate, setStartDate] = React.useState<Date | undefined>(\r\n    new Date(\"2021/05/04 22:21\")\r\n  );\r\n  const [endDate, setEndDate] = React.useState<Date | undefined>(\r\n    new Date(\"2021/05/04 22:21\")\r\n  );\r\n\r\n  React.useEffect(\r\n    () =>\r\n      console.log(\r\n        \"This is date state controlled date range outside a form \",\r\n        startDate,\r\n        endDate\r\n      ),\r\n    [startDate, endDate]\r\n  );\r\n\r\n  return (\r\n    <Box justifyContent=\"flex-start\">\r\n      <FormControl label=\"Test Range without form \" required>\r\n        <Box width={\"min-content\"}>\r\n          <DateRangePicker\r\n            endDate={endDate}\r\n            startDate={startDate}\r\n            setEndDate={setEndDate}\r\n            setStartDate={setStartDate}\r\n            onStartCalenderClose={() => {\r\n              console.log(\"start calender closed \");\r\n            }}\r\n            onEndCalenderClose={() => {\r\n              console.log(\"end calender closed \");\r\n            }}\r\n            showCustomTimeSelector\r\n          ></DateRangePicker>\r\n        </Box>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n"],"names":["defaultValues","testDate","Date","realDate","toggle","number","startDate","undefined","endDate","enabledDates","FormNode","formMethods","useForm","criteriaMode","control","handleSubmit","register","setValue","onSubmit","console","log","_jsx","ContentView","headerTitle","onClose","headerActions","Button","onClick","disabled","children","headerAdditionalContentToggleButtonEnabled","headerAdditionalContent","Box","direction","_jsxs","spacing","wrap","width","InfoBox","field","Form","style","alignItems","FormControl","label","DatePicker","name","includeDates","onChange","Toggle","registerRef","checked","TextField","prefixText","isClearable","onInputClear","Divider","UserFormDateRangeField","justifyContent","value","variant","loading","resetFormValues","type","FormValuesWatcher","Page","PageView","heading","overflow","selected","readOnly","onDateChange","UserFormDateRangeField2","props","useFormDateRangeProps","required","DateRangePicker","onStartCalenderClose","onEndCalenderClose","showCustomTimeSelector","hideTodayButton","setStartDate","React","setEndDate"],"sourceRoot":""}