{"version":3,"file":"static/js/9663.33a7a4f5.chunk.js","mappings":"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","sources":["modules/components/pages/MuiPageView.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { useDemoData } from \"@mui/x-data-grid-generator\";\r\n\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Button,\r\n  IMuiPageViewProps,\r\n  MuiPageView,\r\n  SideView,\r\n  Chip,\r\n  Box,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@faharmony/mui\";\r\n\r\nimport { Sync } from \"@faharmony/mui/icons-material\";\r\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers-pro\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nconst Page = () => {\r\n  const [showToolBar, setShowToolbar] = useState(true);\r\n  const [showBackBtn, setShowBackBtn] = useState(true);\r\n  const [fullWIndow, setFullWIndow] = useState(false);\r\n  const [sticky, setSticky] = useState(true);\r\n  const [variant, setVariant] = useState(\"secondary\");\r\n  const [sideView, setSideView] = useState(false);\r\n  return (\r\n    <>\r\n      <MuiPageView\r\n        id={\"testPageView\"}\r\n        headerVariant={variant as IMuiPageViewProps[\"headerVariant\"]}\r\n        fullWindow={fullWIndow}\r\n        stickyHeader={sticky}\r\n        backButton={\r\n          showBackBtn\r\n            ? {\r\n                backButtonAdditionalActions: () => {\r\n                  console.log(\"Back button clicked\", showBackBtn);\r\n                },\r\n                label: \"Go back\",\r\n              }\r\n            : false\r\n        }\r\n        heading=\"Shareholders registry\"\r\n        actions={\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() =>\r\n                setVariant(variant === \"secondary\" ? \"primary\" : \"secondary\")\r\n              }\r\n            >\r\n              Switch variant\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() => setSticky(!sticky)}\r\n            >\r\n              Toggle sticky header\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() => setShowToolbar(!showToolBar)}\r\n            >\r\n              {showToolBar ? \"Hide tool bar\" : \"Show tool bar\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() => setShowBackBtn(!showBackBtn)}\r\n            >\r\n              {showBackBtn ? \"Hide back button\" : \"Show back button\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() => setFullWIndow(!fullWIndow)}\r\n            >\r\n              {\"Toggle full window\"}\r\n            </Button>\r\n            <IconButton>\r\n              <Sync />\r\n            </IconButton>\r\n          </>\r\n        }\r\n        toolbarContent={showToolBar ? <Toolbar /> : null}\r\n        sxProps={{ p: 0 }}\r\n      >\r\n        <Content setSideView={setSideView} />\r\n      </MuiPageView>\r\n      <SideDrawer\r\n        open={sideView}\r\n        onClose={() => {\r\n          console.log(\"Close\");\r\n          setSideView(false);\r\n        }}\r\n      ></SideDrawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nconst Toolbar = () => {\r\n  return (\r\n    <Grid item xs={12} alignItems=\"center\">\r\n      <FormControl variant=\"outlined\" size=\"small\" sx={{ mr: 2 }}>\r\n        <InputLabel id=\"demo-simple-select-label\">Fund</InputLabel>\r\n        <Select\r\n          label=\"Fund\"\r\n          labelId=\"demo-simple-select-label\"\r\n          value=\"FA Equity Fund\"\r\n        >\r\n          <MenuItem value=\"FA Equity Fund\">FA Equity Fund</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DatePicker\r\n          label=\"Registry date\"\r\n          value={new Date()}\r\n          slotProps={{ textField: { size: \"small\" } }}\r\n          sx={{ mr: 2 }}\r\n        />\r\n      </LocalizationProvider>\r\n\r\n      <FormControlLabel\r\n        control={<Checkbox onChange={() => {}} />}\r\n        label=\"Load purchase lots\"\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Content = (props: { setSideView: any }) => {\r\n  const { data } = useDemoData({\r\n    dataSet: \"Commodity\",\r\n    rowLength: 100,\r\n    maxColumns: 6,\r\n  });\r\n\r\n  return (\r\n    <DataGrid\r\n      {...data}\r\n      slots={{\r\n        toolbar: GridToolbar,\r\n      }}\r\n      onRowClick={() => props.setSideView(true)}\r\n    />\r\n  );\r\n};\r\n\r\nconst SideDrawer = (props: { open: boolean; onClose: any }) => {\r\n  const [toolBarPos, setToolBarPos] = useState<\"left\" | \"bottom\">(\"left\");\r\n  const [width, setWidth] = useState<string>(\"50\");\r\n\r\n  return (\r\n    <SideView\r\n      width={width + \"%\"}\r\n      id={\"testSideView\"}\r\n      title={\"Detailed View\"}\r\n      additionalTitleContent={\r\n        <Chip label=\"success\" color=\"success\" size=\"small\" />\r\n      }\r\n      subTitle=\"Subtitle\"\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      toolBarPosition={toolBarPos}\r\n      toolbar={\r\n        <Box\r\n          display={\"flex\"}\r\n          justifyContent={\r\n            toolBarPos !== \"left\" ? \"space-between\" : \"space-evenly\"\r\n          }\r\n        >\r\n          {\" \"}\r\n          <TextField\r\n            label=\"Set width\"\r\n            id=\"outlined-start-adornment\"\r\n            onChange={(e) => setWidth(e.target.value)}\r\n            size=\"small\"\r\n            value={width}\r\n            type={\"number\"}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mr: 2, ml: 2 }}\r\n            onClick={() =>\r\n              toolBarPos === \"left\"\r\n                ? setToolBarPos(\"bottom\")\r\n                : setToolBarPos(\"left\")\r\n            }\r\n          >\r\n            Switch toolbar position\r\n          </Button>\r\n        </Box>\r\n      }\r\n    >\r\n      <Box>Additional contents </Box>\r\n    </SideView>\r\n  );\r\n};\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","showToolBar","setShowToolbar","_useState3","_useState4","showBackBtn","setShowBackBtn","_useState5","_useState6","fullWIndow","setFullWIndow","_useState7","_useState8","sticky","setSticky","_useState9","_useState10","variant","setVariant","_useState11","_useState12","sideView","setSideView","_jsxs","_Fragment","children","_jsx","MuiPageView","id","headerVariant","fullWindow","stickyHeader","backButton","backButtonAdditionalActions","console","log","label","heading","actions","Button","sx","mr","onClick","IconButton","Sync","toolbarContent","Toolbar","sxProps","p","Content","SideDrawer","open","onClose","Grid","item","xs","alignItems","FormControl","size","InputLabel","Select","labelId","value","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","Date","slotProps","textField","FormControlLabel","control","Checkbox","onChange","props","data","useDemoData","dataSet","rowLength","maxColumns","DataGrid","_objectSpread","slots","toolbar","GridToolbar","onRowClick","_useState13","_useState14","toolBarPos","setToolBarPos","_useState15","_useState16","width","setWidth","SideView","title","additionalTitleContent","Chip","color","subTitle","toolBarPosition","Box","display","justifyContent","TextField","e","target","type","InputProps","endAdornment","InputAdornment","position","ml"],"sourceRoot":""}