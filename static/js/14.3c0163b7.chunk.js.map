{"version":3,"sources":["modules/components/pages/Form.tsx","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["userFormDefaultValues","fullName","username","password","dob","formatDate","Date","darkMode","locale","value","label","terms","privacy","UserFormFullNameField","useFormContext","register","errors","errorText","message","name","placeholder","error","ref","UserFormUsernameField","helpText","required","minLength","UserFormPasswordField","type","pattern","UserFormDOBField","formDatePickerProps","useFormDatePickerProps","UserFormRolesField","options","isDisabled","isMulti","UserFormLocaleField","isSearchable","UserFormDarkModeField","UserFormTermsField","UserFormButtons","formState","isSubmitting","isDirty","direction","variant","loading","disabled","UserForm","formMethods","useForm","defaultValues","onSubmit","React","useCallback","values","a","console","log","Promise","resolve","setTimeout","handleSubmit","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"mappings":"uMAmCMA,EAAiD,CACrDC,SAAU,GACVC,SAAU,OACVC,SAAU,aACVC,IAAKC,YAAW,IAAIC,KAAK,eACzBC,UAAU,EACVC,OAAQ,CAAEC,MAAO,KAAMC,MAAO,WAC9BC,OAAO,EACPC,SAAS,GAGLC,EAA4B,WAAO,IAAD,EACtC,EAA6BC,cAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OACE,cAAC,IAAD,CAAaN,MAAM,YAAYO,UAAS,UAAED,EAAOf,gBAAT,aAAE,EAAiBiB,QAA3D,SACE,cAAC,IAAD,CACEC,KAAK,WACLC,YAAY,kBACZC,QAASL,EAAOf,SAChBqB,IAAKP,OAMPQ,EAA4B,WAAO,IAAD,EACtC,EAA6BT,cAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OACE,cAAC,IAAD,CACEN,MAAM,WACNc,SAAS,+BACTP,UAAS,UAAED,EAAOd,gBAAT,aAAE,EAAiBgB,QAC5BO,UAAQ,EAJV,SAME,cAAC,IAAD,CACEN,KAAK,WACLC,YAAY,iBACZC,QAASL,EAAOd,SAChBoB,IAAKP,EAAS,CACZU,SAAU,uBACVC,UAAW,CAAEjB,MAAO,EAAGS,QAAS,0CAOpCS,EAA4B,WAAO,IAAD,EACtC,EAA6Bb,cAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAIlB,OACE,cAAC,IAAD,CACEN,MAAM,WACNc,SAAS,+BACTP,UAAS,UAAED,EAAOb,gBAAT,aAAE,EAAiBe,QAC5BO,UAAQ,EAJV,SAME,cAAC,IAAD,CACEN,KAAK,WACLS,KAAK,WACLR,YAAY,iBACZC,QAASL,EAAOb,SAChBmB,IAAKP,EAAS,CACZU,SAAU,uBACVI,QAAS,CACPpB,MAlBmB,iDAmBnBS,QAjBR,uIAyBEY,EAAuB,WAC3B,IAAMC,EAAsBC,YAC1B,MACAhC,EAAsBI,KAExB,OACE,cAAC,IAAD,CAAaM,MAAM,gBAAgBe,UAAQ,EAA3C,SACE,cAAC,IAAD,eAAgBM,OAKhBE,EAAyB,WAO7B,OACE,cAAC,IAAD,CAAavB,MAAM,QAAQe,UAAQ,EAAnC,SACE,cAAC,IAAD,CACEN,KAAK,QACLM,UAAQ,EACRL,YAAY,kBACZc,QAZoC,CACxC,CAAExB,MAAO,QAASD,MAAO,SACzB,CAAEC,MAAO,KAAMD,MAAO,QACtB,CAAEC,MAAO,SAAUD,MAAO,SAC1B,CAAEC,MAAO,cAAeD,MAAO,QAAS0B,YAAY,IAShDC,SAAO,OAMTC,EAA0B,WAM9B,OACE,cAAC,IAAD,CAAa3B,MAAM,SAAnB,SACE,cAAC,IAAD,CACES,KAAK,SACLC,YAAY,mBACZc,QAVqC,CACzC,CAAExB,MAAO,UAAWD,MAAO,MAC3B,CAAEC,MAAO,QAASD,MAAO,MACzB,CAAEC,MAAO,UAAWD,MAAO,OAQvB6B,cAAc,OAMhBC,EAA4B,WAChC,IAAQxB,EAAaD,cAAbC,SACR,OACE,cAAC,IAAD,CAAaL,MAAM,oBAAnB,SACE,cAAC,IAAD,CAAQS,KAAK,WAAWG,IAAKP,OAK7ByB,EAAyB,WAAO,IAAD,IACnC,EAA6B1B,cAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OACE,qCACE,cAAC,IAAD,CACEN,MAAM,uBACNO,UAAS,UAAED,EAAOL,aAAT,aAAE,EAAcO,QAF3B,SAIE,cAAC,IAAD,CACEC,KAAK,QACLT,MAAM,mCACNY,IAAKP,EAAS,CACZU,SAAU,yDAIhB,cAAC,IAAD,CAAaR,UAAS,UAAED,EAAOJ,eAAT,aAAE,EAAgBM,QAAxC,SACE,cAAC,IAAD,CACEC,KAAK,UACLT,MAAM,6BACNY,IAAKP,EAAS,CACZU,SAAU,wDAQhBgB,EAAsB,WAC1B,IAAQC,EAAc5B,cAAd4B,UACAC,EAA0BD,EAA1BC,aAAcC,EAAYF,EAAZE,QACtB,OACE,eAAC,IAAD,CAAKC,UAAU,cAAf,UACE,cAAC,IAAD,CACEjB,KAAK,SACLkB,QAAQ,UACRrC,MAAM,WACNsC,QAASJ,IAEX,cAAC,IAAD,CACEf,KAAK,QACLkB,QAAQ,YACRrC,MAAM,aACNuC,UAAWJ,QAqCJK,UA/BM,WACnB,IAAMC,EAAcC,YAAwB,CAC1CC,cAAepD,IAEXqD,EAA0CC,IAAMC,YAAN,uCAC9C,WAAOC,GAAP,SAAAC,EAAA,6DACEC,QAAQC,IAAIH,GADd,SAGQ,IAAII,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAS,QAHrD,2CAD8C,sDAM9C,IAGF,OACE,eAAC,IAAD,CACEX,YAAaA,EACbG,SAAUH,EAAYa,aAAaV,GAFrC,UAIE,cAACxC,EAAD,IACA,cAACU,EAAD,IACA,cAACI,EAAD,IACA,cAACG,EAAD,IACA,cAACG,EAAD,IACA,cAACI,EAAD,IACA,cAACE,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,S,iCCtPN,8CAEA,SAASuB,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON","file":"static/js/14.3c0163b7.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  FormControl,\n  TextField,\n  Checkbox,\n  Combobox,\n  Button,\n  DatePicker,\n  Toggle,\n  useForm,\n  useFormContext,\n  useFormDatePickerProps,\n} from \"@faharmony/form\";\nimport { Box } from \"@faharmony/theme\";\nimport { formatDate } from \"@faharmony/locale\";\nimport type {\n  ComboboxOptionType,\n  ComboboxOptionsType,\n  SubmitHandler,\n} from \"@faharmony/form\";\nimport type { FC } from \"react\";\n\ninterface UserFormInputs {\n  fullName?: string;\n  username: string;\n  password: string;\n  dob: string;\n  roles: ComboboxOptionType[];\n  locale?: ComboboxOptionType;\n  darkMode?: boolean;\n  terms: boolean;\n  privacy: boolean;\n}\n\nconst userFormDefaultValues: Partial<UserFormInputs> = {\n  fullName: \"\",\n  username: \"Love\",\n  password: \"KesKus44tA\",\n  dob: formatDate(new Date(\"01-01-2020\")),\n  darkMode: false,\n  locale: { value: \"en\", label: \"English\" },\n  terms: false,\n  privacy: false,\n};\n\nconst UserFormFullNameField: FC = () => {\n  const { register, errors } = useFormContext<UserFormInputs>();\n  return (\n    <FormControl label=\"Full name\" errorText={errors.fullName?.message}>\n      <TextField\n        name=\"fullName\"\n        placeholder=\"Enter full name\"\n        error={!!errors.fullName}\n        ref={register}\n      />\n    </FormControl>\n  );\n};\n\nconst UserFormUsernameField: FC = () => {\n  const { register, errors } = useFormContext<UserFormInputs>();\n  return (\n    <FormControl\n      label=\"Username\"\n      helpText=\"Login username for the user.\"\n      errorText={errors.username?.message}\n      required\n    >\n      <TextField\n        name=\"username\"\n        placeholder=\"Enter username\"\n        error={!!errors.username}\n        ref={register({\n          required: \"Username is required\",\n          minLength: { value: 4, message: \"At least 4 characters required.\" },\n        })}\n      />\n    </FormControl>\n  );\n};\n\nconst UserFormPasswordField: FC = () => {\n  const { register, errors } = useFormContext<UserFormInputs>();\n  const passwordPatternRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n  const passwordPatternMessage =\n    \"Password should be minimum 8 characters long and contain at least one uppercase letter, one lowercase letter and one number.\";\n  return (\n    <FormControl\n      label=\"Password\"\n      helpText=\"Login password for the user.\"\n      errorText={errors.password?.message}\n      required\n    >\n      <TextField\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        error={!!errors.password}\n        ref={register({\n          required: \"Password is required\",\n          pattern: {\n            value: passwordPatternRegex,\n            message: passwordPatternMessage,\n          },\n        })}\n      />\n    </FormControl>\n  );\n};\n\nconst UserFormDOBField: FC = () => {\n  const formDatePickerProps = useFormDatePickerProps(\n    \"dob\",\n    userFormDefaultValues.dob\n  );\n  return (\n    <FormControl label=\"Date of birth\" required>\n      <DatePicker {...formDatePickerProps} />\n    </FormControl>\n  );\n};\n\nconst UserFormRolesField: FC = () => {\n  const rolesOptions: ComboboxOptionsType = [\n    { label: \"Admin\", value: \"admin\" },\n    { label: \"BO\", value: \"back\" },\n    { label: \"Client\", value: \"front\" },\n    { label: \"Super Admin\", value: \"super\", isDisabled: true },\n  ];\n  return (\n    <FormControl label=\"Roles\" required>\n      <Combobox\n        name=\"roles\"\n        required\n        placeholder=\"Select roles...\"\n        options={rolesOptions}\n        isMulti\n      />\n    </FormControl>\n  );\n};\n\nconst UserFormLocaleField: FC = () => {\n  const localeOptions: ComboboxOptionsType = [\n    { label: \"English\", value: \"en\" },\n    { label: \"Suomi\", value: \"fi\" },\n    { label: \"Sverige\", value: \"sv\" },\n  ];\n  return (\n    <FormControl label=\"Locale\">\n      <Combobox\n        name=\"locale\"\n        placeholder=\"Select locale...\"\n        options={localeOptions}\n        isSearchable={false}\n      />\n    </FormControl>\n  );\n};\n\nconst UserFormDarkModeField: FC = () => {\n  const { register } = useFormContext<UserFormInputs>();\n  return (\n    <FormControl label=\"Prefer dark mode?\">\n      <Toggle name=\"darkMode\" ref={register} />\n    </FormControl>\n  );\n};\n\nconst UserFormTermsField: FC = () => {\n  const { register, errors } = useFormContext<UserFormInputs>();\n  return (\n    <>\n      <FormControl\n        label=\"Terms and conditions\"\n        errorText={errors.terms?.message}\n      >\n        <Checkbox\n          name=\"terms\"\n          label=\"Accept the terms and conditions.\"\n          ref={register({\n            required: \"It is required to accept the terms and condition\",\n          })}\n        />\n      </FormControl>\n      <FormControl errorText={errors.privacy?.message}>\n        <Checkbox\n          name=\"privacy\"\n          label=\"Accept the privacy policy.\"\n          ref={register({\n            required: \"It is required to accept the privacy policy\",\n          })}\n        />\n      </FormControl>\n    </>\n  );\n};\n\nconst UserFormButtons: FC = () => {\n  const { formState } = useFormContext<UserFormInputs>();\n  const { isSubmitting, isDirty } = formState;\n  return (\n    <Box direction=\"row-reverse\">\n      <Button\n        type=\"submit\"\n        variant=\"primary\"\n        value=\"Add user\"\n        loading={isSubmitting}\n      />\n      <Button\n        type=\"reset\"\n        variant=\"secondary\"\n        value=\"Reset form\"\n        disabled={!isDirty}\n      />\n    </Box>\n  );\n};\n\nconst UserForm: FC = () => {\n  const formMethods = useForm<UserFormInputs>({\n    defaultValues: userFormDefaultValues,\n  });\n  const onSubmit: SubmitHandler<UserFormInputs> = React.useCallback(\n    async (values) => {\n      console.log(values);\n      // Dummy wait for 1s.\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    },\n    []\n  );\n\n  return (\n    <Form\n      formMethods={formMethods}\n      onSubmit={formMethods.handleSubmit(onSubmit)}\n    >\n      <UserFormFullNameField />\n      <UserFormUsernameField />\n      <UserFormPasswordField />\n      <UserFormDOBField />\n      <UserFormRolesField />\n      <UserFormLocaleField />\n      <UserFormDarkModeField />\n      <UserFormTermsField />\n      <UserFormButtons />\n    </Form>\n  );\n};\n\nexport default UserForm;\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}