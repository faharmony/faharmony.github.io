{"version":3,"sources":["modules/components/pages/Stepper.tsx"],"names":["userFormDefaultValues","fullName","username","password","UserFormFullNameField","useFormContext","register","errors","direction","label","errorText","message","name","placeholder","error","ref","UserFormUsernameField","helpText","required","minLength","value","UserFormPasswordField","Page","useState","open","setOpen","formMethods","useForm","defaultValues","shouldUnregister","control","onSubmit","useCallback","values","console","log","JSON","stringify","addToast","id","title","variant","persist","resetFormValues","stepper","steps","completed","state","content","currentStep","handleSubmitButton","editMode","heading","actions","onClick","disabled","caption","onClose"],"mappings":"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","file":"static/js/27.ed8a8e87.chunk.js","sourcesContent":["import { useState, useCallback, FC } from \"react\";\r\n\r\nimport { PageView, SummaryView } from \"@faharmony/views\";\r\nimport { IStepProps, IStepperProps } from \"@faharmony/navigation\";\r\nimport { Button } from \"@faharmony/components\";\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  useForm,\r\n  useFormContext,\r\n  FormValuesWatcher,\r\n  SubmitHandler,\r\n  resetFormValues,\r\n} from \"@faharmony/form\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { addToast } from \"@faharmony/core\";\r\n\r\ninterface UserFormInputs {\r\n  fullName?: string;\r\n  username: string;\r\n  password: string;\r\n}\r\nconst userFormDefaultValues: Partial<UserFormInputs> = {\r\n  fullName: \"\",\r\n  username: \"Harmony user\",\r\n  password: \"password 123\",\r\n};\r\n\r\nconst UserFormFullNameField: FC = () => {\r\n  const { register, errors } = useFormContext<UserFormInputs>();\r\n  return (\r\n    <Box direction=\"column\">\r\n      <FormControl label=\"Full name\" errorText={errors.fullName?.message}>\r\n        <TextField\r\n          name=\"fullName\"\r\n          placeholder=\"Enter full name\"\r\n          error={!!errors.fullName}\r\n          ref={register}\r\n        />\r\n      </FormControl>\r\n      <FormValuesWatcher />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst UserFormUsernameField: FC = () => {\r\n  const { register, errors } = useFormContext<UserFormInputs>();\r\n  return (\r\n    <Box direction=\"column\">\r\n      <FormControl\r\n        label=\"Username\"\r\n        helpText=\"Login username for the user.\"\r\n        errorText={errors.username?.message}\r\n        required\r\n      >\r\n        <TextField\r\n          name=\"username\"\r\n          placeholder=\"Enter username\"\r\n          error={!!errors.username}\r\n          ref={register({\r\n            required: \"Username is required\",\r\n            minLength: { value: 4, message: \"At least 4 characters required.\" },\r\n          })}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst UserFormPasswordField: FC = () => {\r\n  const { register, errors } = useFormContext<UserFormInputs>();\r\n  return (\r\n    <Box direction=\"column\">\r\n      <FormControl\r\n        label=\"Password\"\r\n        helpText=\"Login password for the user.\"\r\n        errorText={errors.password?.message}\r\n        required\r\n      >\r\n        <TextField\r\n          name=\"password\"\r\n          placeholder=\"Enter password\"\r\n          error={!!errors.password}\r\n          ref={register}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Page = () => {\r\n  // https://stackoverflow.com/questions/61380289/react-hook-form-field-value-get-lost-when-i-collapse-add-or-delete-panel\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const formMethods = useForm<UserFormInputs>({\r\n    defaultValues: userFormDefaultValues,\r\n    shouldUnregister: false,\r\n  });\r\n\r\n  const { control } = formMethods;\r\n\r\n  const onSubmit: SubmitHandler<UserFormInputs> = useCallback(\r\n    (values: UserFormInputs) => {\r\n      console.log(\"Sent values: \" + JSON.stringify(values));\r\n      setOpen(false);\r\n      addToast({\r\n        id: \"submit\",\r\n        title: \"Information saved\",\r\n        variant: \"positive\",\r\n        persist: false,\r\n      });\r\n      resetFormValues(control);\r\n    },\r\n    [control]\r\n  );\r\n\r\n  const steps: IStepProps[] = [\r\n    {\r\n      label: \"Step 0\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormFullNameField />,\r\n    },\r\n    {\r\n      label: \"Step 1\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 2 with very very very long name\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormPasswordField />,\r\n    },\r\n    {\r\n      label: \"Step 3\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 4 with very very very long name\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 5\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 6 with very very very long name\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 7\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 8 with very very very long name\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n    {\r\n      label: \"Step 9\",\r\n      completed: false,\r\n      state: \"active\",\r\n      content: <UserFormUsernameField />,\r\n    },\r\n  ];\r\n\r\n  const stepper: IStepperProps = {\r\n    steps: steps,\r\n    currentStep: 0,\r\n    formMethods: formMethods,\r\n    handleSubmitButton: onSubmit,\r\n    editMode: true,\r\n  };\r\n\r\n  return (\r\n    <PageView\r\n      heading=\"Stepper component\"\r\n      actions={\r\n        <Button\r\n          value=\"Open SummaryView\"\r\n          onClick={() => setOpen(true)}\r\n          disabled={open}\r\n        />\r\n      }\r\n    >\r\n      {open && (\r\n        <SummaryView\r\n          caption=\"FA user\"\r\n          heading=\"New user\"\r\n          onClose={() => setOpen(false)}\r\n          stepper={stepper}\r\n        ></SummaryView>\r\n      )}\r\n    </PageView>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}