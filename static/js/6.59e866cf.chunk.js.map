{"version":3,"sources":["modules/welcome/state/index.ts","modules/welcome/pages/index.ts","modules/welcome/index.ts","modules/welcome/state/store.ts","modules/welcome/state/reducers.ts","modules/welcome/pages/MainPage.tsx"],"names":["ModuleState","createModuleState","name","initialState","reducers","ModuleActions","actions","ModuleId","ModuleIcon","faPray","id","label","roles","icon","component","Components","subModules","state","loading","startLoading","addToast","uuid","title","stopLoading","setLoading","payload","Redux","t","useModule","dispatch","useDispatch","useModuleState","justifyContent","width","value","onClick","MainPage","heading","toolbarContent","variant"],"mappings":"wHAAA,0LAIA,IAEMA,EAAcC,YAAkB,CACpCC,KAHe,UAIfC,4BACAC,aAGeC,EAAkBL,EAA3BM,S,iCCZR,uE,iCCAA,8EAmBaC,EAAmB,UAW1BC,EAAmCC,IAS1B,WACbC,GAAIH,EACJI,MAAO,aACPC,MAjByC,GAkBzCC,KAAML,EACNM,UAAWC,WACXC,WAb6C,GAc7CC,MAAOjB,gB,iCC1CT,oDAAO,IAAMG,EAAuB,CAAEe,SAAS,I,iCCH/C,gKAOMC,EAAwB,SAACF,GAC7BA,EAAMC,SAAU,EAChBE,YAAS,CAAEV,GAAIW,cAAQC,MAAO,mBAG1BC,EAAuB,SAACN,GAC5BA,EAAMC,SAAU,EAChBE,YAAS,CAAEV,GAAIW,cAAQC,MAAO,kBAG1BE,EAA0C,SAACP,EAAD,GAAyB,IAAfQ,EAAc,EAAdA,QACxDR,EAAMC,QAAUO,I,iCCnBlB,6GAQMC,EAAQ,WAAO,IACXC,EAAMC,cAAND,EACFE,EAAWC,cACXb,EAAQc,cACd,OACE,kBAAC,IAAD,CAAKC,eAAe,cAClB,kBAAC,IAAD,CAAKC,MAAM,QACT,kBAAC,IAAD,CACEC,MAAM,QACNC,QAAS,kBAAMN,EAASxB,gBAAcc,mBAExC,kBAAC,IAAD,CACEe,MAAM,OACNC,QAAS,kBAAMN,EAASxB,gBAAckB,kBAExC,kBAAC,IAAD,CACEW,MAAM,SACNC,QAAS,kBAAMN,EAASxB,gBAAcmB,YAAYP,EAAMC,cAG3DD,EAAMC,SAAW,kBAAC,IAAD,MAClB,kBAAC,IAAD,CAAMgB,MAAOP,EAAE,eAmCRS,EAAW,WAAO,IACrBT,EAAMC,cAAND,EAER,OACE,kBAAC,IAAD,CACEU,QAASV,EAAE,cACXW,eACE,kBAAC,IAAD,CAAMC,QAAQ,MAAd,iEAKF,kBAACb,EAAD","file":"static/js/6.59e866cf.chunk.js","sourcesContent":["import { createModuleState } from \"@faharmony/state\";\nimport { initialState } from \"./store\";\nimport * as reducers from \"./reducers\";\n\nconst ModuleId = \"welcome\";\n\nconst ModuleState = createModuleState({\n  name: ModuleId,\n  initialState,\n  reducers,\n});\n\nconst { actions: ModuleActions } = ModuleState;\n\nexport { ModuleState, ModuleActions };\nexport * from \"./store\";\n","/**\n * Pages\n * ---\n *\n * This directory contains module Pages.\n * A page is primary construct (a scaffold) onto which\n * other components and helpers are placed.\n *\n * Pages are directly linked with Router. Essentially,\n * each module or subModule can have it's own page and\n * own unique url route.\n *\n * At least 1 page is mandatory since that will act as\n * landing or primary page for the module. This page\n * should be called `MainPage.tsx`.\n *\n * 1 page is added as a sample. It can be edited or\n * replaced as per requirement.\n */\n\nexport { MainPage } from \"./MainPage\";\n","/**\n * MODULE\n * ------\n * This is the module configuration\n * -- Change required here --\n *\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n * @copyright FA Solutions Oy\n */\n\nimport * as Components from \"./pages\";\nimport { faPray } from \"@faharmony/icons\";\nimport { IModuleProps } from \"@faharmony/module\";\nimport { ModuleState } from \"./state\";\n// import { appRoles } from \"../../config\";\n\n/**\n * Should match the Module folder name\n */\nexport const ModuleId: string = \"welcome\";\n\n// /**\n//  * List of roles to restrict access.\n//  * Empty array for unrestricted access.\n//  */\nconst ModuleRoles: IModuleProps[\"roles\"] = [];\n\n/**\n * Icon of the Module. Visible in Menu.\n */\nconst ModuleIcon: IModuleProps[\"icon\"] = faPray;\n\nconst subModules: IModuleProps[\"subModules\"] = [];\n\n/**\n * -------------------\n * DO NOT CHANGE BELOW\n * -------------------\n */\nexport default {\n  id: ModuleId,\n  label: \"Components\",\n  roles: ModuleRoles,\n  icon: ModuleIcon,\n  component: Components.MainPage,\n  subModules,\n  state: ModuleState,\n} as IModuleProps;\n","export interface IState {\n  loading: boolean;\n}\n\nexport const initialState: IState = { loading: true };\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { addToast } from \"@faharmony/core\";\nimport { uuid } from \"@faharmony/helpers\";\nimport { IState } from \"./store\";\n\ntype Reducer = CaseReducer<IState>;\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\n\nconst startLoading: Reducer = (state) => {\n  state.loading = true;\n  addToast({ id: uuid(), title: \"start loading\" });\n};\n\nconst stopLoading: Reducer = (state) => {\n  state.loading = false;\n  addToast({ id: uuid(), title: \"stop loading\" });\n};\n\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\nexport { startLoading, stopLoading, setLoading };\n","/** i18n-ally useTranslation(\"welcome\") */\nimport React from \"react\";\nimport { useModule } from \"@faharmony/module\";\nimport { PageView } from \"@faharmony/views\";\nimport { Text, Button, Box, RingLoader } from \"@faharmony/components\";\nimport { useDispatch, useModuleState } from \"@faharmony/state\";\nimport { ModuleActions, IState } from \"../state\";\n\nconst Redux = () => {\n  const { t } = useModule();\n  const dispatch = useDispatch();\n  const state = useModuleState<IState>();\n  return (\n    <Box justifyContent=\"flex-start\">\n      <Box width=\"auto\">\n        <Button\n          value=\"Start\"\n          onClick={() => dispatch(ModuleActions.startLoading())}\n        />\n        <Button\n          value=\"Stop\"\n          onClick={() => dispatch(ModuleActions.stopLoading())}\n        />\n        <Button\n          value=\"Toggle\"\n          onClick={() => dispatch(ModuleActions.setLoading(!state.loading))}\n        />\n      </Box>\n      {state.loading && <RingLoader />}\n      <Text value={t(\"loading\")} />\n    </Box>\n  );\n};\n\n// const ApolloRest = () => {\n//   const query = gql`\n//     query Roles {\n//       groups @rest(type: \"Group\", path: \"groups\", endpoint: \"keycloak\") {\n//         id\n//         name\n//         realmRoles\n//         clientRoles\n//         subGroups\n//         attributes\n//       }\n//     }\n//   `;\n//   const { data, loading, error } = useQuery(query);\n//   console.dir(data);\n//   return (\n//     <div>\n//       {loading\n//         ? \"Loading...\"\n//         : error\n//         ? \"Error\"\n//         : JSON.stringify(data.groups, null, 2)}\n//     </div>\n//   );\n// };\n\n/**\n * Default page of module\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const MainPage = () => {\n  const { t } = useModule();\n\n  return (\n    <PageView\n      heading={t(\"moduleName\")}\n      toolbarContent={\n        <Text variant=\"h4\">\n          Harmony is FA Solutions' framework for React-app development\n        </Text>\n      }\n    >\n      <Redux />\n      {/* <ApolloRest /> */}\n    </PageView>\n  );\n};\n"],"sourceRoot":""}