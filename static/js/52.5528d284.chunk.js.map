{"version":3,"sources":["../../node_modules/codemirror/addon/fold/foldgutter.js","../../node_modules/codemirror/addon/fold/foldcode.js"],"names":["CodeMirror","defineOption","cm","val","old","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","on","Pos","this","from","to","opts","indicatorOpen","indicatorFolded","isFolded","line","marks","findMarks","i","length","__isFold","fromPos","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","pos","range","setGutterMarker","cls","RegExp","vp","getViewport","operation","folded","clear","foldCode","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan","mod","require","doFold","force","call","finder","getOption","getRange","allowFolded","findMarksAt","cleared","firstLine","myWidget","makeWidget","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","createTextNode","appendChild","newFoldFunction","rangeFinder","defineExtension","commands","toggleFold","getCursor","fold","unfold","scanUp","foldAll","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","defaultOptions","auto","minFoldSize","name","undefined","editorOptions","foldOptions"],"mappings":"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","file":"static/js/52.5528d284.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n"],"sourceRoot":""}