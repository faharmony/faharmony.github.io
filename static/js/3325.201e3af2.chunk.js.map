{"version":3,"file":"static/js/3325.201e3af2.chunk.js","mappings":"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","sources":["modules/components/pages/Menu_Drilldown.tsx"],"sourcesContent":["import { PageView } from \"@faharmony/views\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { MenuDrilldown } from \"@faharmony/shared\";\r\nimport { useState } from \"react\";\r\n\r\nconst Page = () => {\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  return (\r\n    <PageView heading=\"Menu Drilldown\" overflow=\"scroll\">\r\n      <Box direction=\"column\">\r\n        <div style={{ width: 300, height: 340 }}>\r\n          <MenuDrilldown\r\n            enableFiltering\r\n            optionsTree={{\r\n              label: \"Groupings\",\r\n              options: Object.values(groupingOptions).map(\r\n                ({ groupBy, label, key }) => {\r\n                  const hasSubOptions = groupingsWithSubOptions.includes(key);\r\n\r\n                  return {\r\n                    label,\r\n                    payload: {\r\n                      tableHeader: label,\r\n                      groupCode: \"\",\r\n                      groupBy,\r\n                    },\r\n                    options:\r\n                      hasSubOptions &&\r\n                      userPrefsGroupCodes?.map(({ code: groupCode, name }) => ({\r\n                        label: `${name} (${groupCode})`,\r\n                        payload: {\r\n                          tableHeader: `${label} (${name})`,\r\n                          groupBy,\r\n                          groupCode,\r\n                        },\r\n                      })),\r\n                  };\r\n                }\r\n              ),\r\n            }}\r\n            onOptionSelected={(option) => {\r\n              setSelectedOption(option);\r\n              console.log(option);\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            whiteSpace: \"pre\",\r\n          }}\r\n        >\r\n          <div style={{ zoom: 1.4 }}>\r\n            <strong>Selected option</strong> -{\" \"}\r\n            {JSON.stringify(selectedOption.at(-1), null, 4)?.replaceAll(\r\n              '\"',\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <strong>Returned array of selected options</strong> -{\" \"}\r\n          {JSON.stringify(selectedOption, null, 4)?.replaceAll('\"', \"\")}\r\n        </div>\r\n      </Box>\r\n    </PageView>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nconst groupingsWithSubOptions = [\r\n  \"groupAndSector\",\r\n  \"groupAndPortfolio\",\r\n  \"portfolioAndGroup\",\r\n];\r\n\r\nconst groupingOptions = {\r\n  groupAndSector: {\r\n    key: \"groupAndSector\",\r\n    groupBy: [\"GROUP\", \"SECTOR\", \"SECURITY\"],\r\n    label: \"Asset type and class\",\r\n  },\r\n  groupAndPortfolio: {\r\n    key: \"groupAndPortfolio\",\r\n    groupBy: [\"GROUP\", \"PORTFOLIO\", \"SECTOR\"],\r\n    label: \"Asset type and portfolio\",\r\n  },\r\n  securityType: {\r\n    key: \"securityType\",\r\n    groupBy: [\"TYPE\", \"SECURITY\"],\r\n    label: \"Security type\",\r\n  },\r\n  subType: {\r\n    key: \"subType\",\r\n    groupBy: [\"TYPE\", \"SUBTYPE\", \"SECURITY\"],\r\n    label: \"Security type and subtype\",\r\n  },\r\n  security: {\r\n    key: \"security\",\r\n    groupBy: [\"SECURITY\"],\r\n    label: \"Security\",\r\n  },\r\n  class1: {\r\n    key: \"class1\",\r\n    groupBy: [\"CLASS1\", \"SECURITY\"],\r\n    label: \"Class 1\",\r\n  },\r\n  class2: {\r\n    key: \"class2\",\r\n    groupBy: [\"CLASS2\", \"SECURITY\"],\r\n    label: \"Class 2\",\r\n  },\r\n  class3: {\r\n    key: \"class3\",\r\n    groupBy: [\"CLASS3\", \"SECURITY\"],\r\n    label: \"Class 3\",\r\n  },\r\n  class4: {\r\n    key: \"class4\",\r\n    groupBy: [\"CLASS4\", \"SECURITY\"],\r\n    label: \"Class 4\",\r\n  },\r\n  class5: {\r\n    key: \"class5\",\r\n    groupBy: [\"CLASS5\", \"SECURITY\"],\r\n    label: \"Class 5\",\r\n  },\r\n  country: {\r\n    key: \"country\",\r\n    groupBy: [\"COUNTRY\", \"SECURITY\"],\r\n    label: \"Country\",\r\n  },\r\n  marketPlace: {\r\n    key: \"marketPlace\",\r\n    groupBy: [\"MARKETPLACE\", \"SECURITY\"],\r\n    label: \"Market place\",\r\n  },\r\n  currency: {\r\n    key: \"currency\",\r\n    groupBy: [\"CURRENCY\", \"SECURITY\"],\r\n    label: \"Currency\",\r\n  },\r\n  portfolio: {\r\n    key: \"portfolio\",\r\n    groupBy: [\"PORTFOLIO\", \"TYPE\", \"SECURITY\"],\r\n    label: \"Portfolio\",\r\n  },\r\n  portfolioAndSubPortfolio: {\r\n    key: \"portfolioAndSubPortfolio\",\r\n    groupBy: [\"PORTFOLIO\", \"PORTFOLIO_ALL\", \"SECURITY\"],\r\n    label: \"Portfolio and sub portfolio\",\r\n  },\r\n  portfolioAndGroup: {\r\n    key: \"portfolioAndGroup\",\r\n    groupBy: [\"PORTFOLIO\", \"GROUP\", \"SECTOR\"],\r\n    label: \"Portfolio and asset type\",\r\n  },\r\n  issuer: {\r\n    key: \"issuer\",\r\n    groupBy: [\"ISSUER\", \"SECURITY\"],\r\n    label: \"Issuer\",\r\n  },\r\n};\r\n\r\nconst userPrefsGroupCodes = [\r\n  {\r\n    name: \"Asset class\",\r\n    code: \"ASSET\",\r\n  },\r\n  {\r\n    name: \"Geographical\",\r\n    code: \"GEO\",\r\n  },\r\n  {\r\n    name: \"Industry\",\r\n    code: \"IND\",\r\n  },\r\n  {\r\n    name: \"Strategy\",\r\n    code: \"Strategy\",\r\n  },\r\n  {\r\n    name: \"Robo class\",\r\n    code: \"ROBO\",\r\n  },\r\n  {\r\n    name: \"Currency\",\r\n    code: \"CURRENCY\",\r\n  },\r\n  {\r\n    name: \"Country exposure\",\r\n    code: \"COUNTRY\",\r\n  },\r\n  {\r\n    name: \"AIF Geo\",\r\n    code: \"AIFGEO\",\r\n  },\r\n  {\r\n    name: \"AIF Asset\",\r\n    code: \"AIFASSET\",\r\n  },\r\n  {\r\n    name: \"AIF Asset Turnover\",\r\n    code: \"AIFASSETTURNOVER\",\r\n  },\r\n  {\r\n    name: \"AIF Strategies\",\r\n    code: \"AIFSTRATEGIES\",\r\n  },\r\n  {\r\n    name: \"Model\",\r\n    code: \"MOD\",\r\n  },\r\n  {\r\n    name: \"Test ST\",\r\n    code: \"TEST_ST\",\r\n  },\r\n  {\r\n    name: \"Jv strategy test\",\r\n    code: \"JV_TEST\",\r\n  },\r\n  {\r\n    name: \"INT Asset Structure\",\r\n    code: \"INT_AS\",\r\n  },\r\n];\r\n"],"names":["_JSON$stringify","_JSON$stringify2","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","_jsx","PageView","heading","overflow","children","_jsxs","Box","direction","style","width","height","MenuDrilldown","enableFiltering","optionsTree","label","options","Object","values","groupingOptions","map","_ref","groupBy","key","hasSubOptions","groupingsWithSubOptions","includes","payload","tableHeader","groupCode","userPrefsGroupCodes","_ref2","code","name","concat","onOptionSelected","option","console","log","whiteSpace","zoom","JSON","stringify","at","replaceAll","groupAndSector","groupAndPortfolio","securityType","subType","security","class1","class2","class3","class4","class5","country","marketPlace","currency","portfolio","portfolioAndSubPortfolio","portfolioAndGroup","issuer"],"sourceRoot":""}