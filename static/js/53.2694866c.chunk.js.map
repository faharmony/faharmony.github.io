{"version":3,"sources":["modules/welcome/state/reducers.ts"],"names":["startLoading","state","loading","addToast","id","uuid","title","stopLoading","setLoading","payload"],"mappings":"2GACA,gKAOMA,EAAwB,SAACC,GAC7BA,EAAMC,SAAU,EAChBC,YAAS,CAAEC,GAAIC,cAAQC,MAAO,mBAG1BC,EAAuB,SAACN,GAC5BA,EAAMC,SAAU,EAChBC,YAAS,CAAEC,GAAIC,cAAQC,MAAO,kBAG1BE,EAA0C,SAACP,EAAD,GAAyB,IAAfQ,EAAc,EAAdA,QACxDR,EAAMC,QAAUO","file":"static/js/53.2694866c.chunk.js","sourcesContent":["import { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { addToast } from \"@faharmony/core\";\nimport { uuid } from \"@faharmony/helpers\";\nimport { IState } from \"./store\";\n\ntype Reducer = CaseReducer<IState>;\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\n\nconst startLoading: Reducer = (state) => {\n  state.loading = true;\n  addToast({ id: uuid(), title: \"start loading\" });\n};\n\nconst stopLoading: Reducer = (state) => {\n  state.loading = false;\n  addToast({ id: uuid(), title: \"stop loading\" });\n};\n\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\nexport { startLoading, stopLoading, setLoading };\n"],"sourceRoot":""}