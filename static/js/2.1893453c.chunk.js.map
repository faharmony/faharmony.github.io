{"version":3,"sources":["modules/logo/state/index.ts","modules/logo/components/index.ts","modules/logo/pages/index.ts","modules/logo/state/initialState.ts","modules/logo/state/reducers.ts","modules/logo/components/ConfigDrawer.tsx","modules/logo/components/Display.tsx","modules/logo/components/ComboBox.tsx","modules/logo/components/InputField.tsx","modules/logo/pages/MainPage.tsx","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"names":["ModuleID","ModuleState","createModuleState","name","initialState","reducers","createUseModuleStateHook","useModuleState","useModuleStateSelector","ModuleActions","actions","colors","brand","loading","isConfigDrawerOpen","config","size","color","primary","secondary","text","variant","icon","toggleLoading","state","setLoading","payload","toggleConfigDrawer","setVariant","setIcon","setColor","split","length","configurationOptions","variants","value","label","getCurrentOption","option","find","o","ColorPicker","onChange","React","useState","setValue","handleChange","val","type","ConfigDrawer","dispatch","useDispatch","action","defaultValue","key","toString","insertQueryParam","caption","heading","onClose","direction","alignItems","style","padding","theme","spacing","md","placeholder","options","Display","independent","panels","id","defaultActive","content","ComboBox","props","marginLeft","sm","helpText","StyledInput","styled","input","InputField","e","target","PageActions","disabled","onClick","MainPage","t","useModuleTranslation","search","URLSearchParams","useLocation","delete","jsonString","decodeURI","replace","params","JSON","parse","Object","entries","forEach","decodeURIComponent","useSetState","primaryNode","secondaryNode","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","_taggedTemplateLiteral","strings","raw","slice","freeze"],"mappings":"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","file":"static/js/2.1893453c.chunk.js","sourcesContent":["/**\r\n * State\r\n * ---\r\n *\r\n * This directory contains module state.\r\n * Harmony uses the Redux-Toolkit setup and\r\n * treats each Module as a Slice.\r\n *\r\n * Use other files like `store.ts` and `reducers.ts`\r\n * to maintain the functionality of ModuleState.\r\n * This file is responsible for combining them.\r\n *\r\n * There is no need for separately creating or\r\n * maintaining `actions` as they are generated\r\n * using slice's case reducers.\r\n *\r\n * @readonly No edit required in this file unless\r\n * ModuleId changes.\r\n */\r\n\r\nimport {\r\n  createModuleState,\r\n  createUseModuleStateHook,\r\n  useDispatch,\r\n} from \"@faharmony/state\";\r\nimport initialState, { IModuleState } from \"./initialState\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst ModuleID = \"logo\";\r\n\r\n/** Create Module's state using wrapper of createSlice(). */\r\nconst ModuleState = createModuleState({\r\n  /** name should be exact same as Module ID. */\r\n  name: ModuleID,\r\n  /** Initial value of Module's state. */\r\n  initialState,\r\n  /** Object of case reducers to modify Module's state. */\r\n  reducers,\r\n});\r\n\r\nconst {\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n} = createUseModuleStateHook<IModuleState>(ModuleID);\r\n\r\n// Extract `actions` from Module's state\r\nconst { actions: ModuleActions } = ModuleState;\r\n// Export state for Module config and actions for dispatch usage.\r\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\r\n// Export State type definition\r\nexport * from \"./initialState\";\r\n\r\nexport { useDispatch };\r\n","/**\r\n * Components\r\n * ---\r\n *\r\n * This directory contains reusable components which\r\n * are used by either Pages or other Components.\r\n *\r\n * If a component is useful or essential for multiple\r\n * modules or applications, then it should be moved\r\n * to Harmony.\r\n *\r\n * To begin, create a Component file/folder in this\r\n * directory and export it from this file.\r\n *\r\n * A sample component is provided for quick start.\r\n * It should be removed along with its references.\r\n */\r\n\r\nexport * from \"./ConfigDrawer\";\r\nexport * from \"./Display\";\r\n","/**\r\n * Pages\r\n * ---\r\n *\r\n * This directory contains module Pages.\r\n * A page is primary construct (a scaffold) onto which\r\n * other components and helpers are placed.\r\n *\r\n * Pages are directly linked with Router. Essentially,\r\n * each module or subModule can have it's own page and\r\n * own unique url route.\r\n *\r\n * At least 1 page is mandatory since that will act as\r\n * landing or primary page for the module. This page\r\n * should be called `MainPage.tsx`.\r\n *\r\n * 1 page is added as a sample. It can be edited or\r\n * replaced as per requirement.\r\n */\r\n\r\nexport { MainPage } from \"./MainPage\";\r\n","/**\r\n * InitialState\r\n * ---\r\n * This file maintains the type definition\r\n * and the actual initialState of the Module.\r\n */\r\n\r\n/** Type definition of the Module's state */\r\nexport interface IModuleState {\r\n  loading: boolean;\r\n  isConfigDrawerOpen: boolean;\r\n  config: {\r\n    size: number;\r\n    color: { primary: string; secondary: string };\r\n    text: string;\r\n    variant: \"all\" | \"company\" | \"platform\";\r\n    icon: \"all\" | \"transparent\" | \"opaque\";\r\n  };\r\n}\r\n\r\nexport const colors = { brand: \"#AE001A\" };\r\n\r\n/** Initial state of Module */\r\nexport default {\r\n  loading: true,\r\n  isConfigDrawerOpen: true,\r\n  config: {\r\n    size: 200,\r\n    color: { primary: colors.brand, secondary: \"\" },\r\n    text: \"\",\r\n    variant: \"all\",\r\n    icon: \"all\",\r\n  },\r\n} as IModuleState;\r\n","/**\r\n * Reducers\r\n * ---\r\n * This file maintains all the reducers (modifiers)\r\n * for the Module's state. The name of reducer will\r\n * become the name of the action.\r\n *\r\n * A case reducer can choose to mutate the passed-in\r\n * state value directly instead of returning a new state.\r\n * This does not actually cause the store state to be\r\n * mutated directly; instead, thanks to immer, the\r\n * mutations are translated to copy operations that\r\n * result in a new state.\r\n */\r\nimport { CaseReducer, PayloadAction } from \"@faharmony/state\";\r\nimport { IModuleState } from \"./initialState\";\r\n\r\n// Generic types for ease-of-use\r\ntype Reducer = CaseReducer<IModuleState>;\r\ntype ReducerWithPayload<T> = CaseReducer<IModuleState, PayloadAction<T>>;\r\ntype Config = IModuleState[\"config\"];\r\n\r\n// -------------------\r\n// Edit reducers below\r\n\r\n/** Reducer without required payload.\r\n * @example dispatch(toggleLoading()) */\r\nexport const toggleLoading: Reducer = (state) => {\r\n  state.loading = !state.loading;\r\n};\r\n\r\n/** Reducer with required payload.\r\n * @example dispatch(setLoading(true)) */\r\nexport const setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\r\n  state.loading = payload;\r\n};\r\n\r\n/** Reducer with to toggle ConfigDrawer.*/\r\nexport const toggleConfigDrawer: Reducer = (state) => {\r\n  state.isConfigDrawerOpen = !state.isConfigDrawerOpen;\r\n};\r\n\r\nexport const setVariant: ReducerWithPayload<Config[\"variant\"]> = (\r\n  state,\r\n  { payload }\r\n) => {\r\n  state.config.variant = payload;\r\n};\r\n\r\nexport const setIcon: ReducerWithPayload<Config[\"icon\"]> = (\r\n  state,\r\n  { payload }\r\n) => {\r\n  state.config.icon = payload;\r\n};\r\n\r\nexport const setColor: ReducerWithPayload<Config[\"color\"] | string> = (\r\n  state,\r\n  { payload }\r\n) => {\r\n  if (typeof payload === \"string\") {\r\n    const colors = payload.split(\"@\");\r\n    state.config.color.primary = colors[0];\r\n    colors.length > 0 && (state.config.color.secondary = colors[1]);\r\n  } else state.config.color = { ...state.config.color, ...payload };\r\n};\r\n","import React from \"react\";\r\nimport { SummaryView } from \"@faharmony/views\";\r\nimport { theme, Box } from \"@faharmony/theme\";\r\nimport { insertQueryParam } from \"@faharmony/router\";\r\n\r\nimport { useModuleState, useDispatch, ModuleActions } from \"../state\";\r\nimport { ComboBox } from \"./ComboBox\";\r\nimport { InputField } from \"./InputField\";\r\n\r\ninterface Obj {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nconst configurationOptions = {\r\n  variants: [\r\n    { value: \"all\", label: \"All\" },\r\n    { value: \"company\", label: \"Company branding\" },\r\n    { value: \"platform\", label: \"Apps branding\" },\r\n  ],\r\n  icon: [\r\n    { value: \"all\", label: \"All\" },\r\n    { value: \"transparent\", label: \"Transparent\" },\r\n    { value: \"opaque\", label: \"Opaque\" },\r\n  ],\r\n};\r\n\r\nconst getCurrentOption = (\r\n  option: keyof typeof configurationOptions,\r\n  value: string\r\n) =>\r\n  configurationOptions[option].find((o) => o.value === value) ||\r\n  configurationOptions[option][0];\r\n\r\nconst ColorPicker = ({ onChange }: { onChange: (o: Obj) => void }) => {\r\n  const {\r\n    config: { color },\r\n  } = useModuleState();\r\n  const [value, setValue] = React.useState(color.primary);\r\n  const handleChange = (val: string) => {\r\n    setValue(val);\r\n    onChange({ value: val, label: \"\" });\r\n  };\r\n  return <InputField handleChange={handleChange} value={value} type=\"color\" />;\r\n};\r\n\r\n/**\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const ConfigDrawer = () => {\r\n  const dispatch = useDispatch();\r\n  const { isConfigDrawerOpen, config } = useModuleState();\r\n  const { variant, icon } = config;\r\n\r\n  const handleChange = (\r\n    action: Function,\r\n    option: any,\r\n    defaultValue = \"all\"\r\n  ) => {\r\n    const key = action.toString().split(\"set\")[1];\r\n    const value = option?.value || defaultValue;\r\n    dispatch(action(value));\r\n    insertQueryParam(key, value);\r\n  };\r\n\r\n  return isConfigDrawerOpen ? (\r\n    <SummaryView\r\n      caption=\"Logo\"\r\n      heading=\"Configuration\"\r\n      onClose={() => dispatch(ModuleActions.toggleConfigDrawer())}\r\n    >\r\n      <Box\r\n        direction=\"column\"\r\n        alignItems=\"normal\"\r\n        style={{ padding: theme.spacing.md }}\r\n      >\r\n        <ComboBox\r\n          label=\"Variant\"\r\n          placeholder=\"Select variant...\"\r\n          options={configurationOptions.variants}\r\n          defaultValue={getCurrentOption(\"variants\", variant)}\r\n          onChange={(o: any) => handleChange(ModuleActions.setVariant, o)}\r\n        />\r\n        <ComboBox\r\n          label=\"Icon style\"\r\n          placeholder=\"Select icon style...\"\r\n          options={configurationOptions.icon}\r\n          defaultValue={getCurrentOption(\"icon\", icon)}\r\n          onChange={(o: any) => handleChange(ModuleActions.setIcon, o)}\r\n        />\r\n        <ColorPicker\r\n          onChange={(o: any) => handleChange(ModuleActions.setColor, o)}\r\n        />\r\n      </Box>\r\n    </SummaryView>\r\n  ) : null;\r\n};\r\n\r\nexport default ConfigDrawer;\r\n","import { Accordion, Text, Preloader } from \"@faharmony/components\";\r\n\r\nimport { useModuleState } from \"../state\";\r\n\r\n/**\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const Display = () => {\r\n  const state = useModuleState();\r\n  //   const dispatch = useDispatch();\r\n  if (state.loading) return <Preloader />;\r\n  else\r\n    return (\r\n      <div>\r\n        <Text\r\n          value=\"All generated logos will appear here. They can be configured using side-drawer.\"\r\n          color=\"disabled\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <Accordion\r\n          independent\r\n          panels={[\r\n            {\r\n              id: \"standard\",\r\n              heading: \"Standard logos\",\r\n              defaultActive: true,\r\n              content: <div />,\r\n            },\r\n            {\r\n              id: \"custom\",\r\n              heading: \"Customized logos\",\r\n              defaultActive: true,\r\n              content: <div />,\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Display;\r\n","import { Combobox, IComboboxProps } from \"@faharmony/form\";\r\nimport { theme } from \"@faharmony/theme\";\r\nimport { Text } from \"@faharmony/components\";\r\n\r\n/**\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const ComboBox = (props: IComboboxProps) => {\r\n  return (\r\n    <div>\r\n      {props.label && (\r\n        <div style={{ marginLeft: theme.spacing.sm }}>\r\n          <Text value={props.label} variant=\"h5\" />\r\n        </div>\r\n      )}\r\n      <Combobox {...props} name={props.label} />\r\n      {props.helpText && (\r\n        <Text value={props.helpText} variant=\"small\" color=\"secondary\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComboBox;\r\n","import React from \"react\";\r\nimport { theme, styled } from \"@faharmony/theme\";\r\nimport { Text } from \"@faharmony/components\";\r\n\r\nexport interface IInputFieldProps {\r\n  label?: string;\r\n  helpText?: string;\r\n  value: string;\r\n  placeholder?: string;\r\n  handleChange: (value: string) => void;\r\n  type: string;\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n  height: 36px;\r\n`;\r\n\r\n/**\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const InputField = (props: IInputFieldProps) => {\r\n  const { label, helpText, handleChange } = props;\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    handleChange(e.target.value);\r\n  return (\r\n    <div>\r\n      {label && (\r\n        <div style={{ marginLeft: theme.spacing.sm }}>\r\n          <Text value={label} variant=\"h5\" />\r\n        </div>\r\n      )}\r\n      <StyledInput {...props} onChange={onChange} />\r\n      {helpText && <Text value={helpText} variant=\"small\" color=\"secondary\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","// {{Sample}}:MainView\r\n\r\nimport { PageView, PrimaryWithSidebarLayout } from \"@faharmony/views\";\r\nimport { useModuleTranslation } from \"@faharmony/module\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { Button } from \"@faharmony/components\";\r\nimport { useLocation } from \"@faharmony/router\";\r\nimport { ModuleActions, useModuleState, useDispatch } from \"../state\";\r\nimport { ConfigDrawer, Display } from \"../components\";\r\n\r\nconst PageActions = () => {\r\n  const state = useModuleState();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Box>\r\n      <Button\r\n        value=\"Configure logo\"\r\n        disabled={state.isConfigDrawerOpen}\r\n        onClick={() => dispatch(ModuleActions.toggleConfigDrawer())}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useSetState = (): void => {\r\n  const dispatch = useDispatch();\r\n  const search = new URLSearchParams(useLocation().search);\r\n  search.delete(\"tab\");\r\n  if (search.toString()) {\r\n    const jsonString =\r\n      '\"' +\r\n      decodeURI(search.toString())\r\n        .replace(/\"/g, '\\\\\"')\r\n        .replace(/&/g, '\",\"')\r\n        .replace(/=/g, '\":\"') +\r\n      '\"';\r\n    const params = JSON.parse(`{${jsonString}}`);\r\n    Object.entries(params).forEach(([key, val]: [string, any]) => {\r\n      dispatch({ type: `logo/set${key}`, payload: decodeURIComponent(val) });\r\n    });\r\n  }\r\n  dispatch(ModuleActions.setLoading(false));\r\n};\r\n\r\n/**\r\n * Default page of module\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const MainPage = () => {\r\n  const t = useModuleTranslation();\r\n  useSetState();\r\n  return (\r\n    <PageView heading={t(\"moduleName\")} actions={<PageActions />}>\r\n      <PrimaryWithSidebarLayout\r\n        primaryNode={<Display />}\r\n        secondaryNode={<ConfigDrawer />}\r\n      />\r\n    </PageView>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"sourceRoot":""}