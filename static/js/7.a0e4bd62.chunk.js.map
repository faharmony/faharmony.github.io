{"version":3,"sources":["modules/welcome/state/index.ts","modules/welcome/pages/index.ts","modules/welcome/state/store.ts","modules/welcome/state/reducers.ts","modules/welcome/pages/MainPage.tsx"],"names":["ModuleState","createModuleState","name","initialState","reducers","ModuleActions","actions","loading","startLoading","state","addToast","id","uuid","title","stopLoading","setLoading","payload","Redux","t","useModule","dispatch","useDispatch","useModuleState","justifyContent","width","value","onClick","MainPage","caption","heading","toolbarContent","variant","children"],"mappings":"sHAAA,0LAIA,IAEMA,EAAcC,YAAkB,CACpCC,KAHe,UAIfC,4BACAC,aAGeC,EAAkBL,EAA3BM,S,iCCZR,uE,iCCIA,oDAAO,IAAMH,EAAuB,CAAEI,SAAS,I,iCCH/C,gKAOMC,EAAwB,SAACC,GAC7BA,EAAMF,SAAU,EAChBG,YAAS,CAAEC,GAAIC,cAAQC,MAAO,mBAG1BC,EAAuB,SAACL,GAC5BA,EAAMF,SAAU,EAChBG,YAAS,CAAEC,GAAIC,cAAQC,MAAO,kBAG1BE,EAA0C,SAACN,EAAD,GAAyB,IAAfO,EAAc,EAAdA,QACxDP,EAAMF,QAAUS,I,iCCnBlB,0JAgBaC,EAAQ,WAAO,IAClBC,EAAMC,cAAND,EACFE,EAAWC,cACXZ,EAAQa,cACd,OACE,kBAAC,IAAD,CAAKC,eAAe,cAClB,kBAAC,IAAD,CAAKC,MAAM,QACT,kBAAC,IAAD,CACEC,MAAM,QACNC,QAAS,kBAAMN,EAASf,gBAAcG,mBAExC,kBAAC,IAAD,CACEiB,MAAM,OACNC,QAAS,kBAAMN,EAASf,gBAAcS,kBAExC,kBAAC,IAAD,CACEW,MAAM,SACNC,QAAS,kBAAMN,EAASf,gBAAcU,YAAYN,EAAMF,cAG3DE,EAAMF,SAAW,kBAAC,IAAD,MAClB,kBAAC,IAAD,CAAMkB,MAAOP,EAAE,eA8CRS,EAAW,WAAO,IACrBT,EAAMC,cAAND,EA6BR,OACE,kBAAC,IAAD,CACEU,QAAS,OACTC,QAASX,EAAE,cACXY,eAAgB,kBAAC,IAAD,CAAMC,QAAQ,KAAKN,MAAM,YAEzCO,SAAU,kBAACf,EAAD","file":"static/js/7.a0e4bd62.chunk.js","sourcesContent":["import { createModuleState } from \"@faharmony/state\";\nimport { initialState } from \"./store\";\nimport * as reducers from \"./reducers\";\n\nconst ModuleId = \"welcome\";\n\nconst ModuleState = createModuleState({\n  name: ModuleId,\n  initialState,\n  reducers,\n});\n\nconst { actions: ModuleActions } = ModuleState;\n\nexport { ModuleState, ModuleActions };\nexport * from \"./store\";\n","/**\n * Pages\n * ---\n *\n * This directory contains module Pages.\n * A page is primary construct (a scaffold) onto which\n * other components and helpers are placed.\n *\n * Pages are directly linked with Router. Essentially,\n * each module or subModule can have it's own page and\n * own unique url route.\n *\n * At least 1 page is mandatory since that will act as\n * landing or primary page for the module. This page\n * should be called `MainPage.tsx`.\n *\n * 1 page is added as a sample. It can be edited or\n * replaced as per requirement.\n */\n\nexport { MainPage } from \"./MainPage\";\n","export interface IState {\n  loading: boolean;\n}\n\nexport const initialState: IState = { loading: true };\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { addToast } from \"@faharmony/core\";\nimport { uuid } from \"@faharmony/helpers\";\nimport { IState } from \"./store\";\n\ntype Reducer = CaseReducer<IState>;\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\n\nconst startLoading: Reducer = (state) => {\n  state.loading = true;\n  addToast({ id: uuid(), title: \"start loading\" });\n};\n\nconst stopLoading: Reducer = (state) => {\n  state.loading = false;\n  addToast({ id: uuid(), title: \"stop loading\" });\n};\n\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\nexport { startLoading, stopLoading, setLoading };\n","/** i18n-ally useTranslation(\"welcome\") */\nimport React from \"react\";\n// import { setAppSideDrawer } from \"@faharmony/core\";\nimport { useModule } from \"@faharmony/module\";\nimport { PageView } from \"@faharmony/views\";\n// import { ITabsProps } from \"@faharmony/navigation\";\nimport { Box } from \"@faharmony/theme\";\nimport {\n  Text,\n  Button,\n  RingLoader,\n  // ButtonPopover,\n} from \"@faharmony/components\";\nimport { useDispatch, useModuleState } from \"@faharmony/state\";\nimport { ModuleActions, IState } from \"../state\";\n\nexport const Redux = () => {\n  const { t } = useModule();\n  const dispatch = useDispatch();\n  const state = useModuleState<IState>();\n  return (\n    <Box justifyContent=\"flex-start\">\n      <Box width=\"auto\">\n        <Button\n          value=\"Start\"\n          onClick={() => dispatch(ModuleActions.startLoading())}\n        />\n        <Button\n          value=\"Stop\"\n          onClick={() => dispatch(ModuleActions.stopLoading())}\n        />\n        <Button\n          value=\"Toggle\"\n          onClick={() => dispatch(ModuleActions.setLoading(!state.loading))}\n        />\n      </Box>\n      {state.loading && <RingLoader />}\n      <Text value={t(\"loading\")} />\n    </Box>\n  );\n};\n\n// const ApolloRest = () => {\n//   const query = gql`\n//     query Roles {\n//       groups @rest(type: \"Group\", path: \"groups\", endpoint: \"keycloak\") {\n//         id\n//         name\n//         realmRoles\n//         clientRoles\n//         subGroups\n//         attributes\n//       }\n//     }\n//   `;\n//   const { data, loading, error } = useQuery(query);\n//   console.dir(data);\n//   return (\n//     <div>\n//       {loading\n//         ? \"Loading...\"\n//         : error\n//         ? \"Error\"\n//         : JSON.stringify(data.groups, null, 2)}\n//     </div>\n//   );\n// };\n\n// const Counter = () => {\n//   const [count, setCount] = React.useState(0);\n//   React.useEffect(() => {\n//     const t = setInterval(() => setCount((c) => c + 1), 1000);\n//     return () => {\n//       clearInterval(t);\n//     };\n//   }, []);\n//   return <Center>{count}</Center>;\n// };\n\n/**\n * Default page of module\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const MainPage = () => {\n  const { t } = useModule();\n\n  // const tabs: ITabsProps[] = [\n  //   {\n  //     id: \"1\",\n  //     label: \"Preview NAV\",\n  //     content: <Center>1</Center>,\n  //     defaultActive: true,\n  //   },\n  //   {\n  //     id: \"2\",\n  //     label: \"Portfolio\",\n  //     content: <Counter />,\n  //     // disabled: true,\n  //   },\n  //   { id: \"3\", label: \"Warnings\", content: <Center>3</Center> },\n  // ];\n\n  // const { TabBar } = useTabs([...tabs]);\n  // const openSide = () =>\n  //   setAppSideDrawer({\n  //     caption: \"Calculated nav\",\n  //     heading: \"FA Equity +\",\n  //     toolbarContent: <div />,\n  //     tabs,\n  //   });\n\n  // setTimeout(openSide, 100);\n\n  return (\n    <PageView\n      caption={\"Test\"}\n      heading={t(\"moduleName\")}\n      toolbarContent={<Text variant=\"h4\" value=\"Harmony\" />}\n      // actions={<ButtonPopover value=\"Open\" onClick={openSide} spacing=\"sm\" />}\n      children={<Redux />}\n    />\n  );\n};\n\n// is FA Solutions' framework for React-app development\n"],"sourceRoot":""}