{"version":3,"file":"static/js/3762.4ad3a63b.chunk.js","mappings":"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","sources":["modules/components/pages/MUI_Components/Samples/Progress.tsx"],"sourcesContent":["import CheckIcon from \"@mui/icons-material/Check\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport {\r\n  Box, Button, Fab, LinearProgress,\r\n  LinearProgressProps, Typography\r\n} from \"@mui/material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport React from \"react\";\r\n\r\nexport default function ProgressExample() {\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [success, setSuccess] = React.useState(false)\r\n  const timer = React.useRef<number>()\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current)\r\n    }\r\n  }, [])\r\n\r\n  const handleButtonClick = () => {\r\n    if (!loading) {\r\n      setSuccess(false)\r\n      setLoading(true)\r\n      timer.current = window.setTimeout(() => {\r\n        setSuccess(true)\r\n        setLoading(false)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\">Circular</Typography>\r\n      <Box sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& > * + *\": {\r\n          ml: 2,\r\n        },\r\n      }}>\r\n        <CircularProgress />\r\n        <CircularProgress color=\"secondary\" />\r\n        <Box sx={{\r\n          m: 1,\r\n          position: \"relative\",\r\n        }}>\r\n          <Fab\r\n            aria-label=\"save\"\r\n            color=\"primary\"\r\n            sx={success ? {\r\n              bgcolor: green[500],\r\n              \"&:hover\": {\r\n                bgcolor: green[700],\r\n              },\r\n            } : {}}\r\n            onClick={handleButtonClick}\r\n          >\r\n            {success ? <CheckIcon /> : <SaveIcon />}\r\n          </Fab>\r\n          {loading && (\r\n            <CircularProgress size={68} sx={{\r\n              color: green[500],\r\n              position: \"absolute\",\r\n              top: -6,\r\n              left: -6,\r\n              zIndex: 1,\r\n            }} />\r\n          )}\r\n        </Box>\r\n        <Box sx={{\r\n          m: 1,\r\n          position: \"relative\",\r\n        }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={success ? {\r\n              bgcolor: green[500],\r\n              \"&:hover\": {\r\n                bgcolor: green[700],\r\n              },\r\n            } : {}}\r\n            disabled={loading}\r\n            onClick={handleButtonClick}\r\n          >\r\n            Accept terms\r\n          </Button>\r\n          {loading && (\r\n            <CircularProgress size={24} sx={{\r\n              color: green[500],\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              marginTop: '-12px',\r\n              marginLeft: '-12px',\r\n            }} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Typography variant=\"h6\">Linear</Typography>\r\n      <Box sx={{\r\n        width: 1,\r\n        \"& > * + *\": {\r\n          mt: 2,\r\n        },\r\n      }}>\r\n        <LinearProgress />\r\n        <LinearProgress color=\"secondary\" />\r\n        <LinearBuffer />\r\n        <LinearWithValueLabel />\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction LinearBuffer() {\r\n  const [progress, setProgress] = React.useState(0)\r\n  const [buffer, setBuffer] = React.useState(10)\r\n\r\n  const progressRef = React.useRef(() => { })\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0)\r\n        setBuffer(10)\r\n      } else {\r\n        const diff = Math.random() * 10\r\n        const diff2 = Math.random() * 10\r\n        setProgress(progress + diff)\r\n        setBuffer(progress + diff + diff2)\r\n      }\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current()\r\n    }, 500)\r\n\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n  )\r\n}\r\n\r\nfunction LinearProgressWithLabel(\r\n  props: LinearProgressProps & { value: number }\r\n) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nfunction LinearWithValueLabel() {\r\n  const [progress, setProgress] = React.useState(10)\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress(prevProgress =>\r\n        prevProgress >= 100 ? 10 : prevProgress + 10\r\n      )\r\n    }, 800)\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  return <LinearProgressWithLabel value={progress} />\r\n}\r\n"],"names":["ProgressExample","loading","setLoading","React","success","setSuccess","timer","clearTimeout","current","handleButtonClick","window","setTimeout","_jsxs","_Fragment","children","_jsx","Typography","variant","Box","sx","display","alignItems","ml","CircularProgress","color","m","position","Fab","bgcolor","green","onClick","CheckIcon","SaveIcon","size","top","left","zIndex","Button","disabled","marginTop","marginLeft","width","mt","LinearProgress","LinearBuffer","LinearWithValueLabel","progress","setProgress","buffer","setBuffer","progressRef","diff","Math","random","diff2","setInterval","clearInterval","value","valueBuffer","LinearProgressWithLabel","props","mr","minWidth","concat","round","prevProgress"],"sourceRoot":""}