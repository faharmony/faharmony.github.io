{"version":3,"sources":["modules/logo/state/index.ts","modules/logo/state/initialState.ts","modules/logo/state/reducers.ts","modules/logo/components/Display.tsx","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["ModuleID","ModuleState","createModuleState","name","initialState","reducers","createUseModuleStateHook","useModuleState","useModuleStateSelector","ModuleActions","actions","colors","brand","loading","isConfigDrawerOpen","config","size","color","primary","secondary","text","variant","icon","toggleLoading","state","setLoading","payload","toggleConfigDrawer","setVariant","setIcon","setColor","split","length","Display","value","independent","panels","id","heading","defaultActive","content","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"mHAAA,sUA4BA,IAAMA,EAAW,OAGXC,EAAcC,YAAkB,CAEpCC,KAAMH,EAENI,uBAEAC,a,EAMEC,YAAuCN,GAFzCO,E,EAAAA,eACAC,E,EAAAA,uBAIeC,EAAkBR,EAA3BS,S,iCC9CR,8CAoBO,IAAMC,EAAS,CAAEC,MAAO,WAGhB,WACbC,SAAS,EACTC,oBAAoB,EACpBC,OAAQ,CACNC,KAAM,IACNC,MAAO,CAAEC,QAASP,EAAOC,MAAOO,UAAW,IAC3CC,KAAM,GACNC,QAAS,MACTC,KAAM,S,6TCJGC,EAAyB,SAACC,GACrCA,EAAMX,SAAWW,EAAMX,SAKZY,EAA0C,SAACD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC/DF,EAAMX,QAAUa,GAILC,EAA8B,SAACH,GAC1CA,EAAMV,oBAAsBU,EAAMV,oBAGvBc,EAAoD,SAC/DJ,EAD+D,GAG3D,IADFE,EACC,EADDA,QAEFF,EAAMT,OAAOM,QAAUK,GAGZG,EAA8C,SACzDL,EADyD,GAGrD,IADFE,EACC,EADDA,QAEFF,EAAMT,OAAOO,KAAOI,GAGTI,EAAyD,SACpEN,EADoE,GAGhE,IADFE,EACC,EADDA,QAEF,GAAuB,kBAAZA,EAAsB,CAC/B,IAAMf,EAASe,EAAQK,MAAM,KAC7BP,EAAMT,OAAOE,MAAMC,QAAUP,EAAO,GACpCA,EAAOqB,OAAS,IAAMR,EAAMT,OAAOE,MAAME,UAAYR,EAAO,SACvDa,EAAMT,OAAOE,MAAb,2BAA0BO,EAAMT,OAAOE,OAAUS,K,kHCxD7CO,EAAU,WAGrB,OAFc1B,2BAEJM,QAAgB,cAAC,IAAD,IAGtB,gCACE,cAAC,IAAD,CACEqB,MAAM,kFACNjB,MAAM,aAER,uBACA,uBACA,cAAC,IAAD,CACEkB,aAAW,EACXC,OAAQ,CACN,CACEC,GAAI,WACJC,QAAS,iBACTC,eAAe,EACfC,QAAS,yBAEX,CACEH,GAAI,SACJC,QAAS,mBACTC,eAAe,EACfC,QAAS,gCAQRP,a,iCC1CA,SAASQ,EAAgBC,EAAKC,EAAKT,GAYhD,OAXIS,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BT,MAAOA,EACPY,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOT,EAGNQ,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAU/B,OAAQ8B,IAAK,CACzC,IAAIE,EAAyB,MAAhBD,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOoB,IAAS,GAAMC,SAAQ,SAAUtB,GAC9C,EAAekB,EAAQlB,EAAKqB,EAAOrB,OAE5BC,OAAOsB,0BAChBtB,OAAOuB,iBAAiBN,EAAQjB,OAAOsB,0BAA0BF,IAEjEf,EAAQL,OAAOoB,IAASC,SAAQ,SAAUtB,GACxCC,OAAOC,eAAegB,EAAQlB,EAAKC,OAAOa,yBAAyBO,EAAQrB,OAKjF,OAAOkB,E","file":"static/js/31.e9d1d19c.chunk.js","sourcesContent":["/**\n * State\n * ---\n *\n * This directory contains module state.\n * Harmony uses the Redux-Toolkit setup and\n * treats each Module as a Slice.\n *\n * Use other files like `store.ts` and `reducers.ts`\n * to maintain the functionality of ModuleState.\n * This file is responsible for combining them.\n *\n * There is no need for separately creating or\n * maintaining `actions` as they are generated\n * using slice's case reducers.\n *\n * @readonly No edit required in this file unless\n * ModuleId changes.\n */\n\nimport {\n  createModuleState,\n  createUseModuleStateHook,\n  useDispatch,\n} from \"@faharmony/state\";\nimport initialState, { IModuleState } from \"./initialState\";\nimport * as reducers from \"./reducers\";\n\nconst ModuleID = \"logo\";\n\n/** Create Module's state using wrapper of createSlice(). */\nconst ModuleState = createModuleState({\n  /** name should be exact same as Module ID. */\n  name: ModuleID,\n  /** Initial value of Module's state. */\n  initialState,\n  /** Object of case reducers to modify Module's state. */\n  reducers,\n});\n\nconst {\n  useModuleState,\n  useModuleStateSelector,\n} = createUseModuleStateHook<IModuleState>(ModuleID);\n\n// Extract `actions` from Module's state\nconst { actions: ModuleActions } = ModuleState;\n// Export state for Module config and actions for dispatch usage.\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\n// Export State type definition\nexport * from \"./initialState\";\n\nexport { useDispatch };\n","/**\n * InitialState\n * ---\n * This file maintains the type definition\n * and the actual initialState of the Module.\n */\n\n/** Type definition of the Module's state */\nexport interface IModuleState {\n  loading: boolean;\n  isConfigDrawerOpen: boolean;\n  config: {\n    size: number;\n    color: { primary: string; secondary: string };\n    text: string;\n    variant: \"all\" | \"company\" | \"platform\";\n    icon: \"all\" | \"transparent\" | \"opaque\";\n  };\n}\n\nexport const colors = { brand: \"#AE001A\" };\n\n/** Initial state of Module */\nexport default {\n  loading: true,\n  isConfigDrawerOpen: true,\n  config: {\n    size: 200,\n    color: { primary: colors.brand, secondary: \"\" },\n    text: \"\",\n    variant: \"all\",\n    icon: \"all\",\n  },\n} as IModuleState;\n","/**\n * Reducers\n * ---\n * This file maintains all the reducers (modifiers)\n * for the Module's state. The name of reducer will\n * become the name of the action.\n *\n * A case reducer can choose to mutate the passed-in\n * state value directly instead of returning a new state.\n * This does not actually cause the store state to be\n * mutated directly; instead, thanks to immer, the\n * mutations are translated to copy operations that\n * result in a new state.\n */\nimport { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { IModuleState } from \"./initialState\";\n\n// Generic types for ease-of-use\ntype Reducer = CaseReducer<IModuleState>;\ntype ReducerWithPayload<T> = CaseReducer<IModuleState, PayloadAction<T>>;\ntype Config = IModuleState[\"config\"];\n\n// -------------------\n// Edit reducers below\n\n/** Reducer without required payload.\n * @example dispatch(toggleLoading()) */\nexport const toggleLoading: Reducer = (state) => {\n  state.loading = !state.loading;\n};\n\n/** Reducer with required payload.\n * @example dispatch(setLoading(true)) */\nexport const setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\n/** Reducer with to toggle ConfigDrawer.*/\nexport const toggleConfigDrawer: Reducer = (state) => {\n  state.isConfigDrawerOpen = !state.isConfigDrawerOpen;\n};\n\nexport const setVariant: ReducerWithPayload<Config[\"variant\"]> = (\n  state,\n  { payload }\n) => {\n  state.config.variant = payload;\n};\n\nexport const setIcon: ReducerWithPayload<Config[\"icon\"]> = (\n  state,\n  { payload }\n) => {\n  state.config.icon = payload;\n};\n\nexport const setColor: ReducerWithPayload<Config[\"color\"] | string> = (\n  state,\n  { payload }\n) => {\n  if (typeof payload === \"string\") {\n    const colors = payload.split(\"@\");\n    state.config.color.primary = colors[0];\n    colors.length > 0 && (state.config.color.secondary = colors[1]);\n  } else state.config.color = { ...state.config.color, ...payload };\n};\n","import React from \"react\";\nimport { Accordion, Text, Preloader } from \"@faharmony/components\";\n\nimport { useModuleState } from \"../state\";\n\n/**\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const Display = () => {\n  const state = useModuleState();\n  //   const dispatch = useDispatch();\n  if (state.loading) return <Preloader />;\n  else\n    return (\n      <div>\n        <Text\n          value=\"All generated logos will appear here. They can be configured using side-drawer.\"\n          color=\"disabled\"\n        />\n        <br />\n        <br />\n        <Accordion\n          independent\n          panels={[\n            {\n              id: \"standard\",\n              heading: \"Standard logos\",\n              defaultActive: true,\n              content: <div />,\n            },\n            {\n              id: \"custom\",\n              heading: \"Customized logos\",\n              defaultActive: true,\n              content: <div />,\n            },\n          ]}\n        />\n      </div>\n    );\n};\n\nexport default Display;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}