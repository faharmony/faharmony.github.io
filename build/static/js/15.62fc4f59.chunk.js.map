{"version":3,"sources":["modules/welcome/state/index.ts","modules/welcome/state/store.ts","modules/welcome/state/reducers.ts"],"names":["ModuleId","ModuleState","createModuleState","name","initialState","reducers","ModuleActions","actions","createUseModuleStateHook","useModuleState","useModuleStateSelector","loading","startLoading","state","addToast","id","uuid","title","stopLoading","setLoading","payload"],"mappings":"iHAAA,iVAQA,IAAMA,EAAW,UAEXC,EAAcC,YAAkB,CACpCC,KAAMH,EACNI,4BACAC,aAGeC,EAAkBL,EAA3BM,QAER,EAGIC,YAAiCR,GAFnCS,EADF,EACEA,eACAC,EAFF,EAEEA,wB,iCChBF,oDAAO,IAAMN,EAAuB,CAAEO,SAAS,I,iCCH/C,gKAOMC,EAAwB,SAACC,GAC7BA,EAAMF,SAAU,EAChBG,YAAS,CAAEC,GAAIC,cAAQC,MAAO,mBAG1BC,EAAuB,SAACL,GAC5BA,EAAMF,SAAU,EAChBG,YAAS,CAAEC,GAAIC,cAAQC,MAAO,kBAG1BE,EAA0C,SAACN,EAAD,GAAyB,IAAfO,EAAc,EAAdA,QACxDP,EAAMF,QAAUS","file":"static/js/15.62fc4f59.chunk.js","sourcesContent":["import {\r\n  createModuleState,\r\n  createUseModuleStateHook,\r\n  useDispatch,\r\n} from \"@faharmony/state\";\r\nimport { initialState, IState } from \"./store\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst ModuleId = \"welcome\";\r\n\r\nconst ModuleState = createModuleState({\r\n  name: ModuleId,\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nconst { actions: ModuleActions } = ModuleState;\r\n\r\nconst {\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n} = createUseModuleStateHook<IState>(ModuleId);\r\nexport { useDispatch };\r\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\r\nexport * from \"./store\";\r\n","export interface IState {\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: IState = { loading: true };\r\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\r\nimport { addToast } from \"@faharmony/core\";\r\nimport { uuid } from \"@faharmony/helpers\";\r\nimport { IState } from \"./store\";\r\n\r\ntype Reducer = CaseReducer<IState>;\r\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\r\n\r\nconst startLoading: Reducer = (state) => {\r\n  state.loading = true;\r\n  addToast({ id: uuid(), title: \"start loading\" });\r\n};\r\n\r\nconst stopLoading: Reducer = (state) => {\r\n  state.loading = false;\r\n  addToast({ id: uuid(), title: \"stop loading\" });\r\n};\r\n\r\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\r\n  state.loading = payload;\r\n};\r\n\r\nexport { startLoading, stopLoading, setLoading };\r\n"],"sourceRoot":""}