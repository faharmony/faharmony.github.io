{"version":3,"file":"static/js/6990.b5dc9ad5.chunk.js","mappings":"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","sources":["modules/logo/components/ComboBox.tsx","modules/logo/components/ConfigDrawer.tsx","modules/logo/components/Display.tsx","modules/logo/components/InputField.tsx","modules/logo/pages/MainPage.tsx","modules/logo/state/index.ts","modules/logo/state/initialState.ts","modules/logo/state/reducers.ts"],"sourcesContent":["import { Combobox, IComboboxProps } from \"@faharmony/form\";\nimport { theme } from \"@faharmony/theme\";\nimport { Text } from \"@faharmony/components\";\n\n/**\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const ComboBox = (props: IComboboxProps) => {\n  return (\n    <div>\n      {props.label && (\n        <div style={{ marginLeft: theme.spacing.sm }}>\n          <Text value={props.label} variant=\"h5\" />\n        </div>\n      )}\n      <Combobox {...props} name={props.label} />\n      {props.helpText && (\n        <Text value={props.helpText} variant=\"small\" color=\"secondary\" />\n      )}\n    </div>\n  );\n};\n\nexport default ComboBox;\n","import React from \"react\";\nimport { SummaryView } from \"@faharmony/views\";\nimport { theme, Box } from \"@faharmony/theme\";\nimport { insertQueryParam } from \"@faharmony/router\";\n\nimport { useModuleState, useDispatch, ModuleActions } from \"../state\";\nimport { ComboBox } from \"./ComboBox\";\nimport { InputField } from \"./InputField\";\n\ninterface Obj {\n  value: string;\n  label: string;\n}\n\nconst configurationOptions = {\n  variants: [\n    { value: \"all\", label: \"All\" },\n    { value: \"company\", label: \"Company branding\" },\n    { value: \"platform\", label: \"Apps branding\" },\n  ],\n  icon: [\n    { value: \"all\", label: \"All\" },\n    { value: \"transparent\", label: \"Transparent\" },\n    { value: \"opaque\", label: \"Opaque\" },\n  ],\n};\n\nconst getCurrentOption = (\n  option: keyof typeof configurationOptions,\n  value: string\n) =>\n  configurationOptions[option].find((o) => o.value === value) ||\n  configurationOptions[option][0];\n\nconst ColorPicker = ({ onChange }: { onChange: (o: Obj) => void }) => {\n  const {\n    config: { color },\n  } = useModuleState();\n  const [value, setValue] = React.useState(color.primary);\n  const handleChange = (val: string) => {\n    setValue(val);\n    onChange({ value: val, label: \"\" });\n  };\n  return <InputField handleChange={handleChange} value={value} type=\"color\" />;\n};\n\n/**\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const ConfigDrawer = () => {\n  const dispatch = useDispatch();\n  const { isConfigDrawerOpen, config } = useModuleState();\n  const { variant, icon } = config;\n\n  const handleChange = (\n    action: Function,\n    option: any,\n    defaultValue = \"all\"\n  ) => {\n    const key = action.toString().split(\"set\")[1];\n    const value = option?.value || defaultValue;\n    dispatch(action(value));\n    insertQueryParam(key, value);\n  };\n\n  return isConfigDrawerOpen ? (\n    <SummaryView\n      caption=\"Logo\"\n      heading=\"Configuration\"\n      onClose={() => dispatch(ModuleActions.toggleConfigDrawer())}\n    >\n      <Box\n        direction=\"column\"\n        alignItems=\"normal\"\n        style={{ padding: theme.spacing.md }}\n      >\n        <ComboBox\n          label=\"Variant\"\n          placeholder=\"Select variant...\"\n          options={configurationOptions.variants}\n          defaultValue={getCurrentOption(\"variants\", variant)}\n          onChange={(o: any) => handleChange(ModuleActions.setVariant, o)}\n        />\n        <ComboBox\n          label=\"Icon style\"\n          placeholder=\"Select icon style...\"\n          options={configurationOptions.icon}\n          defaultValue={getCurrentOption(\"icon\", icon)}\n          onChange={(o: any) => handleChange(ModuleActions.setIcon, o)}\n        />\n        <ColorPicker\n          onChange={(o: any) => handleChange(ModuleActions.setColor, o)}\n        />\n      </Box>\n    </SummaryView>\n  ) : null;\n};\n\nexport default ConfigDrawer;\n","import { Accordion, Text, Preloader } from \"@faharmony/components\";\n\nimport { useModuleState } from \"../state\";\n\n/**\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const Display = () => {\n  const state = useModuleState();\n  //   const dispatch = useDispatch();\n  if (state.loading) return <Preloader />;\n  else\n    return (\n      <div>\n        <Text\n          value=\"All generated logos will appear here. They can be configured using side-drawer.\"\n          color=\"disabled\"\n        />\n        <br />\n        <br />\n        <Accordion\n          independent\n          panels={[\n            {\n              id: \"standard\",\n              heading: \"Standard logos\",\n              defaultActive: true,\n              content: <div />,\n            },\n            {\n              id: \"custom\",\n              heading: \"Customized logos\",\n              defaultActive: true,\n              content: <div />,\n            },\n          ]}\n        />\n      </div>\n    );\n};\n\nexport default Display;\n","import React from \"react\";\nimport { theme, styled } from \"@faharmony/theme\";\nimport { Text } from \"@faharmony/components\";\n\nexport interface IInputFieldProps {\n  label?: string;\n  helpText?: string;\n  value: string;\n  placeholder?: string;\n  handleChange: (value: string) => void;\n  type: string;\n}\n\nconst StyledInput = styled.input`\n  height: 36px;\n`;\n\n/**\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const InputField = (props: IInputFieldProps) => {\n  const { label, helpText, handleChange } = props;\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    handleChange(e.target.value);\n  return (\n    <div>\n      {label && (\n        <div style={{ marginLeft: theme.spacing.sm }}>\n          <Text value={label} variant=\"h5\" />\n        </div>\n      )}\n      <StyledInput {...props} onChange={onChange} />\n      {helpText && <Text value={helpText} variant=\"small\" color=\"secondary\" />}\n    </div>\n  );\n};\n\nexport default InputField;\n","// {{Sample}}:MainView\n\nimport { PageView, PrimaryWithSidebarLayout } from \"@faharmony/views\";\nimport { useModuleTranslation } from \"@faharmony/module\";\nimport { Box } from \"@faharmony/theme\";\nimport { Button } from \"@faharmony/components\";\nimport { useLocation } from \"@faharmony/router\";\nimport { ModuleActions, useModuleState, useDispatch } from \"../state\";\nimport { ConfigDrawer, Display } from \"../components\";\n\nconst PageActions = () => {\n  const state = useModuleState();\n  const dispatch = useDispatch();\n  return (\n    <Box>\n      <Button\n        value=\"Configure logo\"\n        disabled={state.isConfigDrawerOpen}\n        onClick={() => dispatch(ModuleActions.toggleConfigDrawer())}\n      />\n    </Box>\n  );\n};\n\nconst useSetState = (): void => {\n  const dispatch = useDispatch();\n  const search = new URLSearchParams(useLocation().search);\n  search.delete(\"tab\");\n  if (search.toString()) {\n    const jsonString =\n      '\"' +\n      decodeURI(search.toString())\n        .replace(/\"/g, '\\\\\"')\n        .replace(/&/g, '\",\"')\n        .replace(/=/g, '\":\"') +\n      '\"';\n    const params = JSON.parse(`{${jsonString}}`);\n    Object.entries(params).forEach(([key, val]: [string, any]) => {\n      dispatch({ type: `logo/set${key}`, payload: decodeURIComponent(val) });\n    });\n  }\n  dispatch(ModuleActions.setLoading(false));\n};\n\n/**\n * Default page of module\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const MainPage = () => {\n  const t = useModuleTranslation();\n  useSetState();\n  return (\n    <PageView heading={t(\"moduleName\")} actions={<PageActions />}>\n      <PrimaryWithSidebarLayout\n        primaryNode={<Display />}\n        secondaryNode={<ConfigDrawer />}\n      />\n    </PageView>\n  );\n};\n\nexport default MainPage;\n","/**\n * State\n * ---\n *\n * This directory contains module state.\n * Harmony uses the Redux-Toolkit setup and\n * treats each Module as a Slice.\n *\n * Use other files like `store.ts` and `reducers.ts`\n * to maintain the functionality of ModuleState.\n * This file is responsible for combining them.\n *\n * There is no need for separately creating or\n * maintaining `actions` as they are generated\n * using slice's case reducers.\n *\n * @readonly No edit required in this file unless\n * ModuleId changes.\n */\n\nimport {\n  createModuleState,\n  createUseModuleStateHook,\n  useDispatch,\n} from \"@faharmony/state\";\nimport initialState, { IModuleState } from \"./initialState\";\nimport * as reducers from \"./reducers\";\n\nconst ModuleID = \"logo\";\n\n/** Create Module's state using wrapper of createSlice(). */\nconst ModuleState = createModuleState({\n  /** name should be exact same as Module ID. */\n  name: ModuleID,\n  /** Initial value of Module's state. */\n  initialState,\n  /** Object of case reducers to modify Module's state. */\n  reducers,\n});\n\nconst {\n  useModuleState,\n  useModuleStateSelector,\n} = createUseModuleStateHook<IModuleState>(ModuleID);\n\n// Extract `actions` from Module's state\nconst { actions: ModuleActions } = ModuleState;\n// Export state for Module config and actions for dispatch usage.\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\n// Export State type definition\nexport * from \"./initialState\";\n\nexport { useDispatch };\n","/**\n * InitialState\n * ---\n * This file maintains the type definition\n * and the actual initialState of the Module.\n */\n\n/** Type definition of the Module's state */\nexport interface IModuleState {\n  loading: boolean;\n  isConfigDrawerOpen: boolean;\n  config: {\n    size: number;\n    color: { primary: string; secondary: string };\n    text: string;\n    variant: \"all\" | \"company\" | \"platform\";\n    icon: \"all\" | \"transparent\" | \"opaque\";\n  };\n}\n\nexport const colors = { brand: \"#AE001A\" };\n\n/** Initial state of Module */\nexport default {\n  loading: true,\n  isConfigDrawerOpen: true,\n  config: {\n    size: 200,\n    color: { primary: colors.brand, secondary: \"\" },\n    text: \"\",\n    variant: \"all\",\n    icon: \"all\",\n  },\n} as IModuleState;\n","/**\n * Reducers\n * ---\n * This file maintains all the reducers (modifiers)\n * for the Module's state. The name of reducer will\n * become the name of the action.\n *\n * A case reducer can choose to mutate the passed-in\n * state value directly instead of returning a new state.\n * This does not actually cause the store state to be\n * mutated directly; instead, thanks to immer, the\n * mutations are translated to copy operations that\n * result in a new state.\n */\nimport { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { IModuleState } from \"./initialState\";\n\n// Generic types for ease-of-use\ntype Reducer = CaseReducer<IModuleState>;\ntype ReducerWithPayload<T> = CaseReducer<IModuleState, PayloadAction<T>>;\ntype Config = IModuleState[\"config\"];\n\n// -------------------\n// Edit reducers below\n\n/** Reducer without required payload.\n * @example dispatch(toggleLoading()) */\nexport const toggleLoading: Reducer = (state) => {\n  state.loading = !state.loading;\n};\n\n/** Reducer with required payload.\n * @example dispatch(setLoading(true)) */\nexport const setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\n/** Reducer with to toggle ConfigDrawer.*/\nexport const toggleConfigDrawer: Reducer = (state) => {\n  state.isConfigDrawerOpen = !state.isConfigDrawerOpen;\n};\n\nexport const setVariant: ReducerWithPayload<Config[\"variant\"]> = (\n  state,\n  { payload }\n) => {\n  state.config.variant = payload;\n};\n\nexport const setIcon: ReducerWithPayload<Config[\"icon\"]> = (\n  state,\n  { payload }\n) => {\n  state.config.icon = payload;\n};\n\nexport const setColor: ReducerWithPayload<Config[\"color\"] | string> = (\n  state,\n  { payload }\n) => {\n  if (typeof payload === \"string\") {\n    const colors = payload.split(\"@\");\n    state.config.color.primary = colors[0];\n    colors.length > 0 && (state.config.color.secondary = colors[1]);\n  } else state.config.color = { ...state.config.color, ...payload };\n};\n"],"names":["ComboBox","props","label","style","marginLeft","theme","value","variant","name","helpText","color","configurationOptions","variants","icon","getCurrentOption","option","find","o","ColorPicker","onChange","useModuleState","config","React","primary","setValue","InputField","handleChange","val","type","ConfigDrawer","dispatch","useDispatch","isConfigDrawerOpen","action","defaultValue","key","toString","split","insertQueryParam","caption","heading","onClose","ModuleActions","direction","alignItems","padding","placeholder","options","Display","loading","independent","panels","id","defaultActive","content","StyledInput","styled","e","target","PageActions","state","disabled","onClick","MainPage","t","useModuleTranslation","search","URLSearchParams","useLocation","delete","jsonString","decodeURI","replace","params","JSON","parse","Object","entries","forEach","payload","decodeURIComponent","useSetState","actions","primaryNode","secondaryNode","ModuleID","ModuleState","createModuleState","initialState","reducers","createUseModuleStateHook","useModuleStateSelector","colors","brand","size","secondary","text","toggleLoading","setLoading","toggleConfigDrawer","setVariant","setIcon","setColor","length"],"sourceRoot":""}