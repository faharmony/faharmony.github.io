{"version":3,"sources":["modules/welcome/state/store.ts","modules/welcome/state/reducers.ts","modules/welcome/state/index.ts"],"names":["initialState","loading","startLoading","state","stopLoading","setLoading","payload","ModuleState","createModuleState","name","reducers","ModuleActions","actions"],"mappings":"iHAIA,oDAAO,MAAMA,EAAuB,CAAEC,SAAS,I,iCCE/C,iJAAMC,EAAyBC,IAC7BA,EAAMF,SAAU,GAGZG,EAAwBD,IAC5BA,EAAMF,SAAU,GAGZI,EAA0C,CAACF,GAASG,cACxDH,EAAMF,QAAUK,I,gCCflB,0LAIA,MAEMC,EAAcC,YAAkB,CACpCC,KAHe,UAIfT,4BACAU,aAGeC,EAAkBJ,EAA3BK","file":"static/js/13.67901186.chunk.js","sourcesContent":["export interface IState {\n  loading: boolean;\n}\n\nexport const initialState: IState = { loading: true };\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { IState } from \"./store\";\n\ntype Reducer = CaseReducer<IState>;\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\n\nconst startLoading: Reducer = (state) => {\n  state.loading = true;\n};\n\nconst stopLoading: Reducer = (state) => {\n  state.loading = false;\n};\n\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\nexport { startLoading, stopLoading, setLoading };\n","import { createModuleState } from \"@faharmony/state\";\nimport { initialState } from \"./store\";\nimport * as reducers from \"./reducers\";\n\nconst ModuleId = \"welcome\";\n\nconst ModuleState = createModuleState({\n  name: ModuleId,\n  initialState,\n  reducers,\n});\n\nconst { actions: ModuleActions } = ModuleState;\n\nexport { ModuleState, ModuleActions };\nexport * from \"./store\";\n"],"sourceRoot":""}