{"version":3,"sources":["modules/welcome/state/index.ts","modules/welcome/state/store.ts","modules/welcome/state/reducers.ts","modules/welcome/pages/MainPage.tsx"],"names":["ModuleId","ModuleState","createModuleState","name","initialState","reducers","ModuleActions","actions","createUseModuleStateHook","useModuleState","useModuleStateSelector","loading","startLoading","state","addToast","id","uuid","title","stopLoading","setLoading","payload","Redux","t","useModule","dispatch","useDispatch","state2","direction","justifyContent","width","value","onClick","JSON","stringify","MainPage","caption","heading","toolbarContent","variant","children"],"mappings":"oHAAA,iVAQA,IAAMA,EAAW,UAEXC,EAAcC,YAAkB,CACpCC,KAAMH,EACNI,4BACAC,aAGeC,EAAkBL,EAA3BM,QAER,EAGIC,YAAiCR,GAFnCS,EADF,EACEA,eACAC,EAFF,EAEEA,wB,iCChBF,oDAAO,IAAMN,EAAuB,CAAEO,SAAS,I,iCCH/C,gKAOMC,EAAwB,SAACC,GAC7BA,EAAMF,SAAU,EAChBG,YAAS,CAAEC,GAAIC,cAAQC,MAAO,mBAG1BC,EAAuB,SAACL,GAC5BA,EAAMF,SAAU,EAChBG,YAAS,CAAEC,GAAIC,cAAQC,MAAO,kBAG1BE,EAA0C,SAACN,EAAD,GAAyB,IAAfO,EAAc,EAAdA,QACxDP,EAAMF,QAAUS,I,iCCnBlB,yIAaaC,EAAQ,WACnB,IAAQC,EAAMC,cAAND,EACFE,EAAWC,wBACXC,EAAShB,kCAAuB,SAACG,GAAD,OAAWA,EAAMF,WACjDE,EAAQJ,2BACd,OACE,eAAC,IAAD,CAAKkB,UAAU,SAAf,UACE,eAAC,IAAD,CAAKC,eAAe,aAApB,UACE,eAAC,IAAD,CAAKC,MAAM,OAAX,UACE,cAAC,IAAD,CACEC,MAAM,QACNC,QAAS,kBAAMP,EAASlB,gBAAcM,mBAExC,cAAC,IAAD,CACEkB,MAAM,OACNC,QAAS,kBAAMP,EAASlB,gBAAcY,kBAExC,cAAC,IAAD,CACEY,MAAM,SACNC,QAAS,kBAAMP,EAASlB,gBAAca,YAAYN,EAAMF,gBAG3DE,EAAMF,SAAW,cAAC,IAAD,IAClB,cAAC,IAAD,CAAMmB,MAAOR,EAAE,gBAEjB,gCACGU,KAAKC,UAAUpB,EAAO,KAAM,GAC5BmB,KAAKC,UAAUP,EAAQ,KAAM,UA+CzBQ,EAAW,WACtB,IAAQZ,EAAMC,cAAND,EA6BR,OACE,cAAC,IAAD,CACEa,QAAS,OACTC,QAASd,EAAE,cACXe,eAAgB,cAAC,IAAD,CAAMC,QAAQ,KAAKR,MAAM,YAEzCS,SAAU,cAAClB,EAAD","file":"static/js/35.d9a37193.chunk.js","sourcesContent":["import {\r\n  createModuleState,\r\n  createUseModuleStateHook,\r\n  useDispatch,\r\n} from \"@faharmony/state\";\r\nimport { initialState, IState } from \"./store\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst ModuleId = \"welcome\";\r\n\r\nconst ModuleState = createModuleState({\r\n  name: ModuleId,\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nconst { actions: ModuleActions } = ModuleState;\r\n\r\nconst {\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n} = createUseModuleStateHook<IState>(ModuleId);\r\nexport { useDispatch };\r\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\r\nexport * from \"./store\";\r\n","export interface IState {\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: IState = { loading: true };\r\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\r\nimport { addToast } from \"@faharmony/core\";\r\nimport { uuid } from \"@faharmony/helpers\";\r\nimport { IState } from \"./store\";\r\n\r\ntype Reducer = CaseReducer<IState>;\r\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\r\n\r\nconst startLoading: Reducer = (state) => {\r\n  state.loading = true;\r\n  addToast({ id: uuid(), title: \"start loading\" });\r\n};\r\n\r\nconst stopLoading: Reducer = (state) => {\r\n  state.loading = false;\r\n  addToast({ id: uuid(), title: \"stop loading\" });\r\n};\r\n\r\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\r\n  state.loading = payload;\r\n};\r\n\r\nexport { startLoading, stopLoading, setLoading };\r\n","/** i18n-ally useTranslation(\"welcome\") */\r\n\r\nimport { useModule } from \"@faharmony/module\";\r\nimport { PageView } from \"@faharmony/views\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { Text, Button, RingLoader } from \"@faharmony/components\";\r\nimport {\r\n  ModuleActions,\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n  useDispatch,\r\n} from \"../state\";\r\n\r\nexport const Redux = () => {\r\n  const { t } = useModule();\r\n  const dispatch = useDispatch();\r\n  const state2 = useModuleStateSelector((state) => state.loading);\r\n  const state = useModuleState();\r\n  return (\r\n    <Box direction=\"column\">\r\n      <Box justifyContent=\"flex-start\">\r\n        <Box width=\"auto\">\r\n          <Button\r\n            value=\"Start\"\r\n            onClick={() => dispatch(ModuleActions.startLoading())}\r\n          />\r\n          <Button\r\n            value=\"Stop\"\r\n            onClick={() => dispatch(ModuleActions.stopLoading())}\r\n          />\r\n          <Button\r\n            value=\"Toggle\"\r\n            onClick={() => dispatch(ModuleActions.setLoading(!state.loading))}\r\n          />\r\n        </Box>\r\n        {state.loading && <RingLoader />}\r\n        <Text value={t(\"loading\")} />\r\n      </Box>\r\n      <pre>\r\n        {JSON.stringify(state, null, 2)}\r\n        {JSON.stringify(state2, null, 2)}\r\n      </pre>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// const ApolloRest = () => {\r\n//   const query = gql`\r\n//     query Roles {\r\n//       groups @rest(type: \"Group\", path: \"groups\", endpoint: \"keycloak\") {\r\n//         id\r\n//         name\r\n//         realmRoles\r\n//         clientRoles\r\n//         subGroups\r\n//         attributes\r\n//       }\r\n//     }\r\n//   `;\r\n//   const { data, loading, error } = useQuery(query);\r\n//   console.dir(data);\r\n//   return (\r\n//     <div>\r\n//       {loading\r\n//         ? \"Loading...\"\r\n//         : error\r\n//         ? \"Error\"\r\n//         : JSON.stringify(data.groups, null, 2)}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Counter = () => {\r\n//   const [count, setCount] = React.useState(0);\r\n//   React.useEffect(() => {\r\n//     const t = setInterval(() => setCount((c) => c + 1), 1000);\r\n//     return () => {\r\n//       clearInterval(t);\r\n//     };\r\n//   }, []);\r\n//   return <Center>{count}</Center>;\r\n// };\r\n\r\n/**\r\n * Default page of module\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const MainPage = () => {\r\n  const { t } = useModule();\r\n\r\n  // const tabs: ITabsProps[] = [\r\n  //   {\r\n  //     id: \"1\",\r\n  //     label: \"Preview NAV\",\r\n  //     content: <Center>1</Center>,\r\n  //     defaultActive: true,\r\n  //   },\r\n  //   {\r\n  //     id: \"2\",\r\n  //     label: \"Portfolio\",\r\n  //     content: <Counter />,\r\n  //     // disabled: true,\r\n  //   },\r\n  //   { id: \"3\", label: \"Warnings\", content: <Center>3</Center> },\r\n  // ];\r\n\r\n  // const { TabBar } = useTabs([...tabs]);\r\n  // const openSide = () =>\r\n  //   setAppSideDrawer({\r\n  //     caption: \"Calculated nav\",\r\n  //     heading: \"FA Equity +\",\r\n  //     toolbarContent: <div />,\r\n  //     tabs,\r\n  //   });\r\n\r\n  // setTimeout(openSide, 100);\r\n\r\n  return (\r\n    <PageView\r\n      caption={\"Test\"}\r\n      heading={t(\"moduleName\")}\r\n      toolbarContent={<Text variant=\"h4\" value=\"Harmony\" />}\r\n      // actions={<ButtonPopover value=\"Open\" onClick={openSide} spacing=\"sm\" />}\r\n      children={<Redux />}\r\n    />\r\n  );\r\n};\r\n\r\n// is FA Solutions' framework for React-app development\r\n"],"sourceRoot":""}