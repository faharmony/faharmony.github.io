{"version":3,"file":"static/js/4346.a7a091cf.chunk.js","mappings":"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","sources":["modules/components/pages/Form1.tsx"],"sourcesContent":["import {\r\n  Form,\r\n  FormControl,\r\n  TextField,\r\n  Checkbox,\r\n  Combobox,\r\n  RadioGroup,\r\n  useForm,\r\n  resetFormValues,\r\n  ComboboxOptionType,\r\n  ComboboxOptionsType,\r\n  FormValuesWatcher,\r\n  RadioOptionType,\r\n} from \"@faharmony/form\";\r\nimport { Button, Divider } from \"@faharmony/components\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { PageView } from \"@faharmony/views\";\r\n\r\ntype FormInputs = {\r\n  username: string;\r\n  password: string;\r\n  env: RadioOptionType;\r\n  envCreate: ComboboxOptionType[];\r\n  roles: ComboboxOptionType[];\r\n  number: number;\r\n  env2: string;\r\n  remember: boolean;\r\n};\r\n\r\nconst envOptions: ComboboxOptionsType[] | RadioOptionType[] = [\r\n  { label: \"Develop\", value: \"dev\" },\r\n  { label: \"Master\", value: \"master\", help: \"Master Environment\" },\r\n  { label: \"Test\", value: \"test\", isDisabled: true },\r\n];\r\n\r\nconst rolesOptions: ComboboxOptionsType = [\r\n  {\r\n    label: \"roles\",\r\n    options: [\r\n      { label: \"Admin\", value: \"admin\" },\r\n      { label: \"BO\", value: \"back\" },\r\n      { label: \"Client\", value: \"front\", isDisabled: true },\r\n    ],\r\n  },\r\n];\r\n\r\nconst defaultValues: Partial<FormInputs> = {\r\n  username: \"admin\",\r\n  password: \"ke5ku5TA\",\r\n  remember: true,\r\n  number: 324.432,\r\n  env: envOptions[0],\r\n  env2: \"test\",\r\n  roles: [rolesOptions[0].options[0]],\r\n};\r\n\r\nconst FormNode = () => {\r\n  const formMethods = useForm<FormInputs>({\r\n    defaultValues,\r\n    criteriaMode: \"all\",\r\n  });\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = formMethods;\r\n  const onSubmit = handleSubmit(console.log);\r\n\r\n  return (\r\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\r\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\r\n        <FormControl\r\n          label=\"Username\"\r\n          helpText={\"Your login username.  \\n Must meet the requirement\"}\r\n          errorText={errors.username?.message}\r\n          required\r\n        >\r\n          <TextField\r\n            registerRef={register(\"username\", {\r\n              required: \"Username required\",\r\n              minLength: { value: 4, message: \"More than 3 characters.\" },\r\n            })}\r\n            name=\"username\"\r\n            placeholder=\"Enter username...\"\r\n            error={!!errors.username}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          label=\"Password\"\r\n          required\r\n          errorText={errors.password?.message}\r\n        >\r\n          <TextField\r\n            name=\"password\"\r\n            registerRef={register(\"password\", {\r\n              required: \"Password required\",\r\n            })}\r\n            placeholder=\"Enter password...\"\r\n            type=\"password\"\r\n            error={!!errors.password}\r\n          />\r\n        </FormControl>\r\n        <FormControl label=\"Applicable roles\">\r\n          <Combobox\r\n            name=\"roles\"\r\n            placeholder=\"Select roles...\"\r\n            options={rolesOptions}\r\n          />\r\n        </FormControl>\r\n        <FormControl label=\"Environment\" helpText=\"Development environment\">\r\n          <Combobox\r\n            name=\"env\"\r\n            placeholder=\"Select environment...\"\r\n            options={envOptions}\r\n            isMulti={false}\r\n            isSearchable={false}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl label=\"Creatable combobox\">\r\n          <Combobox\r\n            name=\"envCreate\"\r\n            placeholder=\"Select or add new environment\"\r\n            isCreatable\r\n            options={envOptions}\r\n            isMulti={false}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl label=\"Environment again...\">\r\n          <RadioGroup\r\n            name=\"env2\"\r\n            options={[...envOptions]}\r\n            registerRef={register(\"env2\")}\r\n            direction=\"row\"\r\n          />\r\n        </FormControl>\r\n        <FormControl label=\"Number\">\r\n          <TextField\r\n            placeholder=\"0.00\"\r\n            error={!!errors.number}\r\n            name=\"number\"\r\n            registerRef={register(\"number\")}\r\n          />\r\n        </FormControl>\r\n\r\n        <Divider />\r\n        <Box justifyContent=\"space-between\">\r\n          <Checkbox\r\n            registerRef={register(\"remember\")}\r\n            name=\"remember\"\r\n            label=\"Keep me logged in\"\r\n          />\r\n          <Box width=\"auto\">\r\n            <Button\r\n              value=\"Reset\"\r\n              variant=\"secondary\"\r\n              onClick={() => resetFormValues(control)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              onClick={onSubmit}\r\n              variant=\"primary\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <FormValuesWatcher />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Page = () => (\r\n  <PageView heading=\"Form\" overflow=\"scroll\">\r\n    <FormNode />\r\n  </PageView>\r\n);\r\n\r\nexport default Page;\r\n"],"names":["envOptions","label","value","help","isDisabled","rolesOptions","options","defaultValues","username","password","remember","number","env","env2","roles","FormNode","_errors$username","_errors$password","formMethods","useForm","criteriaMode","register","control","handleSubmit","formState","errors","onSubmit","console","log","_jsxs","Form","style","width","direction","children","Box","alignItems","_jsx","FormControl","helpText","errorText","message","required","TextField","registerRef","minLength","name","placeholder","error","type","Combobox","isMulti","isSearchable","isCreatable","RadioGroup","Divider","justifyContent","Checkbox","Button","variant","onClick","resetFormValues","FormValuesWatcher","Page","PageView","heading","overflow"],"sourceRoot":""}