{"version":3,"file":"static/js/3819.bcdfd140.chunk.js","mappings":"gLAqBMA,EAAqC,CACzCC,SAAU,IAAIC,KACdC,SAAU,IAAID,KAAK,cACnBE,QAAQ,EACRC,OAAQ,aAGJC,EAAe,CACnB,IAAIJ,KACJ,IAAIA,KAAK,cACT,IAAIA,KAAK,eAGLK,EAAW,WACf,IAAMC,GAAcC,EAAAA,EAAAA,IAAoB,CACtCT,cAAAA,EACAU,aAAc,QAERC,EAAoCH,EAApCG,QAASC,EAA2BJ,EAA3BI,aAAcC,EAAaL,EAAbK,SAEzBC,EAAWF,EAAaG,QAAQC,KACtC,OACE,UAAC,KAAD,CAAMR,YAAaA,EAAaS,MAAO,CAAEC,MAAO,QAAUC,UAAU,MAApE,WACE,UAAC,KAAD,CAAKA,UAAU,SAASD,MAAO,QAASE,WAAW,QAAnD,WACE,SAAC,KAAD,CAAaC,MAAM,OAAnB,UACE,SAAC,KAAD,CAAYC,KAAK,WAAWC,aAAcjB,OAE5C,SAAC,KAAD,CAAae,MAAM,kBAAnB,UACE,SAAC,KAAD,CACEC,KAAK,WACLE,SAAUT,QAAQC,IAClBO,aAAc,CAAC,IAAIrB,MACnBuB,UAAQ,OAGZ,UAAC,KAAD,YACE,SAAC,KAAD,CAAaJ,MAAM,mBAAnB,UACE,SAAC,KAAD,CAAQC,KAAK,SAASI,IAAKb,EAAUQ,MAAM,mBAE7C,SAAC,KAAD,CAAaA,MAAM,oBAAnB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAQI,UAAQ,KAChB,SAAC,KAAD,CAAQA,UAAQ,EAACE,SAAS,aAIhC,SAAC,KAAD,CAAaN,MAAM,cAAnB,UACE,SAAC,KAAD,CAAWC,KAAK,SAASI,IAAKb,EAAUe,WAAW,WAErD,SAAC,KAAD,KACA,SAAC,KAAD,CAAKC,eAAe,gBAApB,UACE,UAAC,KAAD,CAAKX,MAAM,OAAX,WACE,SAAC,KAAD,CACEY,MAAM,QACNC,QAAQ,YACRC,SAAO,EACPC,QAAS,kBAAMC,EAAAA,EAAAA,IAAgBvB,OAEjC,SAAC,KAAD,CACEwB,KAAK,SACLL,MAAM,SACNG,QAASnB,EACTiB,QAAQ,qBAKhB,0BACE,SAAC,KAAD,UA8BR,UAxBa,kBACX,UAAC,KAAD,CAAUK,QAAQ,OAAOC,SAAS,SAAlC,WACE,SAAC9B,EAAD,KACA,UAAC,KAAD,CAAKU,MAAO,CAAEC,MAAO,SAArB,WACE,SAAC,KAAD,CAAaG,MAAM,kBAAnB,UACE,SAAC,KAAD,CACEC,KAAK,WACLE,SAAUT,QAAQC,IAClBsB,SAAU,IAAIpC,KACdqC,UAAQ,OAIZ,SAAC,KAAD,CAASC,MAAM,QAAf,UACE,SAAC,KAAD,CACElB,KAAK,WACLmB,aAAc1B,QAAQC,IACtBsB,SAAU,IAAIpC","sources":["modules/components/pages/Form2.tsx"],"sourcesContent":["import {\r\n  Form,\r\n  useForm,\r\n  resetFormValues,\r\n  FormValuesWatcher,\r\n  DatePicker,\r\n  FormControl,\r\n  Toggle,\r\n  TextField,\r\n} from \"@faharmony/form\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { Button, Divider, InfoBox } from \"@faharmony/components\";\r\nimport { PageView } from \"@faharmony/views\";\r\n\r\ntype FormInputs = {\r\n  testDate: Date;\r\n  realDate: Date;\r\n  toggle: boolean;\r\n  number: number;\r\n};\r\n\r\nconst defaultValues: Partial<FormInputs> = {\r\n  testDate: new Date(),\r\n  realDate: new Date(\"2020-12-12\"),\r\n  toggle: true,\r\n  number: 1343400.234,\r\n};\r\n\r\nconst enabledDates = [\r\n  new Date(),\r\n  new Date(\"2021-03-12\"),\r\n  new Date(\"2021-03-29\"),\r\n];\r\n\r\nconst FormNode = () => {\r\n  const formMethods = useForm<FormInputs>({\r\n    defaultValues,\r\n    criteriaMode: \"all\",\r\n  });\r\n  const { control, handleSubmit, register } = formMethods;\r\n\r\n  const onSubmit = handleSubmit(console.log);\r\n  return (\r\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\r\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\r\n        <FormControl label=\"Date\">\r\n          <DatePicker name=\"testDate\" includeDates={enabledDates} />\r\n        </FormControl>\r\n        <FormControl label=\"Date (disabled)\">\r\n          <DatePicker\r\n            name=\"realDate\"\r\n            onChange={console.log}\r\n            includeDates={[new Date()]}\r\n            disabled\r\n          />\r\n        </FormControl>\r\n        <Box>\r\n          <FormControl label=\"Toggle (enabled)\">\r\n            <Toggle name=\"toggle\" ref={register} label=\"Hello world\" />\r\n          </FormControl>\r\n          <FormControl label=\"Toggle (disabled)\">\r\n            <Box>\r\n              <Toggle disabled />\r\n              <Toggle disabled checked={true} />\r\n            </Box>\r\n          </FormControl>\r\n        </Box>\r\n        <FormControl label=\"NumberField\">\r\n          <TextField name=\"number\" ref={register} prefixText=\"EUR\" />\r\n        </FormControl>\r\n        <Divider />\r\n        <Box justifyContent=\"space-between\">\r\n          <Box width=\"auto\">\r\n            <Button\r\n              value=\"Reset\"\r\n              variant=\"secondary\"\r\n              loading\r\n              onClick={() => resetFormValues(control)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              onClick={onSubmit}\r\n              variant=\"primary\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <div>\r\n        <FormValuesWatcher />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Page = () => (\r\n  <PageView heading=\"Form\" overflow=\"scroll\">\r\n    <FormNode />\r\n    <Box style={{ width: \"300px\" }}>\r\n      <FormControl label=\"Date (readonly)\">\r\n        <DatePicker\r\n          name=\"realDate\"\r\n          onChange={console.log}\r\n          selected={new Date()}\r\n          readOnly\r\n        />\r\n      </FormControl>\r\n\r\n      <InfoBox field=\"Date \">\r\n        <DatePicker\r\n          name=\"realDate\"\r\n          onDateChange={console.log}\r\n          selected={new Date()}\r\n        />\r\n      </InfoBox>\r\n    </Box>\r\n  </PageView>\r\n);\r\n\r\nexport default Page;\r\n"],"names":["defaultValues","testDate","Date","realDate","toggle","number","enabledDates","FormNode","formMethods","useForm","criteriaMode","control","handleSubmit","register","onSubmit","console","log","style","width","direction","alignItems","label","name","includeDates","onChange","disabled","ref","checked","prefixText","justifyContent","value","variant","loading","onClick","resetFormValues","type","heading","overflow","selected","readOnly","field","onDateChange"],"sourceRoot":""}