{"version":3,"sources":["modules/components/pages/Form1.tsx"],"names":["envOptions","label","value","isDisabled","rolesOptions","options","defaultValues","username","password","remember","number","env","env2","roles","FormNode","formMethods","useForm","criteriaMode","register","control","handleSubmit","errors","onSubmit","console","log","style","width","direction","alignItems","helpText","errorText","message","required","ref","minLength","name","placeholder","error","type","isMulti","isSearchable","justifyContent","variant","onClick","resetFormValues","Page","heading","overflow"],"mappings":"2GAAA,gDA2BMA,EAAkC,CACtC,CAAEC,MAAO,UAAWC,MAAO,OAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,OAAQC,YAAY,IAGxCC,EAAoC,CACxC,CACEH,MAAO,QACPI,QAAS,CACP,CAAEJ,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,SAAUC,MAAO,QAASC,YAAY,MAK/CG,EAAqC,CACzCC,SAAU,QACVC,SAAU,WACVC,UAAU,EACVC,OAAQ,QACRC,IAAKX,EAAW,GAChBY,KAAM,OACNC,MAAO,CAACT,EAAa,GAAGC,QAAQ,KAG5BS,EAAW,WAAO,IAAD,IACfC,EAAcC,YAAoB,CACtCV,gBACAW,aAAc,QAERC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,QAASC,EAAyBL,EAAzBK,aAAcC,EAAWN,EAAXM,OACnCC,EAAWF,EAAaG,QAAQC,KAEtC,OACE,eAAC,IAAD,CAAMT,YAAaA,EAAaU,MAAO,CAAEC,MAAO,QAAUC,UAAU,MAApE,UACE,eAAC,IAAD,CAAKA,UAAU,SAASD,MAAO,QAASE,WAAW,QAAnD,UACE,cAAC,IAAD,CACE3B,MAAM,WACN4B,SAAS,uBACTC,UAAS,UAAET,EAAOd,gBAAT,aAAE,EAAiBwB,QAC5BC,UAAQ,EAJV,SAME,cAAC,IAAD,CACEC,IAAKf,EAAS,CACZc,SAAU,oBACVE,UAAW,CAAEhC,MAAO,EAAG6B,QAAS,6BAElCI,KAAK,WACLC,YAAY,oBACZC,QAAShB,EAAOd,aAGpB,cAAC,IAAD,CACEN,MAAM,WACN+B,UAAQ,EACRF,UAAS,UAAET,EAAOb,gBAAT,aAAE,EAAiBuB,QAH9B,SAKE,cAAC,IAAD,CACEI,KAAK,WACLF,IAAKf,EAAS,CAAEc,SAAU,sBAC1BI,YAAY,oBACZE,KAAK,WACLD,QAAShB,EAAOb,aAGpB,cAAC,IAAD,CAAaP,MAAM,mBAAnB,SACE,cAAC,IAAD,CACEkC,KAAK,QACLC,YAAY,kBACZ/B,QAASD,MAGb,cAAC,IAAD,CAAaH,MAAM,cAAnB,SACE,cAAC,IAAD,CACEkC,KAAK,MACLC,YAAY,wBACZ/B,QAASL,EACTuC,SAAS,EACTC,cAAc,MAIlB,cAAC,IAAD,CAAavC,MAAM,uBAAnB,SACE,cAAC,IAAD,CACEkC,KAAK,OACL9B,QAAO,UAAML,GACbiC,IAAKf,EACLS,UAAU,UAGd,cAAC,IAAD,CAAa1B,MAAM,SAAnB,SACE,cAAC,IAAD,CAAWmC,YAAY,OAAOC,QAAShB,EAAOX,OAAQyB,KAAK,aAG7D,cAAC,IAAD,IACA,eAAC,IAAD,CAAKM,eAAe,gBAApB,UACE,cAAC,IAAD,CAAUR,IAAKf,EAAUiB,KAAK,WAAWlC,MAAM,sBAC/C,eAAC,IAAD,CAAKyB,MAAM,OAAX,UACE,cAAC,IAAD,CACExB,MAAM,QACNwC,QAAQ,YACRC,QAAS,kBAAMC,YAAgBzB,MAEjC,cAAC,IAAD,CACEmB,KAAK,SACLpC,MAAM,SACNyC,QAASrB,EACToB,QAAQ,qBAKhB,cAAC,IAAD,QAWSG,UANF,kBACX,cAAC,IAAD,CAAUC,QAAQ,OAAOC,SAAS,SAAlC,SACE,cAACjC,EAAD","file":"static/js/31.b5055e66.chunk.js","sourcesContent":["import {\r\n  Form,\r\n  FormControl,\r\n  TextField,\r\n  Checkbox,\r\n  Combobox,\r\n  RadioGroup,\r\n  useForm,\r\n  resetFormValues,\r\n  ComboboxOptionType,\r\n  ComboboxOptionsType,\r\n  FormValuesWatcher,\r\n} from \"@faharmony/form\";\r\nimport { Button, Divider } from \"@faharmony/components\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { PageView } from \"@faharmony/views\";\r\n\r\ntype FormInputs = {\r\n  username: string;\r\n  password: string;\r\n  env: ComboboxOptionType;\r\n  roles: ComboboxOptionType[];\r\n  number: number;\r\n  env2: string;\r\n  remember: boolean;\r\n};\r\n\r\nconst envOptions: ComboboxOptionsType = [\r\n  { label: \"Develop\", value: \"dev\" },\r\n  { label: \"Master\", value: \"master\" },\r\n  { label: \"Test\", value: \"test\", isDisabled: true },\r\n];\r\n\r\nconst rolesOptions: ComboboxOptionsType = [\r\n  {\r\n    label: \"roles\",\r\n    options: [\r\n      { label: \"Admin\", value: \"admin\" },\r\n      { label: \"BO\", value: \"back\" },\r\n      { label: \"Client\", value: \"front\", isDisabled: true },\r\n    ],\r\n  },\r\n];\r\n\r\nconst defaultValues: Partial<FormInputs> = {\r\n  username: \"admin\",\r\n  password: \"ke5ku5TA\",\r\n  remember: true,\r\n  number: 324.432,\r\n  env: envOptions[0],\r\n  env2: \"test\",\r\n  roles: [rolesOptions[0].options[0]],\r\n};\r\n\r\nconst FormNode = () => {\r\n  const formMethods = useForm<FormInputs>({\r\n    defaultValues,\r\n    criteriaMode: \"all\",\r\n  });\r\n  const { register, control, handleSubmit, errors } = formMethods;\r\n  const onSubmit = handleSubmit(console.log);\r\n\r\n  return (\r\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\r\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\r\n        <FormControl\r\n          label=\"Username\"\r\n          helpText=\"Your login username.\"\r\n          errorText={errors.username?.message}\r\n          required\r\n        >\r\n          <TextField\r\n            ref={register({\r\n              required: \"Username required\",\r\n              minLength: { value: 4, message: \"More than 3 characters.\" },\r\n            })}\r\n            name=\"username\"\r\n            placeholder=\"Enter username...\"\r\n            error={!!errors.username}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          label=\"Password\"\r\n          required\r\n          errorText={errors.password?.message}\r\n        >\r\n          <TextField\r\n            name=\"password\"\r\n            ref={register({ required: \"Password required\" })}\r\n            placeholder=\"Enter password...\"\r\n            type=\"password\"\r\n            error={!!errors.password}\r\n          />\r\n        </FormControl>\r\n        <FormControl label=\"Applicable roles\">\r\n          <Combobox\r\n            name=\"roles\"\r\n            placeholder=\"Select roles...\"\r\n            options={rolesOptions}\r\n          />\r\n        </FormControl>\r\n        <FormControl label=\"Environment\">\r\n          <Combobox\r\n            name=\"env\"\r\n            placeholder=\"Select environment...\"\r\n            options={envOptions}\r\n            isMulti={false}\r\n            isSearchable={false}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl label=\"Environment again...\">\r\n          <RadioGroup\r\n            name=\"env2\"\r\n            options={[...envOptions]}\r\n            ref={register}\r\n            direction=\"row\"\r\n          />\r\n        </FormControl>\r\n        <FormControl label=\"Number\">\r\n          <TextField placeholder=\"0.00\" error={!!errors.number} name=\"number\" />\r\n        </FormControl>\r\n\r\n        <Divider />\r\n        <Box justifyContent=\"space-between\">\r\n          <Checkbox ref={register} name=\"remember\" label=\"Keep me logged in\" />\r\n          <Box width=\"auto\">\r\n            <Button\r\n              value=\"Reset\"\r\n              variant=\"secondary\"\r\n              onClick={() => resetFormValues(control)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              onClick={onSubmit}\r\n              variant=\"primary\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <FormValuesWatcher />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Page = () => (\r\n  <PageView heading=\"Form\" overflow=\"scroll\">\r\n    <FormNode />\r\n  </PageView>\r\n);\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}