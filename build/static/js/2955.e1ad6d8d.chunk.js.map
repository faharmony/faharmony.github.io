{"version":3,"file":"static/js/2955.e1ad6d8d.chunk.js","mappings":"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","sources":["modules/components/pages/MUI_Components/Samples/Table.tsx","../../node_modules/@mui/system/esm/createBox.js","../../node_modules/@mui/material/Box/Box.js","../../node_modules/@mui/material/ListItemText/listItemTextClasses.js"],"sourcesContent":["import DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\r\nimport { Box } from \"@mui/material\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { lighten, useTheme } from \"@mui/material/styles\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\n\r\ninterface Data {\r\n  calories: number;\r\n  carbs: number;\r\n  fat: number;\r\n  name: string;\r\n  protein: number;\r\n}\r\n\r\nfunction createData(\r\n  name: string,\r\n  calories: number,\r\n  fat: number,\r\n  carbs: number,\r\n  protein: number\r\n): Data {\r\n  return { name, calories, fat, carbs, protein }\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Donut\", 452, 25.0, 51, 4.9),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n  createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\r\n  createData(\"KitKat\", 518, 26.0, 65, 7.0),\r\n  createData(\"Lollipop\", 392, 0.2, 98, 0.0),\r\n  createData(\"Marshmallow\", 318, 0, 81, 2.0),\r\n  createData(\"Nougat\", 360, 19.0, 9, 37.0),\r\n  createData(\"Oreo\", 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\"\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n    a: { [key in Key]: number | string },\r\n    b: { [key in Key]: number | string }\r\n  ) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0])\r\n    if (order !== 0) return order\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizedThis.map(el => el[0])\r\n}\r\n\r\ninterface HeadCell {\r\n  disablePadding: boolean\r\n  id: keyof Data\r\n  label: string\r\n  numeric: boolean\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n]\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Data\r\n  ) => void\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n  order: Order\r\n  orderBy: string\r\n  rowCount: number\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props\r\n  const createSortHandler = (property: keyof Data) => (\r\n    event: React.MouseEvent<unknown>\r\n  ) => {\r\n    onRequestSort(event, property)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={{\r\n                  border: 0,\r\n                  clip: \"rect(0 0 0 0)\",\r\n                  height: 1,\r\n                  m: '-1px',\r\n                  overflow: \"hidden\",\r\n                  p: 0,\r\n                  position: \"absolute\",\r\n                  top: 20,\r\n                  width: '1px',\r\n                }}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const { numSelected } = props\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <Toolbar sx={{\r\n      pl: 2, pr: 1,\r\n      ...(props.numSelected > 0 ? theme.palette.mode === \"light\"\r\n        ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        } : {})\r\n    }}>\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" size=\"large\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" size=\"large\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function TableExample() {\r\n  const [order, setOrder] = React.useState<Order>(\"asc\")\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>(\"calories\")\r\n  const [selected, setSelected] = React.useState<string[]>([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [dense, setDense] = React.useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Data\r\n  ) => {\r\n    const isAsc = orderBy === property && order === \"asc\"\r\n    setOrder(isAsc ? \"desc\" : \"asc\")\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name)\r\n      setSelected(newSelecteds)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected: string[] = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\r\n\r\n  return (\r\n    <Box sx={{ width: 1 }}>\r\n      <Paper sx={{ width: 1, mb: 1 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name)\r\n                  const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;"],"names":["createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","_jsx","TableHead","children","_jsxs","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","Box","component","sx","border","clip","height","m","overflow","p","position","top","width","EnhancedTableToolbar","theme","useTheme","Toolbar","_objectSpread","pl","pr","palette","mode","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","Typography","flex","variant","Tooltip","title","IconButton","size","DeleteIcon","FilterListIcon","TableExample","_React$useState","React","_React$useState2","_slicedToArray","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","_React$useState10","dense","setDense","_React$useState11","_React$useState12","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","mb","TableContainer","Table","minWidth","target","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","concat","hover","selectedIndex","newSelected","handleClick","role","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","FormControlLabel","control","Switch","_excluded","defaultTheme","createTheme","options","arguments","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","ref","_extendSxProp","extendSxProp","className","_extendSxProp$compone","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","generate","getListItemTextUtilityClass","slot","generateUtilityClass","listItemTextClasses","generateUtilityClasses"],"sourceRoot":""}