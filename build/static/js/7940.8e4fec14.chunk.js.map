{"version":3,"file":"static/js/7940.8e4fec14.chunk.js","mappings":"2QAaaA,EAAQ,WACnB,IAAQC,GAAMC,EAAAA,EAAAA,MAAND,EACFE,GAAWC,EAAAA,EAAAA,eACXC,GAASC,EAAAA,EAAAA,yBAAuB,SAACC,GAAD,OAAWA,EAAMC,OAAjB,IAChCD,GAAQE,EAAAA,EAAAA,kBACd,OACE,UAAC,KAAD,CAAKC,UAAU,SAAf,WACE,UAAC,KAAD,CAAKC,eAAe,aAApB,WACE,UAAC,KAAD,CAAKC,MAAM,OAAX,WACE,SAAC,KAAD,CACEC,MAAM,QACNC,QAAS,kBAAMX,EAASY,EAAAA,cAAAA,eAAf,KAEX,SAAC,KAAD,CACEF,MAAM,OACNC,QAAS,kBAAMX,EAASY,EAAAA,cAAAA,cAAf,KAEX,SAAC,KAAD,CACEF,MAAM,SACNC,QAAS,kBAAMX,EAASY,EAAAA,cAAAA,YAA0BR,EAAMC,SAA/C,OAGZD,EAAMC,UAAW,SAAC,KAAD,KAClB,SAAC,KAAD,CAAMK,MAAOZ,EAAE,iBAEjB,2BACGe,KAAKC,UAAUV,EAAO,KAAM,GAC5BS,KAAKC,UAAUZ,EAAQ,KAAM,QAIrC,EA2CYa,EAAW,WACtB,IAAQjB,GAAMC,EAAAA,EAAAA,MAAND,EA6BR,OACE,SAAC,KAAD,CACEkB,QAAS,OACTC,QAASnB,EAAE,cACXoB,gBAAgB,SAAC,KAAD,CAAMC,QAAQ,KAAKT,MAAM,YAEzCU,UAAU,SAACvB,EAAD,KAGf,C,mTCtHKwB,EAAW,UAEXC,GAAcC,EAAAA,EAAAA,IAAkB,CACpCC,KAAMH,EACNI,aAAAA,EAAAA,aACAC,SAAAA,IAGed,EAAkBU,EAA3BK,QAER,GAGIC,EAAAA,EAAAA,IAAiCP,GAFnCf,EADF,EACEA,eACAH,EAFF,EAEEA,sB,qKCZI0B,EAAwB,SAACzB,GAC7BA,EAAMC,SAAU,GAChByB,EAAAA,EAAAA,IAAS,CAAEC,IAAIC,EAAAA,EAAAA,MAAQC,MAAO,iBAC/B,EAEKC,EAAuB,SAAC9B,GAC5BA,EAAMC,SAAU,GAChByB,EAAAA,EAAAA,IAAS,CAAEC,IAAIC,EAAAA,EAAAA,MAAQC,MAAO,gBAC/B,EAEKE,EAA0C,SAAC/B,EAAD,GAAyB,IAAfgC,EAAc,EAAdA,QACxDhC,EAAMC,QAAU+B,CACjB,C,0EChBM,IAAMX,EAAuB,CAAEpB,SAAS,E","sources":["modules/welcome/pages/MainPage.tsx","modules/welcome/state/index.ts","modules/welcome/state/reducers.ts","modules/welcome/state/store.ts"],"sourcesContent":["/** i18n-ally useTranslation(\"welcome\") */\n\nimport { useModule } from \"@faharmony/module\";\nimport { PageView } from \"@faharmony/views\";\nimport { Box } from \"@faharmony/theme\";\nimport { Text, Button, RingLoader } from \"@faharmony/components\";\nimport {\n  ModuleActions,\n  useModuleState,\n  useModuleStateSelector,\n  useDispatch,\n} from \"../state\";\n\nexport const Redux = () => {\n  const { t } = useModule();\n  const dispatch = useDispatch();\n  const state2 = useModuleStateSelector((state) => state.loading);\n  const state = useModuleState();\n  return (\n    <Box direction=\"column\">\n      <Box justifyContent=\"flex-start\">\n        <Box width=\"auto\">\n          <Button\n            value=\"Start\"\n            onClick={() => dispatch(ModuleActions.startLoading())}\n          />\n          <Button\n            value=\"Stop\"\n            onClick={() => dispatch(ModuleActions.stopLoading())}\n          />\n          <Button\n            value=\"Toggle\"\n            onClick={() => dispatch(ModuleActions.setLoading(!state.loading))}\n          />\n        </Box>\n        {state.loading && <RingLoader />}\n        <Text value={t(\"loading\")} />\n      </Box>\n      <pre>\n        {JSON.stringify(state, null, 2)}\n        {JSON.stringify(state2, null, 2)}\n      </pre>\n    </Box>\n  );\n};\n\n// const ApolloRest = () => {\n//   const query = gql`\n//     query Roles {\n//       groups @rest(type: \"Group\", path: \"groups\", endpoint: \"keycloak\") {\n//         id\n//         name\n//         realmRoles\n//         clientRoles\n//         subGroups\n//         attributes\n//       }\n//     }\n//   `;\n//   const { data, loading, error } = useQuery(query);\n//   console.dir(data);\n//   return (\n//     <div>\n//       {loading\n//         ? \"Loading...\"\n//         : error\n//         ? \"Error\"\n//         : JSON.stringify(data.groups, null, 2)}\n//     </div>\n//   );\n// };\n\n// const Counter = () => {\n//   const [count, setCount] = React.useState(0);\n//   React.useEffect(() => {\n//     const t = setInterval(() => setCount((c) => c + 1), 1000);\n//     return () => {\n//       clearInterval(t);\n//     };\n//   }, []);\n//   return <Center>{count}</Center>;\n// };\n\n/**\n * Default page of module\n * @author Siddhant Gupta <siddhant@fasolutions.com>\n */\nexport const MainPage = () => {\n  const { t } = useModule();\n\n  // const tabs: ITabFormProps[] = [\n  //   {\n  //     id: \"1\",\n  //     label: \"Preview NAV\",\n  //     content: <Center>1</Center>,\n  //     defaultActive: true,\n  //   },\n  //   {\n  //     id: \"2\",\n  //     label: \"Portfolio\",\n  //     content: <Counter />,\n  //     // disabled: true,\n  //   },\n  //   { id: \"3\", label: \"Warnings\", content: <Center>3</Center> },\n  // ];\n\n  // const { TabBar } = useTabs([...tabs]);\n  // const openSide = () =>\n  //   setAppSideDrawer({\n  //     caption: \"Calculated nav\",\n  //     heading: \"FA Equity +\",\n  //     toolbarContent: <div />,\n  //     tabs,\n  //   });\n\n  // setTimeout(openSide, 100);\n\n  return (\n    <PageView\n      caption={\"Test\"}\n      heading={t(\"moduleName\")}\n      toolbarContent={<Text variant=\"h4\" value=\"Harmony\" />}\n      // actions={<ButtonPopover value=\"Open\" onClick={openSide} spacing=\"sm\" />}\n      children={<Redux />}\n    />\n  );\n};\n\n// is FA Solutions' framework for React-app development\n","import {\n  createModuleState,\n  createUseModuleStateHook,\n  useDispatch,\n} from \"@faharmony/state\";\nimport { initialState, IState } from \"./store\";\nimport * as reducers from \"./reducers\";\n\nconst ModuleId = \"welcome\";\n\nconst ModuleState = createModuleState({\n  name: ModuleId,\n  initialState,\n  reducers,\n});\n\nconst { actions: ModuleActions } = ModuleState;\n\nconst {\n  useModuleState,\n  useModuleStateSelector,\n} = createUseModuleStateHook<IState>(ModuleId);\nexport { useDispatch };\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\nexport * from \"./store\";\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\nimport { addToast } from \"@faharmony/core\";\nimport { uuid } from \"@faharmony/helpers\";\nimport { IState } from \"./store\";\n\ntype Reducer = CaseReducer<IState>;\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\n\nconst startLoading: Reducer = (state) => {\n  state.loading = true;\n  addToast({ id: uuid(), title: \"start loading\" });\n};\n\nconst stopLoading: Reducer = (state) => {\n  state.loading = false;\n  addToast({ id: uuid(), title: \"stop loading\" });\n};\n\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\n  state.loading = payload;\n};\n\nexport { startLoading, stopLoading, setLoading };\n","export interface IState {\n  loading: boolean;\n}\n\nexport const initialState: IState = { loading: true };\n"],"names":["Redux","t","useModule","dispatch","useDispatch","state2","useModuleStateSelector","state","loading","useModuleState","direction","justifyContent","width","value","onClick","ModuleActions","JSON","stringify","MainPage","caption","heading","toolbarContent","variant","children","ModuleId","ModuleState","createModuleState","name","initialState","reducers","actions","createUseModuleStateHook","startLoading","addToast","id","uuid","title","stopLoading","setLoading","payload"],"sourceRoot":""}