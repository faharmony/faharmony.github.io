{"version":3,"sources":["modules/components/pages/Form.tsx"],"names":["envOptions","label","value","isDisabled","rolesOptions","options","defaultValues","username","password","remember","number","env","env2","roles","FormNode","formMethods","useForm","criteriaMode","register","control","handleSubmit","errors","onSubmit","console","log","style","width","direction","alignItems","helpText","errorText","message","required","ref","minLength","name","placeholder","error","type","isMulti","isSearchable","justifyContent","variant","onClick","resetFormValues","Page","heading","overflow"],"mappings":"mKA6BMA,EAAkC,CACtC,CAAEC,MAAO,UAAWC,MAAO,OAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,OAAQC,YAAY,IAGxCC,EAAoC,CACxC,CACEH,MAAO,QACPI,QAAS,CACP,CAAEJ,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,SAAUC,MAAO,QAASC,YAAY,MAK/CG,EAAqC,CACzCC,SAAU,QACVC,SAAU,WACVC,UAAU,EACVC,OAAQ,QACRC,IAAKX,EAAW,GAChBY,KAAM,OACNC,MAAOT,EAAa,GAAGC,QAAQ,IAG3BS,EAAW,WAAO,IAAD,IACfC,EAAcC,YAAoB,CACtCV,gBACAW,aAAc,QAERC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,QAASC,EAAyBL,EAAzBK,aAAcC,EAAWN,EAAXM,OACnCC,EAAWF,EAAaG,QAAQC,KAEtC,OACE,eAAC,IAAD,CAAMT,YAAaA,EAAaU,MAAO,CAAEC,MAAO,QAAUC,UAAU,MAApE,UACE,eAAC,IAAD,CAAKA,UAAU,SAASD,MAAO,QAASE,WAAW,QAAnD,UACE,cAAC,IAAD,CACE3B,MAAM,WACN4B,SAAS,uBACTC,UAAS,UAAET,EAAOd,gBAAT,aAAE,EAAiBwB,QAC5BC,UAAQ,EAJV,SAME,cAAC,IAAD,CACEC,IAAKf,EAAS,CACZc,SAAU,oBACVE,UAAW,CAAEhC,MAAO,EAAG6B,QAAS,6BAElCI,KAAK,WACLC,YAAY,oBACZC,QAAShB,EAAOd,aAGpB,cAAC,IAAD,CACEN,MAAM,WACN+B,UAAQ,EACRF,UAAS,UAAET,EAAOb,gBAAT,aAAE,EAAiBuB,QAH9B,SAKE,cAAC,IAAD,CACEI,KAAK,WACLF,IAAKf,EAAS,CAAEc,SAAU,sBAC1BI,YAAY,oBACZE,KAAK,WACLD,QAAShB,EAAOb,aAGpB,cAAC,IAAD,CAAaP,MAAM,mBAAnB,SACE,cAAC,IAAD,CACEkC,KAAK,QACLC,YAAY,kBACZ/B,QAASD,EACTmC,SAAO,MAGX,cAAC,IAAD,CAAatC,MAAM,cAAnB,SACE,cAAC,IAAD,CACEkC,KAAK,MACLC,YAAY,wBACZ/B,QAASL,EACTwC,cAAc,MAIlB,cAAC,IAAD,CAAavC,MAAM,uBAAnB,SACE,cAAC,IAAD,CACEkC,KAAK,OACL9B,QAAO,UAAML,GACbiC,IAAKf,EACLS,UAAU,UAGd,cAAC,IAAD,CAAa1B,MAAM,SAAnB,SACE,cAAC,IAAD,CACEmC,YAAY,OACZC,QAAShB,EAAOX,OAChByB,KAAK,aAIT,cAAC,IAAD,IACA,eAAC,IAAD,CAAKM,eAAe,gBAApB,UACE,cAAC,IAAD,CAAUR,IAAKf,EAAUiB,KAAK,WAAWlC,MAAM,sBAC/C,eAAC,IAAD,CAAKyB,MAAM,OAAX,UACE,cAAC,IAAD,CACExB,MAAM,QACNwC,QAAQ,YACRC,QAAS,kBAAMC,YAAgBzB,MAEjC,cAAC,IAAD,CACEmB,KAAK,SACLpC,MAAM,SACNyC,QAASrB,EACToB,QAAQ,qBAKhB,cAAC,IAAD,QAWSG,UANF,kBACX,cAAC,IAAD,CAAUC,QAAQ,OAAOC,SAAS,SAAlC,SACE,cAACjC,EAAD","file":"static/js/21.bdcbf8c4.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  FormControl,\n  TextField,\n  NumberField,\n  Checkbox,\n  Combobox,\n  RadioGroup,\n  useForm,\n  resetFormValues,\n  ComboboxOptionType,\n  ComboboxOptionsType,\n  FormValuesWatcher,\n} from \"@faharmony/form\";\nimport { Button, Divider } from \"@faharmony/components\";\nimport { Box } from \"@faharmony/theme\";\nimport { PageView } from \"@faharmony/views\";\n\ntype FormInputs = {\n  username: string;\n  password: string;\n  env: ComboboxOptionType;\n  roles: ComboboxOptionType;\n  number: number;\n  env2: string;\n  remember: boolean;\n};\n\nconst envOptions: ComboboxOptionsType = [\n  { label: \"Develop\", value: \"dev\" },\n  { label: \"Master\", value: \"master\" },\n  { label: \"Test\", value: \"test\", isDisabled: true },\n];\n\nconst rolesOptions: ComboboxOptionsType = [\n  {\n    label: \"roles\",\n    options: [\n      { label: \"Admin\", value: \"admin\" },\n      { label: \"BO\", value: \"back\" },\n      { label: \"Client\", value: \"front\", isDisabled: true },\n    ],\n  },\n];\n\nconst defaultValues: Partial<FormInputs> = {\n  username: \"admin\",\n  password: \"ke5ku5TA\",\n  remember: true,\n  number: 324.432,\n  env: envOptions[0] as any,\n  env2: \"test\",\n  roles: rolesOptions[0].options[0],\n};\n\nconst FormNode = () => {\n  const formMethods = useForm<FormInputs>({\n    defaultValues,\n    criteriaMode: \"all\",\n  });\n  const { register, control, handleSubmit, errors } = formMethods;\n  const onSubmit = handleSubmit(console.log);\n\n  return (\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\n        <FormControl\n          label=\"Username\"\n          helpText=\"Your login username.\"\n          errorText={errors.username?.message}\n          required\n        >\n          <TextField\n            ref={register({\n              required: \"Username required\",\n              minLength: { value: 4, message: \"More than 3 characters.\" },\n            })}\n            name=\"username\"\n            placeholder=\"Enter username...\"\n            error={!!errors.username}\n          />\n        </FormControl>\n        <FormControl\n          label=\"Password\"\n          required\n          errorText={errors.password?.message}\n        >\n          <TextField\n            name=\"password\"\n            ref={register({ required: \"Password required\" })}\n            placeholder=\"Enter password...\"\n            type=\"password\"\n            error={!!errors.password}\n          />\n        </FormControl>\n        <FormControl label=\"Applicable roles\">\n          <Combobox\n            name=\"roles\"\n            placeholder=\"Select roles...\"\n            options={rolesOptions}\n            isMulti\n          />\n        </FormControl>\n        <FormControl label=\"Environment\">\n          <Combobox\n            name=\"env\"\n            placeholder=\"Select environment...\"\n            options={envOptions}\n            isSearchable={false}\n          />\n        </FormControl>\n\n        <FormControl label=\"Environment again...\">\n          <RadioGroup\n            name=\"env2\"\n            options={[...envOptions]}\n            ref={register}\n            direction=\"row\"\n          />\n        </FormControl>\n        <FormControl label=\"Number\">\n          <NumberField\n            placeholder=\"0.00\"\n            error={!!errors.number}\n            name=\"number\"\n          />\n        </FormControl>\n\n        <Divider />\n        <Box justifyContent=\"space-between\">\n          <Checkbox ref={register} name=\"remember\" label=\"Keep me logged in\" />\n          <Box width=\"auto\">\n            <Button\n              value=\"Reset\"\n              variant=\"secondary\"\n              onClick={() => resetFormValues(control)}\n            />\n            <Button\n              type=\"submit\"\n              value=\"Submit\"\n              onClick={onSubmit}\n              variant=\"primary\"\n            />\n          </Box>\n        </Box>\n      </Box>\n      <FormValuesWatcher />\n    </Form>\n  );\n};\n\nconst Page = () => (\n  <PageView heading=\"Form\" overflow=\"scroll\">\n    <FormNode />\n  </PageView>\n);\n\nexport default Page;\n"],"sourceRoot":""}