{"version":3,"file":"static/js/3819.c32be2f7.chunk.js","mappings":"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","sources":["modules/components/pages/Form2.tsx"],"sourcesContent":["import {\r\n  Form,\r\n  useForm,\r\n  resetFormValues,\r\n  FormValuesWatcher,\r\n  DatePicker,\r\n  FormControl,\r\n  Toggle,\r\n  TextField,\r\n  DateRangePicker,\r\n  useFormDateRangeProps,\r\n} from \"@faharmony/form\";\r\nimport { Box, useExternalRef } from \"@faharmony/theme\";\r\nimport { Button, Divider, InfoBox } from \"@faharmony/components\";\r\nimport { PageView } from \"@faharmony/views\";\r\nimport React from \"react\";\r\n\r\ntype FormInputs = {\r\n  testDate: Date;\r\n  realDate: Date;\r\n  toggle: boolean;\r\n  number: number;\r\n  startDate: Date;\r\n  endDate: Date;\r\n};\r\n\r\nconst defaultValues: Partial<FormInputs> = {\r\n  testDate: new Date(),\r\n  realDate: new Date(\"2020-12-12\"),\r\n  toggle: true,\r\n  number: 1343400.234,\r\n  startDate: undefined,\r\n  endDate: undefined,\r\n};\r\n\r\nconst enabledDates = [\r\n  new Date(),\r\n  new Date(\"2021-03-12\"),\r\n  new Date(\"2021-03-29\"),\r\n];\r\n\r\nconst FormNode = () => {\r\n  const formMethods = useForm<FormInputs>({\r\n    defaultValues,\r\n    criteriaMode: \"all\",\r\n  });\r\n  const { control, handleSubmit, register, setValue } = formMethods;\r\n\r\n  const onSubmit = handleSubmit(console.log);\r\n  return (\r\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\r\n      <Box direction=\"column\" width={\"350px\"} alignItems=\"start\">\r\n        <FormControl label=\"Date\">\r\n          <DatePicker name=\"testDate\" includeDates={enabledDates} ref={useExternalRef()} />\r\n        </FormControl>\r\n        <FormControl label=\"Date (disabled)\">\r\n          <DatePicker\r\n            name=\"realDate\"\r\n            onChange={console.log}\r\n            includeDates={[new Date()]}\r\n            disabled\r\n          />\r\n        </FormControl>\r\n        <Box>\r\n          <FormControl label=\"Toggle (enabled)\">\r\n            <Toggle name=\"toggle\" ref={register} label=\"Hello world\" />\r\n          </FormControl>\r\n          <FormControl label=\"Toggle (disabled)\">\r\n            <Box>\r\n              <Toggle disabled />\r\n              <Toggle disabled checked={true} />\r\n            </Box>\r\n          </FormControl>\r\n        </Box>\r\n        <FormControl label=\"NumberField\">\r\n          <TextField\r\n            name=\"number\"\r\n            ref={register}\r\n            prefixText=\"EUR\"\r\n            isClearable\r\n            onInputClear={() => setValue(\"number\", \"\")}\r\n          />\r\n        </FormControl>\r\n        <Divider />\r\n\r\n        <UserFormDateRangeField />\r\n        <Box justifyContent=\"space-between\">\r\n          <Box width=\"auto\">\r\n            <Button\r\n              value=\"Reset\"\r\n              variant=\"secondary\"\r\n              loading\r\n              onClick={() => resetFormValues(control)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              onClick={onSubmit}\r\n              variant=\"primary\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <div>\r\n        <FormValuesWatcher />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Page = () => (\r\n  <PageView heading=\"Form\" overflow=\"scroll\">\r\n    <FormNode />\r\n    <Box style={{ width: \"300px\" }}>\r\n      <FormControl label=\"Date (readonly)\">\r\n        <DatePicker\r\n          name=\"realDate\"\r\n          onChange={console.log}\r\n          selected={new Date()}\r\n          readOnly\r\n        />\r\n      </FormControl>\r\n\r\n      <InfoBox field=\"Date \">\r\n        <DatePicker\r\n          name=\"realDate\"\r\n          onDateChange={console.log}\r\n          selected={new Date()}\r\n          ref={useExternalRef()}\r\n        />\r\n      </InfoBox>\r\n    </Box>\r\n\r\n    <UserFormDateRangeField2 />\r\n  </PageView>\r\n);\r\n\r\nexport default Page;\r\n\r\nconst UserFormDateRangeField: React.FC = () => {\r\n  const props = useFormDateRangeProps(\r\n    \"startDate\",\r\n    \"endDate\",\r\n    new Date(\"2021/05/04 22:21\"),\r\n    new Date(\"2021/06/04 15:30\")\r\n  );\r\n\r\n  return (\r\n    <FormControl label=\"Date Range in a Form\" required>\r\n      <DateRangePicker\r\n        {...props}\r\n        onStartCalenderClose={() => {\r\n          console.log(\"start calender closed \");\r\n        }}\r\n        onEndCalenderClose={() => {\r\n          console.log(\"end calender closed \");\r\n        }}\r\n        showCustomTimeSelector\r\n        hideTodayButton\r\n      ></DateRangePicker>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst UserFormDateRangeField2: React.FC = () => {\r\n  const [startDate, setStartDate] = React.useState<Date | undefined>(\r\n    new Date(\"2021/05/04 22:21\")\r\n  );\r\n  const [endDate, setEndDate] = React.useState<Date | undefined>(\r\n    new Date(\"2021/05/04 22:21\")\r\n  );\r\n\r\n  React.useEffect(\r\n    () =>\r\n      console.log(\r\n        \"This is date state controlled date range outside a form \",\r\n        startDate,\r\n        endDate\r\n      ),\r\n    [startDate, endDate]\r\n  );\r\n\r\n  return (\r\n    <Box justifyContent=\"flex-start\">\r\n      <FormControl label=\"Test Range without form \" required>\r\n        <Box width={\"min-content\"}>\r\n          <DateRangePicker\r\n            endDate={endDate}\r\n            startDate={startDate}\r\n            setEndDate={setEndDate}\r\n            setStartDate={setStartDate}\r\n            onStartCalenderClose={() => {\r\n              console.log(\"start calender closed \");\r\n            }}\r\n            onEndCalenderClose={() => {\r\n              console.log(\"end calender closed \");\r\n            }}\r\n            showCustomTimeSelector\r\n          ></DateRangePicker>\r\n        </Box>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n"],"names":["defaultValues","testDate","Date","realDate","toggle","number","startDate","undefined","endDate","enabledDates","FormNode","formMethods","useForm","criteriaMode","control","handleSubmit","register","setValue","onSubmit","console","log","style","width","direction","alignItems","label","name","includeDates","ref","useExternalRef","onChange","disabled","checked","prefixText","isClearable","onInputClear","UserFormDateRangeField","justifyContent","value","variant","loading","onClick","resetFormValues","type","heading","overflow","selected","readOnly","field","onDateChange","UserFormDateRangeField2","props","useFormDateRangeProps","required","onStartCalenderClose","onEndCalenderClose","showCustomTimeSelector","hideTodayButton","React","setStartDate","setEndDate"],"sourceRoot":""}