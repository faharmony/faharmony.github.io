{"version":3,"file":"static/js/1629.5af77943.chunk.js","mappings":"oZAQMA,EAAW,UAEXC,GAAcC,EAAAA,EAAAA,IAAkB,CACpCC,KAAMH,EACNI,aAAAA,EAAAA,aACAC,SAAAA,IAGeC,EAAkBL,EAA3BM,QAERC,GAGIC,EAAAA,EAAAA,IAAiCT,GAFnCU,EAAcF,EAAdE,eACAC,EAAsBH,EAAtBG,sB,qKCZIC,EAAwB,SAACC,GAC7BA,EAAMC,SAAU,GAChBC,EAAAA,EAAAA,IAAS,CAAEC,IAAIC,EAAAA,EAAAA,MAAQC,MAAO,iBAChC,EAEMC,EAAuB,SAACN,GAC5BA,EAAMC,SAAU,GAChBC,EAAAA,EAAAA,IAAS,CAAEC,IAAIC,EAAAA,EAAAA,MAAQC,MAAO,gBAChC,EAEME,EAA0C,SAACP,EAAKQ,GAAmB,IAAfC,EAAOD,EAAPC,QACxDT,EAAMC,QAAUQ,CAClB,C,0EChBO,IAAMlB,EAAuB,CAAEU,SAAS,E","sources":["modules/welcome/state/index.ts","modules/welcome/state/reducers.ts","modules/welcome/state/store.ts"],"sourcesContent":["import {\r\n  createModuleState,\r\n  createUseModuleStateHook,\r\n  useDispatch,\r\n} from \"@faharmony/state\";\r\nimport { initialState, IState } from \"./store\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst ModuleId = \"welcome\";\r\n\r\nconst ModuleState = createModuleState({\r\n  name: ModuleId,\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nconst { actions: ModuleActions } = ModuleState;\r\n\r\nconst {\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n} = createUseModuleStateHook<IState>(ModuleId);\r\nexport { useDispatch };\r\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\r\nexport * from \"./store\";\r\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\r\nimport { addToast } from \"@faharmony/core\";\r\nimport { uuid } from \"@faharmony/helpers\";\r\nimport { IState } from \"./store\";\r\n\r\ntype Reducer = CaseReducer<IState>;\r\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\r\n\r\nconst startLoading: Reducer = (state) => {\r\n  state.loading = true;\r\n  addToast({ id: uuid(), title: \"start loading\" });\r\n};\r\n\r\nconst stopLoading: Reducer = (state) => {\r\n  state.loading = false;\r\n  addToast({ id: uuid(), title: \"stop loading\" });\r\n};\r\n\r\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\r\n  state.loading = payload;\r\n};\r\n\r\nexport { startLoading, stopLoading, setLoading };\r\n","export interface IState {\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: IState = { loading: true };\r\n"],"names":["ModuleId","ModuleState","createModuleState","name","initialState","reducers","ModuleActions","actions","_createUseModuleState","createUseModuleStateHook","useModuleState","useModuleStateSelector","startLoading","state","loading","addToast","id","uuid","title","stopLoading","setLoading","_ref","payload"],"sourceRoot":""}