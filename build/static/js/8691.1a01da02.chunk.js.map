{"version":3,"file":"static/js/8691.1a01da02.chunk.js","mappings":"iMAKe,SAASA,IACtB,MAAOC,EAAOC,GAAYC,EAAAA,SAAe,CACvCC,UAAU,EACVC,UAAU,IAGNC,EAAgBC,IACpBL,EAAS,IAAKD,EAAO,CAACM,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,SAAU,EAGnE,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,KAAG,EAAAC,SAAA,EACZC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfC,SACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLR,QAAST,EAAMG,SACfe,SAAUb,EACVG,KAAK,aAGTW,MAAM,eAERL,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfC,SACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLR,QAAST,EAAMI,SACfc,SAAUb,EACVG,KAAK,WACLY,MAAM,YAGVD,MAAM,aAERL,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAACC,SAASF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAAKE,MAAM,kBAC7CL,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAACM,UAAQ,EAACL,SAASF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAAKE,MAAM,cACtDL,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfM,UAAQ,EACRL,SAASF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAACR,SAAO,IACxBU,MAAM,eAId,C,0IC7CO,SAASG,EAAyBC,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,eAAgBD,EAC9C,EACyBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,OAAQ,MAAO,U,oCCDhF,MAAMC,EAAY,CAAC,YAAa,OAsB1BC,GAAgBC,EAAAA,EAAAA,IAAO,MAAO,CAClCpB,KAAM,eACNe,KAAM,OACNM,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWpB,KAAOmB,EAAOnB,IAAI,GAPhCgB,EASnBM,IAAA,IAAC,WACFF,GACDE,EAAA,OAAKC,EAAAA,EAAAA,GAAS,CACbC,QAAS,OACTC,cAAe,SACfC,SAAU,QACTN,EAAWpB,KAAO,CACnByB,cAAe,OACf,IA6DF,EAtD+BnC,EAAAA,YAAiB,SAAmBqC,EAASC,GAC1E,MAAMV,GAAQW,EAAAA,EAAAA,GAAc,CAC1BX,MAAOS,EACP/B,KAAM,kBAEF,UACFkC,EAAS,IACT9B,GAAM,GACJkB,EACJa,GAAQC,EAAAA,EAAAA,GAA8Bd,EAAOJ,GACzCmB,GAAiBC,EAAAA,EAAAA,KACjBC,GAAMC,EAAAA,EAAAA,GAAiB,CAC3BlB,QACAe,iBACAI,OAAQ,CAAC,WAELjB,GAAaG,EAAAA,EAAAA,GAAS,CAAC,EAAGL,EAAO,CACrClB,MACAsC,MAAOH,EAAIG,QAEPC,EAvDkBnB,KACxB,MAAM,QACJmB,EAAO,IACPvC,EAAG,MACHsC,GACElB,EACEoB,EAAQ,CACZnB,KAAM,CAAC,OAAQrB,GAAO,MAAOsC,GAAS,UAExC,OAAOG,EAAAA,EAAAA,GAAeD,EAAO9B,EAA0B6B,EAAQ,EA8C/CG,CAAkBtB,GAClC,OAAoBlB,EAAAA,EAAAA,KAAKa,GAAeQ,EAAAA,EAAAA,GAAS,CAC/CO,WAAWa,EAAAA,EAAAA,GAAKJ,EAAQlB,KAAMS,GAC9BV,WAAYA,EACZQ,IAAKA,GACJG,GACL,G","sources":["modules/components/pages/MUI_Components/Samples/Switch.tsx","../../node_modules/@mui/material/FormGroup/formGroupClasses.js","../../node_modules/@mui/material/FormGroup/FormGroup.js"],"sourcesContent":["import React from \"react\"\r\nimport FormGroup from \"@mui/material/FormGroup\"\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\r\nimport Switch from \"@mui/material/Switch\"\r\n\r\nexport default function SwitchExample() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  })\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked })\r\n  }\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedA}\r\n            onChange={handleChange}\r\n            name=\"checkedA\"\r\n          />\r\n        }\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel control={<Switch />} label=\"Uncontrolled\" />\r\n      <FormControlLabel disabled control={<Switch />} label=\"Disabled\" />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Switch checked />}\r\n        label=\"Disabled\"\r\n      />\r\n    </FormGroup>\r\n  )\r\n}\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;"],"names":["SwitchExample","state","setState","React","checkedA","checkedB","handleChange","event","target","name","checked","_jsxs","FormGroup","row","children","_jsx","FormControlLabel","control","Switch","onChange","label","color","disabled","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","overridesResolver","props","styles","ownerState","root","_ref","_extends","display","flexDirection","flexWrap","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","clsx"],"sourceRoot":""}