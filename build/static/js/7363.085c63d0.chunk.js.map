{"version":3,"file":"static/js/7363.085c63d0.chunk.js","mappings":"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","sources":["../../node_modules/proxy-compare/src/index.ts","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/@apollo/src/react/hooks/useMutation.ts","../../node_modules/valtio/esm/index.mjs","../../node_modules/valtio/esm/vanilla.mjs"],"sourcesContent":["// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfrozenCache = new WeakMap<object, object>();\nconst unfreeze = <T extends object>(obj: T): T => {\n  let unfrozen = unfrozenCache.get(obj);\n  if (!unfrozen) {\n    if (Array.isArray(obj)) {\n      // Arrays need a special way to copy\n      unfrozen = Array.from(obj);\n    } else {\n      // For non-array objects, we create a new object keeping the prototype\n      // with changing all configurable options (otherwise, proxies will complain)\n      const descriptors = Object.getOwnPropertyDescriptors(obj);\n      Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n      unfrozen = Object.create(getProto(obj), descriptors);\n    }\n    unfrozenCache.set(obj, unfrozen as object);\n  }\n  return unfrozen as T;\n};\n\ntype Affected = WeakMap<object, Set<string | symbol>>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [FROZEN_PROPERTY]: frozen,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (key: string | symbol, skipWithOwnKeys?: boolean) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (!skipWithOwnKeys || !used.has(OWN_KEYS_SYMBOL)) {\n        used.add(key);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(key);\n      return createProxy(\n        (target as any)[key],\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      // LIMITATION: We simply record the same as `get`.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if `'a' in obj` is handled.\n      recordUsage(key);\n      return key in target;\n    },\n    getOwnPropertyDescriptor(target, key) {\n      // LIMITATION: We simply record the same as `get`.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if `obj.getOwnPropertyDescriptor('a'))` is handled.\n      recordUsage(key, true);\n      return Object.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const target = getOriginalObject(obj);\n  const frozen = isFrozen(target);\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!handlerAndState || handlerAndState[1][FROZEN_PROPERTY] !== frozen) {\n    handlerAndState = createProxyHandler<typeof target>(target, frozen);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      frozen ? unfreeze(target) : target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(prevObj, nextObj)\n      : isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = true;\n  if (cache) {\n    cache.set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext, TCache>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n      ref.current.options?.onCompleted?.(response.data!, clientOptions);\n      executeOptions.onCompleted?.(response.data!, clientOptions);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (ref.current.options?.onError || clientOptions.onError) {\n        ref.current.options?.onError?.(error, clientOptions);\n        executeOptions.onError?.(error, clientOptions);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    if (ref.current.isMounted) {\n      setResult({ called: false, loading: false, client });\n    }\n  }, []);\n\n  useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n","import ReactExports, { useRef, useCallback, useEffect, useMemo, useDebugValue } from 'react';\nimport { isChanged, createProxy, getUntracked } from 'proxy-compare';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/index.js';\nimport { subscribe, snapshot } from 'valtio/vanilla';\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction } from 'valtio/vanilla';\n\nconst { use } = ReactExports;\nconst { useSyncExternalStore } = useSyncExternalStoreExports;\nconst affectedToPathList = (obj, affected) => {\n  const list = [];\n  const seen = /* @__PURE__ */ new WeakSet();\n  const walk = (x, path) => {\n    if (seen.has(x)) {\n      return;\n    }\n    let used;\n    if (typeof x === \"object\" && x !== null) {\n      seen.add(x);\n      used = affected.get(getUntracked(x) || x);\n    }\n    if (used) {\n      used.forEach((key) => {\n        if (\"value\" in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk(x[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\nconst useAffectedDebugValue = (state, affected) => {\n  const pathList = useRef();\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected);\n  });\n  useDebugValue(pathList.current);\n};\nfunction useSnapshot(proxyObject, options) {\n  const notifyInSync = options == null ? void 0 : options.sync;\n  const lastSnapshot = useRef();\n  const lastAffected = useRef();\n  let inRender = true;\n  const currSnapshot = useSyncExternalStore(\n    useCallback(\n      (callback) => {\n        const unsub = subscribe(proxyObject, callback, notifyInSync);\n        callback();\n        return unsub;\n      },\n      [proxyObject, notifyInSync]\n    ),\n    () => {\n      const nextSnapshot = snapshot(proxyObject, use);\n      try {\n        if (!inRender && lastSnapshot.current && lastAffected.current && !isChanged(\n          lastSnapshot.current,\n          nextSnapshot,\n          lastAffected.current,\n          /* @__PURE__ */ new WeakMap()\n        )) {\n          return lastSnapshot.current;\n        }\n      } catch (e) {\n      }\n      return nextSnapshot;\n    },\n    () => snapshot(proxyObject, use)\n  );\n  inRender = false;\n  const currAffected = /* @__PURE__ */ new WeakMap();\n  useEffect(() => {\n    lastSnapshot.current = currSnapshot;\n    lastAffected.current = currAffected;\n  });\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    useAffectedDebugValue(currSnapshot, currAffected);\n  }\n  const proxyCache = useMemo(() => /* @__PURE__ */ new WeakMap(), []);\n  return createProxy(currSnapshot, currAffected, proxyCache);\n}\n\nexport { useSnapshot };\n","import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key);\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n      snap[key] = value;\n    } else if (value instanceof Promise) {\n      Object.defineProperty(snap, key, {\n        get() {\n          return handlePromise(value);\n        }\n      });\n    } else if (proxyStateMap.has(value)) {\n      snap[key] = snapshot(value, handlePromise);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env && import.meta.env.MODE) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      var _a;\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && objectIs(prevValue, value)) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if ((_a = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _a.set) ; else if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        const childProxyState = proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  proxyFunction2,\n  proxyStateMap,\n  refSet,\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n"],"names":["OWN_KEYS_SYMBOL","Symbol","TRACK_MEMO_SYMBOL","GET_ORIGINAL_SYMBOL","newProxy","target","handler","Proxy","getProto","Object","getPrototypeOf","objectsToTrack","WeakMap","isObjectToTrack","obj","has","get","prototype","Array","isObject","x","unfrozenCache","getOriginalObject","affected","proxyCache","frozen","isFrozen","values","getOwnPropertyDescriptors","some","descriptor","writable","handlerAndState","f","origObj","state","recordUsage","key","skipWithOwnKeys","trackObject","used","a","Set","set","add","createProxy","c","delete","getOwnPropertyDescriptor","ownKeys","Reflect","deleteProperty","p","unfrozen","isArray","from","descriptors","forEach","desc","configurable","create","isOwnKeysChanged","prevObj","nextObj","prevKeys","nextKeys","length","k","i","isChanged","cache","is","hit","n","g","changed","getUntracked","markToTrack","mark","e","require","b","l","useState","m","useEffect","useLayoutEffect","useDebugValue","r","getSnapshot","value","d","u","window","document","createElement","inst","exports","useSyncExternalStore","module","useMutation","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","called","loading","result","setResult","ref","useRef","mutationId","isMounted","assign","current","execute","useCallback","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mergeOptions","mutate","then","response","errors","ApolloError","graphQLErrors","result_1","equal","onCompleted","catch","result_2","onError","reset","use","ReactExports","useSyncExternalStoreExports","useAffectedDebugValue","pathList","list","seen","WeakSet","walk","path","push","affectedToPathList","useSnapshot","proxyObject","notifyInSync","sync","lastSnapshot","lastAffected","inRender","currSnapshot","callback","unsub","subscribe","nextSnapshot","snapshot","currAffected","useMemo","proxyStateMap","refSet","buildProxyFunction","objectIs","canProxy","iterator","Error","Number","Date","String","RegExp","ArrayBuffer","defaultHandlePromise","promise","status","reason","snapCache","createSnapshot","version","handlePromise","snap","Promise","defineProperty","freeze","versionHolder","proxyFunction2","initialObject","found","listeners","notifyUpdate","op","nextVersion","listener","checkVersion","createPropListener","prop","newOp","propProxyStates","Map","removePropListener","_a","entry","call","baseObject","prevValue","deleted","receiver","hasPrevValue","nextValue","v","proxy","childProxyState","propProxyState","size","remove","addPropListener","proxyState","nextCheckVersion","propVersion","proxyFunction","console","warn","ops","addListener","isListenerActive","removeListener","splice","resolve","ensureVersion"],"sourceRoot":""}