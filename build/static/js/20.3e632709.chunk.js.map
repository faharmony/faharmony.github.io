{"version":3,"sources":["modules/components/pages/Date.tsx"],"names":["defaultValues","date","Date","FormNode","formMethods","useForm","criteriaMode","control","onSubmit","handleSubmit","alert","style","width","direction","alignItems","label","name","justifyContent","value","variant","onClick","resetFormValues","type","heading","overflow"],"mappings":"2GAAA,mDAgBMA,EAAqC,CACzCC,KAAM,IAAIC,KAAK,eAGXC,EAAW,WACf,IAAMC,EAAcC,YAAoB,CACtCL,gBACAM,aAAc,QAERC,EAA0BH,EAA1BG,QAEFC,GAAWC,EAFiBL,EAAjBK,cAEaC,OAC9B,OACE,kBAAC,IAAD,CAAMN,YAAaA,EAAaO,MAAO,CAAEC,MAAO,QAAUC,UAAU,OAClE,kBAAC,IAAD,CAAKA,UAAU,SAASD,MAAO,QAASE,WAAW,SACjD,kBAAC,IAAD,CAAaC,MAAM,QACjB,kBAAC,IAAD,CAAYC,KAAK,UAEnB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,eAAe,iBAClB,kBAAC,IAAD,CAAKL,MAAM,QACT,kBAAC,IAAD,CACEM,MAAM,QACNC,QAAQ,YACRC,QAAS,kBAAMC,YAAgBd,MAEjC,kBAAC,IAAD,CACEe,KAAK,SACLJ,MAAM,SACNE,QAASZ,EACTW,QAAQ,eAKhB,6BACE,kBAAC,IAAD,SAMO,qBACb,OACE,kBAAC,IAAD,CAAUI,QAAQ,OAAOC,SAAS,UAChC,kBAACrB,EAAD","file":"static/js/20.3e632709.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  useForm,\n  resetFormValues,\n  FormValuesWatcher,\n  DatePicker,\n  FormControl,\n} from \"@faharmony/form\";\nimport { Box, Button, Divider } from \"@faharmony/components\";\nimport { PageView } from \"@faharmony/views\";\n\ntype FormInputs = {\n  date: Date;\n};\n\nconst defaultValues: Partial<FormInputs> = {\n  date: new Date(\"2020-09-20\"),\n};\n\nconst FormNode = () => {\n  const formMethods = useForm<FormInputs>({\n    defaultValues,\n    criteriaMode: \"all\",\n  });\n  const { control, handleSubmit } = formMethods;\n\n  const onSubmit = handleSubmit(alert);\n  return (\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\n        <FormControl label=\"Date\">\n          <DatePicker name=\"date\" />\n        </FormControl>\n        <Divider />\n        <Box justifyContent=\"space-between\">\n          <Box width=\"auto\">\n            <Button\n              value=\"Reset\"\n              variant=\"secondary\"\n              onClick={() => resetFormValues(control)}\n            />\n            <Button\n              type=\"submit\"\n              value=\"Submit\"\n              onClick={onSubmit}\n              variant=\"primary\"\n            />\n          </Box>\n        </Box>\n      </Box>\n      <div>\n        <FormValuesWatcher />\n      </div>\n    </Form>\n  );\n};\n\nexport default () => {\n  return (\n    <PageView heading=\"Form\" overflow=\"scroll\">\n      <FormNode />\n    </PageView>\n  );\n};\n"],"sourceRoot":""}