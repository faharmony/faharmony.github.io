{"version":3,"file":"static/js/2911.a5ede3ba.chunk.js","mappings":"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","sources":["modules/components/pages/MUI_Components/Samples/Checkboxes.tsx","../../node_modules/@mui/system/esm/createBox.js","../../node_modules/@mui/material/Box/Box.js","../../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../../node_modules/@mui/material/Checkbox/checkboxClasses.js","../../node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport React from \"react\";\r\n\r\nexport default function CheckboxesExample() {\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false,\r\n  })\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked })\r\n  }\r\n\r\n  const { gilad, jason, antoine } = state\r\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <FormControl component=\"fieldset\" sx={{ m: 3 }}>\r\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />\r\n            }\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={jason} onChange={handleChange} name=\"jason\" />\r\n            }\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={antoine}\r\n                onChange={handleChange}\r\n                name=\"antoine\"\r\n              />\r\n            }\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Be careful</FormHelperText>\r\n      </FormControl>\r\n      <FormControl\r\n        required\r\n        error={error}\r\n        component=\"fieldset\"\r\n        sx={{ m: 3 }}\r\n      >\r\n        <FormLabel component=\"legend\">Pick two</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />\r\n            }\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={jason} onChange={handleChange} name=\"jason\" />\r\n            }\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={antoine}\r\n                onChange={handleChange}\r\n                name=\"antoine\"\r\n              />\r\n            }\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>You can display an error</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["CheckboxesExample","_React$useState","React","gilad","jason","antoine","_React$useState2","_slicedToArray","state","setState","handleChange","event","_objectSpread","_defineProperty","target","name","checked","error","filter","v","length","_jsxs","Box","sx","display","children","FormControl","component","m","_jsx","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","label","FormHelperText","required","_excluded","defaultTheme","createTheme","options","arguments","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","_extendSxProp$compone","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","createSvgIcon","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CheckboxRoot","SwitchBase","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","color","concat","capitalize","_ref","_ref2","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize"],"sourceRoot":""}