{"version":3,"file":"static/js/8761.5237d806.chunk.js","mappings":"gLA4BMA,EAAwD,CAC5D,CAAEC,MAAO,UAAWC,MAAO,OAC3B,CAAED,MAAO,SAAUC,MAAO,SAAUC,KAAM,sBAC1C,CAAEF,MAAO,OAAQC,MAAO,OAAQE,YAAY,IAGxCC,EAAoC,CACxC,CACEJ,MAAO,QACPK,QAAS,CACP,CAAEL,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,SAAUC,MAAO,QAASE,YAAY,MAK/CG,EAAqC,CACzCC,SAAU,QACVC,SAAU,WACVC,UAAU,EACVC,OAAQ,QACRC,IAAKZ,EAAW,GAChBa,KAAM,OACNC,MAAO,CAACT,EAAa,GAAGC,QAAQ,KAG5BS,EAAW,WAAO,IAAD,IACfC,GAAcC,EAAAA,EAAAA,IAAoB,CACtCV,cAAAA,EACAW,aAAc,QAERC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,QAASC,EAAyBL,EAAzBK,aAAcC,EAAWN,EAAXM,OACnCC,EAAWF,EAAaG,QAAQC,KAEtC,OACE,UAAC,KAAD,CAAMT,YAAaA,EAAaU,MAAO,CAAEC,MAAO,QAAUC,UAAU,MAApE,WACE,UAAC,KAAD,CAAKA,UAAU,SAASD,MAAO,QAASE,WAAW,QAAnD,WACE,SAAC,KAAD,CACE5B,MAAM,WACN6B,SAAU,qDACVC,UAAS,UAAET,EAAOd,gBAAT,aAAE,EAAiBwB,QAC5BC,UAAQ,EAJV,UAME,SAAC,KAAD,CACEC,IAAKf,EAAS,CACZc,SAAU,oBACVE,UAAW,CAAEjC,MAAO,EAAG8B,QAAS,6BAElCI,KAAK,WACLC,YAAY,oBACZC,QAAShB,EAAOd,cAGpB,SAAC,KAAD,CACEP,MAAM,WACNgC,UAAQ,EACRF,UAAS,UAAET,EAAOb,gBAAT,aAAE,EAAiBuB,QAH9B,UAKE,SAAC,KAAD,CACEI,KAAK,WACLF,IAAKf,EAAS,CAAEc,SAAU,sBAC1BI,YAAY,oBACZE,KAAK,WACLD,QAAShB,EAAOb,cAGpB,SAAC,KAAD,CAAaR,MAAM,mBAAnB,UACE,SAAC,KAAD,CACEmC,KAAK,QACLC,YAAY,kBACZ/B,QAASD,OAGb,SAAC,KAAD,CAAaJ,MAAM,cAAc6B,SAAS,0BAA1C,UACE,SAAC,KAAD,CACEM,KAAK,MACLC,YAAY,wBACZ/B,QAASN,EACTwC,SAAS,EACTC,cAAc,OAIlB,SAAC,KAAD,CAAaxC,MAAM,uBAAnB,UACE,SAAC,KAAD,CACEmC,KAAK,OACL9B,QAAO,UAAMN,GACbkC,IAAKf,EACLS,UAAU,WAGd,SAAC,KAAD,CAAa3B,MAAM,SAAnB,UACE,SAAC,KAAD,CAAWoC,YAAY,OAAOC,QAAShB,EAAOX,OAAQyB,KAAK,cAG7D,SAAC,KAAD,KACA,UAAC,KAAD,CAAKM,eAAe,gBAApB,WACE,SAAC,KAAD,CAAUR,IAAKf,EAAUiB,KAAK,WAAWnC,MAAM,uBAC/C,UAAC,KAAD,CAAK0B,MAAM,OAAX,WACE,SAAC,KAAD,CACEzB,MAAM,QACNyC,QAAQ,YACRC,QAAS,kBAAMC,EAAAA,EAAAA,IAAgBzB,EAAtB,KAEX,SAAC,KAAD,CACEmB,KAAK,SACLrC,MAAM,SACN0C,QAASrB,EACToB,QAAQ,sBAKhB,SAAC,KAAD,MAGL,EAQD,UANa,kBACX,SAAC,KAAD,CAAUG,QAAQ,OAAOC,SAAS,SAAlC,UACE,SAAChC,EAAD,KAFS,C","sources":["modules/components/pages/Form1.tsx"],"sourcesContent":["import {\n  Form,\n  FormControl,\n  TextField,\n  Checkbox,\n  Combobox,\n  RadioGroup,\n  useForm,\n  resetFormValues,\n  ComboboxOptionType,\n  ComboboxOptionsType,\n  FormValuesWatcher,\n  RadioOptionType,\n} from \"@faharmony/form\";\nimport { Button, Divider } from \"@faharmony/components\";\nimport { Box } from \"@faharmony/theme\";\nimport { PageView } from \"@faharmony/views\";\n\ntype FormInputs = {\n  username: string;\n  password: string;\n  env: RadioOptionType;\n  roles: ComboboxOptionType[];\n  number: number;\n  env2: string;\n  remember: boolean;\n};\n\nconst envOptions: ComboboxOptionsType[] | RadioOptionType[] = [\n  { label: \"Develop\", value: \"dev\" },\n  { label: \"Master\", value: \"master\", help: \"Master Environment\" },\n  { label: \"Test\", value: \"test\", isDisabled: true },\n];\n\nconst rolesOptions: ComboboxOptionsType = [\n  {\n    label: \"roles\",\n    options: [\n      { label: \"Admin\", value: \"admin\" },\n      { label: \"BO\", value: \"back\" },\n      { label: \"Client\", value: \"front\", isDisabled: true },\n    ],\n  },\n];\n\nconst defaultValues: Partial<FormInputs> = {\n  username: \"admin\",\n  password: \"ke5ku5TA\",\n  remember: true,\n  number: 324.432,\n  env: envOptions[0],\n  env2: \"test\",\n  roles: [rolesOptions[0].options[0]],\n};\n\nconst FormNode = () => {\n  const formMethods = useForm<FormInputs>({\n    defaultValues,\n    criteriaMode: \"all\",\n  });\n  const { register, control, handleSubmit, errors } = formMethods;\n  const onSubmit = handleSubmit(console.log);\n\n  return (\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\n        <FormControl\n          label=\"Username\"\n          helpText={\"Your login username.  \\n Must meet the requirement\"}\n          errorText={errors.username?.message}\n          required\n        >\n          <TextField\n            ref={register({\n              required: \"Username required\",\n              minLength: { value: 4, message: \"More than 3 characters.\" },\n            })}\n            name=\"username\"\n            placeholder=\"Enter username...\"\n            error={!!errors.username}\n          />\n        </FormControl>\n        <FormControl\n          label=\"Password\"\n          required\n          errorText={errors.password?.message}\n        >\n          <TextField\n            name=\"password\"\n            ref={register({ required: \"Password required\" })}\n            placeholder=\"Enter password...\"\n            type=\"password\"\n            error={!!errors.password}\n          />\n        </FormControl>\n        <FormControl label=\"Applicable roles\">\n          <Combobox\n            name=\"roles\"\n            placeholder=\"Select roles...\"\n            options={rolesOptions}\n          />\n        </FormControl>\n        <FormControl label=\"Environment\" helpText=\"Development environment\">\n          <Combobox\n            name=\"env\"\n            placeholder=\"Select environment...\"\n            options={envOptions}\n            isMulti={false}\n            isSearchable={false}\n          />\n        </FormControl>\n\n        <FormControl label=\"Environment again...\">\n          <RadioGroup\n            name=\"env2\"\n            options={[...envOptions]}\n            ref={register}\n            direction=\"row\"\n          />\n        </FormControl>\n        <FormControl label=\"Number\">\n          <TextField placeholder=\"0.00\" error={!!errors.number} name=\"number\" />\n        </FormControl>\n\n        <Divider />\n        <Box justifyContent=\"space-between\">\n          <Checkbox ref={register} name=\"remember\" label=\"Keep me logged in\" />\n          <Box width=\"auto\">\n            <Button\n              value=\"Reset\"\n              variant=\"secondary\"\n              onClick={() => resetFormValues(control)}\n            />\n            <Button\n              type=\"submit\"\n              value=\"Submit\"\n              onClick={onSubmit}\n              variant=\"primary\"\n            />\n          </Box>\n        </Box>\n      </Box>\n      <FormValuesWatcher />\n    </Form>\n  );\n};\n\nconst Page = () => (\n  <PageView heading=\"Form\" overflow=\"scroll\">\n    <FormNode />\n  </PageView>\n);\n\nexport default Page;\n"],"names":["envOptions","label","value","help","isDisabled","rolesOptions","options","defaultValues","username","password","remember","number","env","env2","roles","FormNode","formMethods","useForm","criteriaMode","register","control","handleSubmit","errors","onSubmit","console","log","style","width","direction","alignItems","helpText","errorText","message","required","ref","minLength","name","placeholder","error","type","isMulti","isSearchable","justifyContent","variant","onClick","resetFormValues","heading","overflow"],"sourceRoot":""}