{"version":3,"sources":["modules/components/pages/Form.tsx"],"names":["envOptions","label","value","isDisabled","rolesOptions","options","defaultValues","username","password","remember","env","env2","roles","date","Date","FormNode","formMethods","useForm","criteriaMode","register","control","handleSubmit","errors","onSubmit","console","log","style","width","direction","alignItems","helpText","errorText","message","required","ref","minLength","name","placeholder","error","type","isMulti","isSearchable","as","disabledDates","justifyContent","variant","onClick","resetFormValues","heading","overflow"],"mappings":"2GAAA,mDA6BA,MAAMA,EAAkC,CACtC,CAAEC,MAAO,UAAWC,MAAO,OAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,OAAQC,YAAY,IAGxCC,EAAoC,CACxC,CACEH,MAAO,QACPI,QAAS,CACP,CAAEJ,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,SAAUC,MAAO,QAASC,YAAY,MAK/CG,EAAqC,CACzCC,SAAU,QACVC,SAAU,WACVC,UAAU,EACVC,IAAKV,EAAW,GAChBW,KAAM,OACNC,MAAOR,EAAa,GAAGC,QAAQ,GAC/BQ,KAAM,IAAIC,MAGNC,EAAW,KAAO,IAAD,QACrB,MAAMC,EAAcC,YAAoB,CACtCX,gBACAY,aAAc,QAERC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,QAASC,EAAyBL,EAAzBK,aAAcC,EAAWN,EAAXM,OACnCC,EAAWF,EAAaG,QAAQC,KAEtC,OACE,kBAAC,IAAD,CAAMT,YAAaA,EAAaU,MAAO,CAAEC,MAAO,QAAUC,UAAU,OAClE,kBAAC,IAAD,CAAKA,UAAU,SAASD,MAAO,QAASE,WAAW,SACjD,kBAAC,IAAD,CACE5B,MAAM,WACN6B,SAAS,uBACTC,UAAS,UAAET,EAAOf,gBAAT,aAAE,EAAiByB,QAC5BC,UAAQ,GAER,kBAAC,IAAD,CACEC,IAAKf,EAAS,CACZc,SAAU,oBACVE,UAAW,CAAEjC,MAAO,EAAG8B,QAAS,6BAElCI,KAAK,WACLC,YAAY,oBACZC,MAAK,UAAEhB,EAAOf,gBAAT,aAAE,EAAiByB,WAG5B,kBAAC,IAAD,CACE/B,MAAM,WACNgC,UAAQ,EACRH,SAAQ,UAAER,EAAOd,gBAAT,aAAE,EAAiBwB,SAE3B,kBAAC,IAAD,CACEI,KAAK,WACLF,IAAKf,EAAS,CAAEc,SAAU,sBAC1BI,YAAY,oBACZE,KAAK,WACLD,MAAK,UAAEhB,EAAOd,gBAAT,aAAE,EAAiBwB,WAG5B,kBAAC,IAAD,CAAY/B,MAAM,oBAChB,kBAAC,IAAD,CACEmC,KAAK,QACLC,YAAY,kBACZhC,QAASD,EACToC,SAAO,KAGX,kBAAC,IAAD,CAAYvC,MAAM,eAChB,kBAAC,IAAD,CACEmC,KAAK,MACLC,YAAY,wBACZhC,QAASL,EACTyC,cAAc,KAIlB,kBAAC,IAAD,CAAYxC,MAAM,wBAChB,kBAAC,IAAD,CACEmC,KAAK,OACL/B,QAAS,IAAIL,GACbkC,IAAKf,EACLS,UAAU,SAGd,kBAAC,IAAD,CAAY3B,MAAM,qBAChB,kBAAC,IAAD,CACEmC,KAAK,OACLM,GACE,kBAAC,IAAD,CACEC,cAAe,CAAC,IAAI7B,KAAK,KAAM,EAAG,IAAK,IAAIA,KAAK,KAAM,EAAG,OAG7DM,QAASA,KAIb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKwB,eAAe,iBAClB,kBAAC,IAAD,CAAUV,IAAKf,EAAUiB,KAAK,WAAWnC,MAAM,sBAC/C,kBAAC,IAAD,CAAK0B,MAAM,QACT,kBAAC,IAAD,CACEzB,MAAM,QACN2C,QAAQ,YACRC,QAAS,IAAMC,YAAgB3B,KAEjC,kBAAC,IAAD,CACEmB,KAAK,SACLrC,MAAM,SACN4C,QAASvB,EACTsB,QAAQ,eAKhB,kBAAC,IAAD,QAKS,cAEX,kBAAC,IAAD,CAAUG,QAAQ,OAAOC,SAAS,UAChC,kBAAClC,EAAD","file":"static/js/21.ebc4579f.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  InputField,\n  TextField,\n  Checkbox,\n  Combobox,\n  RadioGroup,\n  DatePicker,\n  useForm,\n  resetFormValues,\n  ComboboxOptionType,\n  ComboboxOptionsType,\n  FormValuesWatcher,\n  Controller,\n} from \"@faharmony/form\";\nimport { Box, Button, Divider } from \"@faharmony/components\";\nimport { PageView } from \"@faharmony/views\";\n\ntype FormInputs = {\n  username: string;\n  password: string;\n  env: ComboboxOptionType;\n  roles: ComboboxOptionType;\n  date: Date;\n  env2: string;\n  remember: boolean;\n};\n\nconst envOptions: ComboboxOptionsType = [\n  { label: \"Develop\", value: \"dev\" },\n  { label: \"Master\", value: \"master\" },\n  { label: \"Test\", value: \"test\", isDisabled: true },\n];\n\nconst rolesOptions: ComboboxOptionsType = [\n  {\n    label: \"roles\",\n    options: [\n      { label: \"Admin\", value: \"admin\" },\n      { label: \"BO\", value: \"back\" },\n      { label: \"Client\", value: \"front\", isDisabled: true },\n    ],\n  },\n];\n\nconst defaultValues: Partial<FormInputs> = {\n  username: \"admin\",\n  password: \"ke5ku5TA\",\n  remember: true,\n  env: envOptions[0] as any,\n  env2: \"test\",\n  roles: rolesOptions[0].options[0],\n  date: new Date(),\n};\n\nconst FormNode = () => {\n  const formMethods = useForm<FormInputs>({\n    defaultValues,\n    criteriaMode: \"all\",\n  });\n  const { register, control, handleSubmit, errors } = formMethods;\n  const onSubmit = handleSubmit(console.log);\n\n  return (\n    <Form formMethods={formMethods} style={{ width: \"100%\" }} direction=\"row\">\n      <Box direction=\"column\" width={\"260px\"} alignItems=\"start\">\n        <InputField\n          label=\"Username\"\n          helpText=\"Your login username.\"\n          errorText={errors.username?.message}\n          required\n        >\n          <TextField\n            ref={register({\n              required: \"Username required\",\n              minLength: { value: 4, message: \"More than 3 characters.\" },\n            })}\n            name=\"username\"\n            placeholder=\"Enter username...\"\n            error={errors.username?.message}\n          />\n        </InputField>\n        <InputField\n          label=\"Password\"\n          required\n          helpText={errors.password?.message}\n        >\n          <TextField\n            name=\"password\"\n            ref={register({ required: \"Password required\" })}\n            placeholder=\"Enter password...\"\n            type=\"password\"\n            error={errors.password?.message}\n          />\n        </InputField>\n        <InputField label=\"Applicable roles\">\n          <Combobox\n            name=\"roles\"\n            placeholder=\"Select roles...\"\n            options={rolesOptions}\n            isMulti\n          />\n        </InputField>\n        <InputField label=\"Environment\">\n          <Combobox\n            name=\"env\"\n            placeholder=\"Select environment...\"\n            options={envOptions}\n            isSearchable={false}\n          />\n        </InputField>\n\n        <InputField label=\"Environment again...\">\n          <RadioGroup\n            name=\"env2\"\n            options={[...envOptions]}\n            ref={register}\n            direction=\"row\"\n          />\n        </InputField>\n        <InputField label=\"Registration date\">\n          <Controller\n            name=\"date\"\n            as={\n              <DatePicker\n                disabledDates={[new Date(2020, 7, 21), new Date(2020, 7, 22)]}\n              />\n            }\n            control={control}\n          />\n        </InputField>\n\n        <Divider />\n        <Box justifyContent=\"space-between\">\n          <Checkbox ref={register} name=\"remember\" label=\"Keep me logged in\" />\n          <Box width=\"auto\">\n            <Button\n              value=\"Reset\"\n              variant=\"secondary\"\n              onClick={() => resetFormValues(control)}\n            />\n            <Button\n              type=\"submit\"\n              value=\"Submit\"\n              onClick={onSubmit}\n              variant=\"primary\"\n            />\n          </Box>\n        </Box>\n      </Box>\n      <FormValuesWatcher />\n    </Form>\n  );\n};\n\nexport default () => {\n  return (\n    <PageView heading=\"Form\" overflow=\"scroll\">\n      <FormNode />\n    </PageView>\n  );\n};\n"],"sourceRoot":""}