{"version":3,"file":"static/js/9663.47cf4294.chunk.js","mappings":"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","sources":["modules/components/pages/MuiPageView.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DataGridPremium, GridColDef } from \"@mui/x-data-grid-premium\";\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Button,\r\n  IMuiPageViewProps,\r\n  MuiPageView,\r\n} from \"@faharmony/mui\";\r\n\r\nimport { Sync } from \"@faharmony/mui/icons-material\";\r\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers-pro\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nconst Page = () => {\r\n  const [showToolBar, setShowToolbar] = useState(true);\r\n  const [showBackBtn, setShowBackBtn] = useState(true);\r\n  const [fullWIndow, setFullWIndow] = useState(false);\r\n  const [sticky, setSticky] = useState(true);\r\n  const [variant, setVariant] = useState(\"secondary\");\r\n\r\n  return (\r\n    <MuiPageView\r\n      headerVariant={variant as IMuiPageViewProps[\"headerVariant\"]}\r\n      fullWindow={fullWIndow}\r\n      stickyHeader={sticky}\r\n      backButton={\r\n        showBackBtn\r\n          ? {\r\n              backButtonAdditionalActions: () => {\r\n                console.log(\"Back button clicked\", showBackBtn);\r\n              },\r\n              label: \"Go back\",\r\n            }\r\n          : false\r\n      }\r\n      heading=\"SummaryView\"\r\n      actions={\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() =>\r\n              setVariant(variant === \"secondary\" ? \"primary\" : \"secondary\")\r\n            }\r\n          >\r\n            Switch variant\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() => setSticky(!sticky)}\r\n          >\r\n            Toggle sticky header\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() => setShowToolbar(!showToolBar)}\r\n          >\r\n            {showToolBar ? \"Hide tool bar\" : \"Show tool bar\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() => setShowBackBtn(!showBackBtn)}\r\n          >\r\n            {showBackBtn ? \"Hide back button\" : \"Show back button\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() => setFullWIndow(!fullWIndow)}\r\n          >\r\n            {\"Toggle full window\"}\r\n          </Button>\r\n          <IconButton>\r\n            <Sync />\r\n          </IconButton>\r\n        </>\r\n      }\r\n      toolbarContent={showToolBar ? <Toolbar /> : null}\r\n      sxProps={{ p: 0 }}\r\n    >\r\n      <Content />\r\n    </MuiPageView>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nconst Toolbar = () => {\r\n  return (\r\n    <Grid item xs={12} alignItems=\"center\">\r\n      <FormControl variant=\"outlined\" size=\"small\" sx={{ mr: 2 }}>\r\n        <InputLabel id=\"demo-simple-select-label\">Fund</InputLabel>\r\n        <Select\r\n          label=\"Fund\"\r\n          labelId=\"demo-simple-select-label\"\r\n          value=\"FA Equity Fund\"\r\n        >\r\n          <MenuItem value=\"FA Equity Fund\">FA Equity Fund</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DatePicker\r\n          label=\"Registry date\"\r\n          value={new Date()}\r\n          slotProps={{ textField: { size: \"small\" } }}\r\n          sx={{ mr: 2 }}\r\n        />\r\n      </LocalizationProvider>\r\n\r\n      <FormControlLabel\r\n        control={<Checkbox onChange={() => {}} />}\r\n        label=\"Load purchase lots\"\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Content = () => {\r\n  const columns: GridColDef[] = [\r\n    { field: \"id\", headerName: \"ID\", width: 70 },\r\n    { field: \"firstName\", headerName: \"First name\", width: 130 },\r\n    { field: \"lastName\", headerName: \"Last name\", width: 130 },\r\n    {\r\n      field: \"number\",\r\n      headerName: \"Number\",\r\n      width: 160,\r\n    },\r\n    {\r\n      field: \"units\",\r\n      headerName: \"Number\",\r\n      width: 160,\r\n    },\r\n    {\r\n      field: \"ownership\",\r\n      headerName: \"Number\",\r\n      width: 160,\r\n    },\r\n  ];\r\n\r\n  const rows = [...Array(20)].map((row, index) => {\r\n    return {\r\n      id: index + 1,\r\n      firstName: \"Firstname \" + (index + 1),\r\n      lastName: \"Lastname \" + (index + 1),\r\n      number: 12 + index,\r\n      units: index * 12,\r\n      ownership: (index + 1) / 12,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <DataGridPremium\r\n      rows={rows}\r\n      columns={columns}\r\n      initialState={{\r\n        pagination: {\r\n          paginationModel: { page: 0, pageSize: 5 },\r\n        },\r\n      }}\r\n      pageSizeOptions={[5, 10]}\r\n    />\r\n  );\r\n};\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","showToolBar","setShowToolbar","_useState3","_useState4","showBackBtn","setShowBackBtn","_useState5","_useState6","fullWIndow","setFullWIndow","_useState7","_useState8","sticky","setSticky","_useState9","_useState10","variant","setVariant","_jsx","MuiPageView","headerVariant","fullWindow","stickyHeader","backButton","backButtonAdditionalActions","console","log","label","heading","actions","_jsxs","_Fragment","children","Button","sx","mr","onClick","IconButton","Sync","toolbarContent","Toolbar","sxProps","p","Content","Grid","item","xs","alignItems","FormControl","size","InputLabel","id","Select","labelId","value","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","Date","slotProps","textField","FormControlLabel","control","Checkbox","onChange","rows","_toConsumableArray","Array","map","row","index","firstName","lastName","number","units","ownership","DataGridPremium","columns","field","headerName","width","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions"],"sourceRoot":""}