{"version":3,"file":"static/js/5507.6d857f0d.chunk.js","mappings":"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","sources":["modules/welcome/index.ts","modules/welcome/pages/MainPage.tsx","modules/welcome/pages/Routes.tsx","modules/welcome/state/index.ts","modules/welcome/state/reducers.ts","modules/welcome/state/store.ts"],"sourcesContent":["/**\r\n * MODULE\r\n * ------\r\n * This is the module configuration\r\n * -- Change required here --\r\n *\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n * @copyright FA Solutions Oy\r\n */\r\n\r\nimport * as Components from \"./pages\";\r\nimport { faPray } from \"@faharmony/icons\";\r\nimport { IModuleProps } from \"@faharmony/module\";\r\nimport { ModuleState } from \"./state\";\r\n// import { appRoles } from \"../../config\";\r\n\r\n/**\r\n * Should match the Module folder name\r\n */\r\nexport const ModuleId: string = \"welcome\";\r\n\r\n// /**\r\n//  * List of roles to restrict access.\r\n//  * Empty array for unrestricted access.\r\n//  */\r\nconst ModuleRoles: IModuleProps[\"roles\"] = [];\r\n\r\n/**\r\n * Icon of the Module. Visible in Menu.\r\n */\r\nconst ModuleIcon: IModuleProps[\"icon\"] = faPray;\r\n\r\nconst subModules: IModuleProps[\"subModules\"] = [];\r\n\r\n/**\r\n * -------------------\r\n * DO NOT CHANGE BELOW\r\n * -------------------\r\n */\r\nexport default {\r\n  id: ModuleId,\r\n  label: \"Components\",\r\n  roles: ModuleRoles,\r\n  icon: ModuleIcon,\r\n  component: Components.Routes,\r\n  subModules,\r\n  state: ModuleState,\r\n} as IModuleProps;\r\n","/** i18n-ally useTranslation(\"welcome\") */\r\n\r\nimport { useModule } from \"@faharmony/module\";\r\nimport { PageView } from \"@faharmony/views\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { Text, Button, RingLoader } from \"@faharmony/components\";\r\nimport {\r\n  ModuleActions,\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n  useDispatch,\r\n} from \"../state\";\r\nimport { useHistory, useRouteMatch } from \"@faharmony/router\";\r\n\r\nexport const Redux = () => {\r\n  const { t } = useModule();\r\n  const dispatch = useDispatch();\r\n  const state2 = useModuleStateSelector((state) => state.loading);\r\n  const state = useModuleState();\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Box direction=\"column\">\r\n      <Box justifyContent=\"flex-start\">\r\n        <Box width=\"auto\">\r\n          <Button\r\n            value=\"Start\"\r\n            onClick={() => dispatch(ModuleActions.startLoading())}\r\n          />\r\n          <Button\r\n            value=\"Stop\"\r\n            onClick={() => dispatch(ModuleActions.stopLoading())}\r\n          />\r\n          <Button\r\n            value=\"Toggle\"\r\n            onClick={() => dispatch(ModuleActions.setLoading(!state.loading))}\r\n          />\r\n          <Button\r\n            value={\"Open custom path\"}\r\n            onClick={() => history.push(path + \"/pages\")}\r\n          ></Button>\r\n        </Box>\r\n        {state.loading && <RingLoader />}\r\n        <Text value={t(\"loading\")} />\r\n      </Box>\r\n      <pre>\r\n        {JSON.stringify(state, null, 2)}\r\n        {JSON.stringify(state2, null, 2)}\r\n      </pre>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// const ApolloRest = () => {\r\n//   const query = gql`\r\n//     query Roles {\r\n//       groups @rest(type: \"Group\", path: \"groups\", endpoint: \"keycloak\") {\r\n//         id\r\n//         name\r\n//         realmRoles\r\n//         clientRoles\r\n//         subGroups\r\n//         attributes\r\n//       }\r\n//     }\r\n//   `;\r\n//   const { data, loading, error } = useQuery(query);\r\n//   console.dir(data);\r\n//   return (\r\n//     <div>\r\n//       {loading\r\n//         ? \"Loading...\"\r\n//         : error\r\n//         ? \"Error\"\r\n//         : JSON.stringify(data.groups, null, 2)}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Counter = () => {\r\n//   const [count, setCount] = React.useState(0);\r\n//   React.useEffect(() => {\r\n//     const t = setInterval(() => setCount((c) => c + 1), 1000);\r\n//     return () => {\r\n//       clearInterval(t);\r\n//     };\r\n//   }, []);\r\n//   return <Center>{count}</Center>;\r\n// };\r\n\r\n/**\r\n * Default page of module\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const MainPage = () => {\r\n  const { t } = useModule();\r\n\r\n  // const tabs: ITabFormProps[] = [\r\n  //   {\r\n  //     id: \"1\",\r\n  //     label: \"Preview NAV\",\r\n  //     content: <Center>1</Center>,\r\n  //     defaultActive: true,\r\n  //   },\r\n  //   {\r\n  //     id: \"2\",\r\n  //     label: \"Portfolio\",\r\n  //     content: <Counter />,\r\n  //     // disabled: true,\r\n  //   },\r\n  //   { id: \"3\", label: \"Warnings\", content: <Center>3</Center> },\r\n  // ];\r\n\r\n  // const { TabBar } = useTabs([...tabs]);\r\n  // const openSide = () =>\r\n  //   setAppSideDrawer({\r\n  //     caption: \"Calculated nav\",\r\n  //     heading: \"FA Equity +\",\r\n  //     toolbarContent: <div />,\r\n  //     tabs,\r\n  //   });\r\n\r\n  // setTimeout(openSide, 100);\r\n\r\n  return (\r\n    <PageView\r\n      caption={\"Test\"}\r\n      heading={t(\"moduleName\")}\r\n      toolbarContent={<Text variant=\"h4\" value=\"Harmony\" />}\r\n      // actions={<ButtonPopover value=\"Open\" onClick={openSide} spacing=\"sm\" />}\r\n      children={<Redux />}\r\n    />\r\n  );\r\n};\r\n\r\n// is FA Solutions' framework for React-app development\r\n","// formio:MainPage\r\n/** i18n-ally useTranslation(\"formio\") */\r\nimport { Button } from \"@faharmony/components\";\r\n// Embed form builder here https://github.com/formio/react-formio#formbuilder\r\n// api:MainPage\r\n/** i18n-ally useTranslation(\"api\") */\r\n\r\nimport {\r\n  Route,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n  Switch,\r\n} from \"@faharmony/router\";\r\nimport React from \"react\";\r\nimport { MainPage } from \"./MainPage\";\r\nimport { Box } from \"@faharmony/theme\";\r\nimport { PageView } from \"@faharmony/views\";\r\n/**\r\n * Default page of module\r\n * @author Siddhant Gupta <siddhant@fasolutions.com>\r\n */\r\nexport const Routes = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route exact path={path + \"/pages/:id\"} key={\"pageId\"}>\r\n        <CustomPage />\r\n      </Route>\r\n      <Route exact path={path + \"/pages\"} key={\"test\"}>\r\n        <CustomPageList />\r\n      </Route>\r\n      {/* Module landing page */}\r\n      <Route exact path={path}>\r\n        <MainPage />;\r\n      </Route>\r\n      {/**If no routes match */}\r\n      <Route>\r\n        <PageView heading=\"Page not found\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n\r\nexport const CustomPageList = () => {\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Box direction=\"column\">\r\n      <Button value={\"Back\"} onClick={() => history.goBack()}></Button>\r\n      <Box justifyContent=\"flex-start\">\r\n        <Box width=\"auto\" direction=\"column\">\r\n          <Button\r\n            value={\"Page 1\"}\r\n            onClick={() => history.push(path + \"/page1\")}\r\n          ></Button>\r\n          <Button\r\n            value={\"Page 2\"}\r\n            onClick={() => history.push(path + \"/page2\")}\r\n          ></Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const CustomPage = () => {\r\n  let { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n  return (\r\n    <Box direction=\"column\">\r\n      <Button value={\"Back\"} onClick={() => history.goBack()}></Button>\r\n      <Box justifyContent=\"flex-start\"> {`This is page ${id}`}</Box>\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  createModuleState,\r\n  createUseModuleStateHook,\r\n  useDispatch,\r\n} from \"@faharmony/state\";\r\nimport { initialState, IState } from \"./store\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst ModuleId = \"welcome\";\r\n\r\nconst ModuleState = createModuleState({\r\n  name: ModuleId,\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nconst { actions: ModuleActions } = ModuleState;\r\n\r\nconst {\r\n  useModuleState,\r\n  useModuleStateSelector,\r\n} = createUseModuleStateHook<IState>(ModuleId);\r\nexport { useDispatch };\r\nexport { ModuleState, ModuleActions, useModuleState, useModuleStateSelector };\r\nexport * from \"./store\";\r\n","import { CaseReducer, PayloadAction } from \"@faharmony/state\";\r\nimport { addToast } from \"@faharmony/core\";\r\nimport { uuid } from \"@faharmony/helpers\";\r\nimport { IState } from \"./store\";\r\n\r\ntype Reducer = CaseReducer<IState>;\r\ntype ReducerWithPayload<T extends any> = CaseReducer<IState, PayloadAction<T>>;\r\n\r\nconst startLoading: Reducer = (state) => {\r\n  state.loading = true;\r\n  addToast({ id: uuid(), title: \"start loading\" });\r\n};\r\n\r\nconst stopLoading: Reducer = (state) => {\r\n  state.loading = false;\r\n  addToast({ id: uuid(), title: \"stop loading\" });\r\n};\r\n\r\nconst setLoading: ReducerWithPayload<boolean> = (state, { payload }) => {\r\n  state.loading = payload;\r\n};\r\n\r\nexport { startLoading, stopLoading, setLoading };\r\n","export interface IState {\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: IState = { loading: true };\r\n"],"names":["ModuleId","ModuleIcon","faPray","id","label","roles","icon","component","Components","subModules","state","ModuleState","Redux","t","useModule","dispatch","useDispatch","state2","useModuleStateSelector","loading","useModuleState","history","useHistory","path","useRouteMatch","_jsxs","Box","direction","children","justifyContent","width","_jsx","Button","value","onClick","ModuleActions","startLoading","stopLoading","setLoading","push","RingLoader","Text","JSON","stringify","MainPage","PageView","caption","heading","toolbarContent","variant","Routes","Switch","Route","exact","CustomPage","CustomPageList","goBack","useParams","concat","createModuleState","name","initialState","reducers","actions","createUseModuleStateHook","addToast","uuid","title","_ref","payload"],"sourceRoot":""}